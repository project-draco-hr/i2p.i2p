{
  int port=0;
  InetAddress host=null;
  this.lock=lock;
  this.tg=null;
  this.database=database;
  this.info=info;
  this._log=_log;
  this.database.getReadLock();
  this.info.getReadLock();
  N=this.info.get("NICKNAME").toString();
  prikey=new ByteArrayInputStream((byte[])info.get("KEYS"));
  Properties R=(Properties)info.get("PROPERTIES");
  Properties Q=new Properties();
  Lifted.copyProperties(R,Q);
  this.database.releaseReadLock();
  this.info.releaseReadLock();
  this.database.getReadLock();
  this.info.getReadLock();
  this.go_out=info.exists("OUTPORT");
  this.come_in=info.exists("INPORT");
  if (this.come_in) {
    port=Integer.parseInt(info.get("INPORT").toString());
    host=InetAddress.getByName(info.get("INHOST").toString());
  }
  this.database.releaseReadLock();
  this.info.releaseReadLock();
  socketManager=I2PSocketManagerFactory.createManager(prikey,Q);
  if (this.come_in) {
    this.listener=new ServerSocket(port,backlog,host);
  }
  this.database.getWriteLock();
  this.info.getWriteLock();
  this.info.add("STARTING",new Boolean(true));
  this.info.releaseWriteLock();
  this.database.releaseWriteLock();
}
