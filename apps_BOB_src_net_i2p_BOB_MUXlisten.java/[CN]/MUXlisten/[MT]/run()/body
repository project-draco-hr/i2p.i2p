{
  try {
    wlock();
    try {
      info.add("RUNNING",Boolean.TRUE);
      info.add("STARTING",Boolean.FALSE);
    }
 catch (    Exception e) {
      wunlock();
      return;
    }
  }
 catch (  Exception e) {
    return;
  }
  try {
    wunlock();
  }
 catch (  Exception e) {
    return;
  }
  quit: {
    try {
      tg=new ThreadGroup(N);
      die: {
        if (go_out) {
          I2Plistener conn=new I2Plistener(socketManager,info,database,_log);
          Thread t=new Thread(tg,conn,"BOBI2Plistener " + N);
          t.start();
        }
        if (come_in) {
          TCPlistener conn=new TCPlistener(listener,socketManager,info,database,_log);
          Thread q=new Thread(tg,conn,"BOBTCPlistener" + N);
          q.start();
        }
        boolean spin=true;
        while (spin) {
          try {
            Thread.sleep(1000);
          }
 catch (          InterruptedException e) {
          }
          try {
            rlock();
            try {
              spin=info.get("STOPPING").equals(Boolean.FALSE);
            }
 catch (            Exception e) {
              runlock();
              break die;
            }
          }
 catch (          Exception e) {
            break die;
          }
          try {
            runlock();
          }
 catch (          Exception e) {
            break die;
          }
        }
        try {
          wlock();
          try {
            info.add("RUNNING",Boolean.FALSE);
          }
 catch (          Exception e) {
            wunlock();
            break die;
          }
        }
 catch (        Exception e) {
          break die;
        }
        try {
          wunlock();
        }
 catch (        Exception e) {
          break die;
        }
      }
      while (tg.activeCount() + tg.activeGroupCount() != 0) {
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException ex) {
        }
      }
      tg.destroy();
      tg=null;
    }
 catch (    Exception e) {
      break quit;
    }
  }
  socketManager.destroySocketManager();
  try {
    wlock();
    try {
      info.add("STARTING",Boolean.FALSE);
      info.add("STOPPING",Boolean.FALSE);
      info.add("RUNNING",Boolean.FALSE);
    }
 catch (    Exception e) {
      wunlock();
      return;
    }
    wunlock();
  }
 catch (  Exception e) {
    return;
  }
}
