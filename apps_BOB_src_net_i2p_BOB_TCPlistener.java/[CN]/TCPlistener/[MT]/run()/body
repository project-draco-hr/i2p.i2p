{
  boolean g=false;
  boolean spin=true;
  die: {
    try {
      rlock();
    }
 catch (    Exception e) {
      break die;
    }
    try {
      if (info.exists("OUTPORT")) {
        tgwatch=2;
      }
    }
 catch (    Exception e) {
      try {
        runlock();
      }
 catch (      Exception e2) {
        break die;
      }
      break die;
    }
    try {
      runlock();
    }
 catch (    Exception e) {
      break die;
    }
    try {
      Socket server=new Socket();
      listener.setSoTimeout(50);
      while (spin) {
        try {
          rlock();
        }
 catch (        Exception e) {
          break die;
        }
        try {
          spin=info.get("RUNNING").equals(Boolean.TRUE);
        }
 catch (        Exception e) {
          try {
            runlock();
          }
 catch (          Exception e2) {
            break die;
          }
          break die;
        }
        try {
          server=listener.accept();
          g=true;
        }
 catch (        SocketTimeoutException ste) {
          g=false;
        }
        if (g) {
          TCPtoI2P conn_c=new TCPtoI2P(socketManager,server);
          Thread t=new Thread(conn_c,"BOBTCPtoI2P");
          t.start();
          g=false;
        }
      }
      listener.close();
    }
 catch (    IOException ioe) {
      try {
        listener.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
