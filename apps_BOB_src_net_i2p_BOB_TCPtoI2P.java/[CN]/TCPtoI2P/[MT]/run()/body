{
  String line, input;
  try {
    InputStream in=sock.getInputStream();
    OutputStream out=sock.getOutputStream();
    try {
      line=Lread(in);
      input=line.toLowerCase();
      Destination dest=null;
      if (input.endsWith(".i2p")) {
        dest=I2PTunnel.destFromName(input);
        line=dest.toBase64();
      }
      dest=new Destination();
      dest.fromBase64(line);
      try {
        I2P=socketManager.connect(dest);
        I2P.setReadTimeout(0);
        InputStream Iin=I2P.getInputStream();
        OutputStream Iout=I2P.getOutputStream();
        TCPio conn_c=new TCPio(in,Iout,info);
        TCPio conn_a=new TCPio(Iin,out,info);
        Thread t=new Thread(conn_c,"TCPioA");
        Thread q=new Thread(conn_a,"TCPioB");
        t.start();
        q.start();
        while (t.isAlive() && q.isAlive()) {
          try {
            Thread.sleep(10);
          }
 catch (          InterruptedException e) {
          }
        }
      }
 catch (      I2PException e) {
        Emsg("ERROR " + e.toString(),out);
      }
catch (      ConnectException e) {
        Emsg("ERROR " + e.toString(),out);
      }
catch (      NoRouteToHostException e) {
        Emsg("ERROR " + e.toString(),out);
      }
catch (      InterruptedIOException e) {
        Emsg("ERROR " + e.toString(),out);
      }
    }
 catch (    DataFormatException e) {
      Emsg("ERROR " + e.toString(),out);
    }
catch (    NullPointerException e) {
      Emsg("ERROR " + e.toString(),out);
    }
  }
 catch (  IOException ioe) {
  }
  try {
    I2P.close();
  }
 catch (  IOException ex) {
  }
catch (  NullPointerException e) {
  }
  try {
    sock.close();
  }
 catch (  IOException ex) {
  }
catch (  NullPointerException e) {
  }
}
