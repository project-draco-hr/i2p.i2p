{
  this.subscriptions=new LinkedList();
  this.etagsFile=etagsFile;
  this.lastModifiedFile=lastModifiedFile;
  this.lastFetchedFile=lastFetchedFile;
  this.delay=delay;
  this.proxyHost=proxyHost;
  this.proxyPort=proxyPort;
  Map<String,String> etags;
  Map<String,String> lastModified;
  Map<String,String> lastFetched;
  List<String> locations=ConfigParser.parseSubscriptions(locationsFile,defaultSubs);
  try {
    etags=ConfigParser.parse(etagsFile);
  }
 catch (  IOException exp) {
    etags=new HashMap();
  }
  try {
    lastModified=ConfigParser.parse(lastModifiedFile);
  }
 catch (  IOException exp) {
    lastModified=new HashMap();
  }
  try {
    lastFetched=ConfigParser.parse(lastFetchedFile);
  }
 catch (  IOException exp) {
    lastFetched=new HashMap();
  }
  for (  String location : locations) {
    this.subscriptions.add(new Subscription(location,etags.get(location),lastModified.get(location),lastFetched.get(location)));
  }
}
