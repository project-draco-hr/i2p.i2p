{
  finishButton=new javax.swing.JButton();
  previousButton=new javax.swing.JButton();
  settingsInfo=new javax.swing.JLabel();
  uploadLabel=new javax.swing.JLabel();
  downloadLabel=new javax.swing.JLabel();
  uploadBurstLabel=new javax.swing.JLabel();
  downloadBurstLabel=new javax.swing.JLabel();
  uploadUsageLabel=new javax.swing.JLabel();
  downloadUsageLabel=new javax.swing.JLabel();
  uploadField=new javax.swing.JTextField();
  uploadBurstField=new javax.swing.JTextField();
  downloadField=new javax.swing.JTextField();
  downloadBurstField=new javax.swing.JTextField();
  kbpsBurstDownload=new javax.swing.JComboBox();
  kbpsUpload=new javax.swing.JComboBox();
  kbpsBurstUpload=new javax.swing.JComboBox();
  kbpsDownload=new javax.swing.JComboBox();
  uploadGB=new javax.swing.JLabel();
  uploadMonth=new javax.swing.JTextField();
  downloadMonth=new javax.swing.JTextField();
  downloadGB=new javax.swing.JLabel();
  explanation=new javax.swing.JLabel();
  setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
  org.jdesktop.application.ResourceMap resourceMap=org.jdesktop.application.Application.getInstance(desktopgui.Main.class).getContext().getResourceMap(SpeedSelector3.class);
  setTitle(resourceMap.getString("Form.title"));
  setMinimumSize(new java.awt.Dimension(670,330));
  setName("Form");
  setResizable(false);
  getContentPane().setLayout(null);
  finishButton.setText(resourceMap.getString("finishButton.text"));
  finishButton.setName("finishButton");
  finishButton.addMouseListener(new java.awt.event.MouseAdapter(){
    public void mouseClicked(    java.awt.event.MouseEvent evt){
      finishButtonMouseClicked(evt);
    }
  }
);
  getContentPane().add(finishButton);
  finishButton.setBounds(440,250,90,29);
  previousButton.setText(resourceMap.getString("previousButton.text"));
  previousButton.setName("previousButton");
  previousButton.addMouseListener(new java.awt.event.MouseAdapter(){
    public void mouseClicked(    java.awt.event.MouseEvent evt){
      previousButtonMouseClicked(evt);
    }
  }
);
  getContentPane().add(previousButton);
  previousButton.setBounds(336,250,90,29);
  settingsInfo.setText(resourceMap.getString("settingsInfo.text"));
  settingsInfo.setName("settingsInfo");
  getContentPane().add(settingsInfo);
  settingsInfo.setBounds(20,30,532,17);
  uploadLabel.setText(resourceMap.getString("uploadLabel.text"));
  uploadLabel.setName("uploadLabel");
  getContentPane().add(uploadLabel);
  uploadLabel.setBounds(20,70,140,30);
  downloadLabel.setText(resourceMap.getString("downloadLabel.text"));
  downloadLabel.setName("downloadLabel");
  getContentPane().add(downloadLabel);
  downloadLabel.setBounds(340,70,160,30);
  uploadBurstLabel.setText(resourceMap.getString("uploadBurstLabel.text"));
  uploadBurstLabel.setName("uploadBurstLabel");
  getContentPane().add(uploadBurstLabel);
  uploadBurstLabel.setBounds(20,110,140,30);
  downloadBurstLabel.setText(resourceMap.getString("downloadBurstLabel.text"));
  downloadBurstLabel.setName("downloadBurstLabel");
  getContentPane().add(downloadBurstLabel);
  downloadBurstLabel.setBounds(340,110,160,30);
  uploadUsageLabel.setText(resourceMap.getString("uploadUsageLabel.text"));
  uploadUsageLabel.setName("uploadUsageLabel");
  getContentPane().add(uploadUsageLabel);
  uploadUsageLabel.setBounds(20,150,19,30);
  downloadUsageLabel.setText(resourceMap.getString("downloadUsageLabel.text"));
  downloadUsageLabel.setName("downloadUsageLabel");
  getContentPane().add(downloadUsageLabel);
  downloadUsageLabel.setBounds(340,150,19,30);
  uploadField.setText(resourceMap.getString("uploadField.text"));
  uploadField.setMinimumSize(new java.awt.Dimension(77,27));
  uploadField.setName("uploadField");
  uploadField.addKeyListener(new java.awt.event.KeyAdapter(){
    public void keyReleased(    java.awt.event.KeyEvent evt){
      speedFieldKeyReleased(evt);
    }
  }
);
  getContentPane().add(uploadField);
  uploadField.setBounds(160,70,77,27);
  uploadBurstField.setText(resourceMap.getString("uploadBurstField.text"));
  uploadBurstField.setMinimumSize(new java.awt.Dimension(77,27));
  uploadBurstField.setName("uploadBurstField");
  getContentPane().add(uploadBurstField);
  uploadBurstField.setBounds(160,110,77,27);
  downloadField.setText(resourceMap.getString("downloadField.text"));
  downloadField.setMinimumSize(new java.awt.Dimension(77,27));
  downloadField.setName("downloadField");
  downloadField.addKeyListener(new java.awt.event.KeyAdapter(){
    public void keyReleased(    java.awt.event.KeyEvent evt){
      speedFieldKeyReleased(evt);
    }
  }
);
  getContentPane().add(downloadField);
  downloadField.setBounds(500,70,77,27);
  downloadBurstField.setText(resourceMap.getString("downloadBurstField.text"));
  downloadBurstField.setMinimumSize(new java.awt.Dimension(77,27));
  downloadBurstField.setName("downloadBurstField");
  getContentPane().add(downloadBurstField);
  downloadBurstField.setBounds(500,110,77,27);
  kbpsBurstDownload.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"kbps","kBps"}));
  kbpsBurstDownload.setName("kbpsBurstDownload");
  kbpsBurstDownload.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      kbpsBurstDownloadActionPerformed(evt);
    }
  }
);
  getContentPane().add(kbpsBurstDownload);
  kbpsBurstDownload.setBounds(580,110,68,27);
  kbpsUpload.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"kbps","kBps"}));
  kbpsUpload.setName("kbpsUpload");
  kbpsUpload.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      kbpsUploadActionPerformed(evt);
    }
  }
);
  getContentPane().add(kbpsUpload);
  kbpsUpload.setBounds(240,70,68,27);
  kbpsBurstUpload.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"kbps","kBps"}));
  kbpsBurstUpload.setName("kbpsBurstUpload");
  kbpsBurstUpload.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      kbpsBurstUploadActionPerformed(evt);
    }
  }
);
  getContentPane().add(kbpsBurstUpload);
  kbpsBurstUpload.setBounds(240,110,68,27);
  kbpsDownload.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"kbps","kBps"}));
  kbpsDownload.setName("kbpsDownload");
  kbpsDownload.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      kbpsDownloadActionPerformed(evt);
    }
  }
);
  getContentPane().add(kbpsDownload);
  kbpsDownload.setBounds(580,70,68,27);
  uploadGB.setText(resourceMap.getString("uploadUsageLabel.text"));
  uploadGB.setName("uploadUsageLabel");
  getContentPane().add(uploadGB);
  uploadGB.setBounds(240,150,45,30);
  uploadMonth.setText(resourceMap.getString("uploadMonth.text"));
  uploadMonth.setName("uploadMonth");
  uploadMonth.addKeyListener(new java.awt.event.KeyAdapter(){
    public void keyReleased(    java.awt.event.KeyEvent evt){
      monthKeyReleased(evt);
    }
  }
);
  getContentPane().add(uploadMonth);
  uploadMonth.setBounds(160,150,77,27);
  downloadMonth.setText(resourceMap.getString("downloadMonth.text"));
  downloadMonth.setName("downloadMonth");
  downloadMonth.addKeyListener(new java.awt.event.KeyAdapter(){
    public void keyReleased(    java.awt.event.KeyEvent evt){
      monthKeyReleased(evt);
    }
  }
);
  getContentPane().add(downloadMonth);
  downloadMonth.setBounds(500,150,77,27);
  downloadGB.setText(resourceMap.getString("downloadUsageLabel.text"));
  downloadGB.setName("downloadUsageLabel");
  getContentPane().add(downloadGB);
  downloadGB.setBounds(580,150,19,30);
  explanation.setText(resourceMap.getString("explanation.text"));
  explanation.setName("explanation");
  getContentPane().add(explanation);
  explanation.setBounds(20,180,600,70);
  pack();
}
