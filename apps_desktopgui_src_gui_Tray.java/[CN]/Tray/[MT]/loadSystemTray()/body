{
  Image image=Toolkit.getDefaultToolkit().getImage("desktopgui/resources/logo/logo.jpg");
  PopupMenu popup=new PopupMenu();
  MenuItem browserLauncher=new MenuItem("Launch browser");
  browserLauncher.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      if (Desktop.isDesktopSupported()) {
        Desktop desktop=Desktop.getDesktop();
        try {
          if (desktop.isSupported(Desktop.Action.BROWSE)) {
            desktop.browse(new URI("http://localhost:7657"));
          }
 else {
            trayIcon.displayMessage("Browser not found","The default browser for your system was not found.",TrayIcon.MessageType.WARNING);
          }
        }
 catch (        URISyntaxException ex) {
          Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
        }
catch (        IOException ex) {
          Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
        }
      }
    }
  }
);
  MenuItem howto=new MenuItem("How to use I2P");
  howto.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      if (Desktop.isDesktopSupported()) {
        Desktop desktop=Desktop.getDesktop();
        try {
          File f=new File("desktopgui/resources/howto/howto.html");
          desktop.browse(new URI("file://" + f.getAbsolutePath()));
        }
 catch (        URISyntaxException ex) {
          Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
        }
catch (        IOException ex) {
          Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
        }
      }
    }
  }
);
  Menu config=new Menu("Configuration");
  MenuItem speedConfig=new MenuItem("Speed");
  speedConfig.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      (new SpeedSelector()).setVisible(true);
    }
  }
);
  MenuItem advancedConfig=new MenuItem("Advanced Configuration");
  advancedConfig.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      if (Desktop.isDesktopSupported()) {
        Desktop desktop=Desktop.getDesktop();
        try {
          desktop.browse(new URI("http://localhost:7657/config.jsp"));
        }
 catch (        URISyntaxException ex) {
          Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
        }
catch (        IOException ex) {
          Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
        }
      }
    }
  }
);
  MenuItem viewLog=new MenuItem("View log");
  viewLog.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent arg0){
      new LogViewer();
    }
  }
);
  MenuItem shutdown=new MenuItem("Shutdown I2P");
  shutdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      RouterHandler.setStatus(RouterHandler.SHUTDOWN_GRACEFULLY);
      long shutdownTime=RouterHelper.getGracefulShutdownTimeRemaining();
      System.out.println(shutdownTime);
      if (shutdownTime > 0)       trayIcon.displayMessage("Shutting down...","Shutdown time remaining: " + shutdownTime / 1000 + " seconds.",TrayIcon.MessageType.INFO);
 else       trayIcon.displayMessage("Shutting down...","Shutting down immediately.",TrayIcon.MessageType.INFO);
    }
  }
);
  popup.add(browserLauncher);
  popup.add(howto);
  config.add(speedConfig);
  config.add(advancedConfig);
  popup.add(config);
  popup.add(viewLog);
  popup.add(shutdown);
  trayIcon=new TrayIcon(image,"I2P: the anonymous network",popup);
  try {
    tray.add(trayIcon);
  }
 catch (  AWTException ex) {
    Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null,ex);
  }
}
