{
  tunnelNameLabel=new javax.swing.JLabel();
  tunnelTypeLabel=new javax.swing.JLabel();
  tunnelPortLabel=new javax.swing.JLabel();
  tunnelDestinationLabel=new javax.swing.JLabel();
  tunnelProfileLabel=new javax.swing.JLabel();
  delayConnect=new javax.swing.JCheckBox();
  sharedClient=new javax.swing.JCheckBox();
  autoStart=new javax.swing.JCheckBox();
  jSeparator1=new javax.swing.JSeparator();
  tunnelDepthLabel=new javax.swing.JLabel();
  depthVarianceLabel=new javax.swing.JLabel();
  tunnelCountLabel=new javax.swing.JLabel();
  backupTunnelCountLabel=new javax.swing.JLabel();
  jSeparator2=new javax.swing.JSeparator();
  reduceIdle=new javax.swing.JCheckBox();
  closeIdle=new javax.swing.JCheckBox();
  delayIdle=new javax.swing.JCheckBox();
  jSeparator3=new javax.swing.JSeparator();
  save=new javax.swing.JButton();
  cancel=new javax.swing.JButton();
  tunnelName=new javax.swing.JTextField();
  tunnelType=new javax.swing.JLabel();
  tunnelPort=new javax.swing.JTextField();
  tunnelDestination=new javax.swing.JTextField();
  tunnelProfile=new javax.swing.JComboBox();
  tunnelDepth=new javax.swing.JComboBox();
  depthVariance=new javax.swing.JComboBox();
  tunnelCount=new javax.swing.JComboBox();
  backupTunnelCount=new javax.swing.JComboBox();
  changeTunnelState=new javax.swing.JButton();
  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
  org.jdesktop.application.ResourceMap resourceMap=org.jdesktop.application.Application.getInstance(net.i2p.desktopgui.desktopgui.Main.class).getContext().getResourceMap(ClientTunnelWindow.class);
  setTitle(resourceMap.getString("Form.title"));
  setName("Form");
  getContentPane().setLayout(null);
  tunnelNameLabel.setText(resourceMap.getString("tunnelNameLabel.text"));
  tunnelNameLabel.setName("tunnelNameLabel");
  getContentPane().add(tunnelNameLabel);
  tunnelNameLabel.setBounds(20,20,120,17);
  tunnelTypeLabel.setText(resourceMap.getString("tunnelTypeLabel.text"));
  tunnelTypeLabel.setName("tunnelTypeLabel");
  getContentPane().add(tunnelTypeLabel);
  tunnelTypeLabel.setBounds(20,50,120,17);
  tunnelPortLabel.setText(resourceMap.getString("tunnelPortLabel.text"));
  tunnelPortLabel.setName("tunnelPortLabel");
  getContentPane().add(tunnelPortLabel);
  tunnelPortLabel.setBounds(20,80,110,17);
  tunnelDestinationLabel.setText(resourceMap.getString("tunnelDestinationLabel.text"));
  tunnelDestinationLabel.setName("tunnelDestinationLabel");
  getContentPane().add(tunnelDestinationLabel);
  tunnelDestinationLabel.setBounds(20,110,110,17);
  tunnelProfileLabel.setText(resourceMap.getString("tunnelProfileLabel.text"));
  tunnelProfileLabel.setName("tunnelProfileLabel");
  getContentPane().add(tunnelProfileLabel);
  tunnelProfileLabel.setBounds(20,140,110,17);
  delayConnect.setText(resourceMap.getString("delayConnect.text"));
  delayConnect.setName("delayConnect");
  getContentPane().add(delayConnect);
  delayConnect.setBounds(20,170,160,22);
  sharedClient.setText(resourceMap.getString("sharedClient.text"));
  sharedClient.setName("sharedClient");
  getContentPane().add(sharedClient);
  sharedClient.setBounds(20,200,160,22);
  autoStart.setText(resourceMap.getString("autoStart.text"));
  autoStart.setName("autoStart");
  getContentPane().add(autoStart);
  autoStart.setBounds(20,230,160,22);
  jSeparator1.setName("jSeparator1");
  getContentPane().add(jSeparator1);
  jSeparator1.setBounds(0,510,750,10);
  tunnelDepthLabel.setText(resourceMap.getString("tunnelDepthLabel.text"));
  tunnelDepthLabel.setName("tunnelDepthLabel");
  getContentPane().add(tunnelDepthLabel);
  tunnelDepthLabel.setBounds(20,280,160,17);
  depthVarianceLabel.setText(resourceMap.getString("depthVarianceLabel.text"));
  depthVarianceLabel.setName("depthVarianceLabel");
  getContentPane().add(depthVarianceLabel);
  depthVarianceLabel.setBounds(20,310,160,17);
  tunnelCountLabel.setText(resourceMap.getString("tunnelCountLabel.text"));
  tunnelCountLabel.setName("tunnelCountLabel");
  getContentPane().add(tunnelCountLabel);
  tunnelCountLabel.setBounds(20,340,160,17);
  backupTunnelCountLabel.setText(resourceMap.getString("backupTunnelCountLabel.text"));
  backupTunnelCountLabel.setName("backupTunnelCountLabel");
  getContentPane().add(backupTunnelCountLabel);
  backupTunnelCountLabel.setBounds(20,370,170,17);
  jSeparator2.setName("jSeparator2");
  getContentPane().add(jSeparator2);
  jSeparator2.setBounds(0,260,750,10);
  reduceIdle.setText(resourceMap.getString("reduceIdle.text"));
  reduceIdle.setName("reduceIdle");
  getContentPane().add(reduceIdle);
  reduceIdle.setBounds(20,420,300,22);
  closeIdle.setText(resourceMap.getString("closeIdle.text"));
  closeIdle.setName("closeIdle");
  getContentPane().add(closeIdle);
  closeIdle.setBounds(20,450,370,22);
  delayIdle.setText(resourceMap.getString("delayIdle.text"));
  delayIdle.setName("delayIdle");
  getContentPane().add(delayIdle);
  delayIdle.setBounds(20,480,400,22);
  jSeparator3.setName("jSeparator3");
  getContentPane().add(jSeparator3);
  jSeparator3.setBounds(0,400,760,10);
  save.setText(resourceMap.getString("save.text"));
  save.setName("save");
  save.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      saveActionPerformed(evt);
    }
  }
);
  getContentPane().add(save);
  save.setBounds(10,520,44,29);
  cancel.setText(resourceMap.getString("cancel.text"));
  cancel.setName("cancel");
  cancel.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cancelActionPerformed(evt);
    }
  }
);
  getContentPane().add(cancel);
  cancel.setBounds(60,520,55,29);
  tunnelName.setText(resourceMap.getString("tunnelName.text"));
  tunnelName.setName("tunnelName");
  getContentPane().add(tunnelName);
  tunnelName.setBounds(200,20,340,27);
  tunnelType.setText(resourceMap.getString("tunnelType.text"));
  tunnelType.setName("tunnelType");
  getContentPane().add(tunnelType);
  tunnelType.setBounds(200,50,340,20);
  tunnelPort.setText(resourceMap.getString("tunnelPort.text"));
  tunnelPort.setName("tunnelPort");
  getContentPane().add(tunnelPort);
  tunnelPort.setBounds(200,70,340,27);
  tunnelDestination.setText(resourceMap.getString("tunnelDestination.text"));
  tunnelDestination.setName("tunnelDestination");
  getContentPane().add(tunnelDestination);
  tunnelDestination.setBounds(200,100,340,27);
  tunnelProfile.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Interactive connection (Instant messaging)","Bulk connection (Downloads, websites...)"}));
  tunnelProfile.setName("tunnelProfile");
  getContentPane().add(tunnelProfile);
  tunnelProfile.setBounds(200,130,340,27);
  tunnelDepth.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"0 hop tunnel (no anonymity, low latency)","1 hop tunnel (low anonymity, low latency)","2 hop tunnel (medium anonymity, medium latency)","3 hop tunnel (high anonymity, high latency)"}));
  tunnelDepth.setName("tunnelDepth");
  getContentPane().add(tunnelDepth);
  tunnelDepth.setBounds(200,280,350,27);
  depthVariance.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"0 hop variance (no random, good performance)","+ 0-1 hop variance (slightly random, lower performance)","+ 0-2 hop variance (very random, lower performance)","+/- 0-1 hop variance (slightly random, standard performance)","+/- 0-2 hop variance (not recommended)"}));
  depthVariance.setName("depthVariance");
  getContentPane().add(depthVariance);
  depthVariance.setBounds(200,310,350,27);
  tunnelCount.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"1 tunnel (low bandwidth usage, low reliability)","2 tunnels (standard bandwidth usage, standard reliability)","3 tunnels (high bandwidth usage, high reliability)"}));
  tunnelCount.setName("tunnelCount");
  getContentPane().add(tunnelCount);
  tunnelCount.setBounds(200,340,350,27);
  backupTunnelCount.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"0 backup tunnels (no redundancy, no resource usage)","1 backup tunnel (low redundancy, low resource usage)","2 backup tunnels (medium redundancy, medium resource usage)","3 backup tunnels (high redundancy, high resource usage)"}));
  backupTunnelCount.setName("backupTunnelCount");
  getContentPane().add(backupTunnelCount);
  backupTunnelCount.setBounds(200,370,350,27);
  changeTunnelState.setText(resourceMap.getString("changeTunnelState.text"));
  changeTunnelState.setName("changeTunnelState");
  getContentPane().add(changeTunnelState);
  changeTunnelState.setBounds(160,520,150,29);
  pack();
}
