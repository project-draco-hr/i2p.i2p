{
  if ((clientConfig == null) || (peerNum < 0))   return false;
  String peerVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_PEER);
  String statFileVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_STATFILE);
  String statDurationVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_STATDURATION);
  String statFrequencyVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_STATFREQUENCY);
  String sendFrequencyVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_SENDFREQUENCY);
  String sendSizeVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_SENDSIZE);
  String commentVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_COMMENT);
  String periodsVal=clientConfig.getProperty(PROP_PREFIX + peerNum + PROP_AVERAGEPERIODS);
  if ((peerVal == null) || (statFileVal == null) || (statDurationVal == null)|| (statFrequencyVal == null)|| (sendFrequencyVal == null)|| (sendSizeVal == null)) {
    if (_log.shouldLog(Log.DEBUG)) {
      _log.debug("Peer number " + peerNum + " does not exist");
    }
    return false;
  }
  try {
    int duration=getInt(statDurationVal);
    int statFreq=getInt(statFrequencyVal);
    int sendFreq=getInt(sendFrequencyVal);
    int sendSize=getInt(sendSizeVal);
    if ((duration <= 0) || (statFreq <= 0) || (sendFreq < 0)|| (sendSize <= 0)) {
      if (_log.shouldLog(Log.WARN)) {
        _log.warn("Invalid client config: duration [" + statDurationVal + "] stat frequency ["+ statFrequencyVal+ "] send frequency ["+ sendFrequencyVal+ "] send size ["+ sendSizeVal+ "]");
      }
      return false;
    }
    statFileVal=statFileVal.trim();
    if (statFileVal.length() <= 0) {
      if (_log.shouldLog(Log.WARN)) {
        _log.warn("Stat file is blank for peer " + peerNum);
      }
      return false;
    }
    Destination d=new Destination();
    d.fromBase64(peerVal);
    if (commentVal == null) {
      commentVal="";
    }
    commentVal=commentVal.trim();
    commentVal=commentVal.replace('\n','_');
    List periods=new ArrayList(4);
    if (periodsVal != null) {
      StringTokenizer tok=new StringTokenizer(periodsVal);
      while (tok.hasMoreTokens()) {
        String periodVal=tok.nextToken();
        int minutes=getInt(periodVal);
        if (minutes > 0) {
          periods.add(new Integer(minutes));
        }
      }
    }
    int avgPeriods[]=new int[periods.size()];
    for (int i=0; i < periods.size(); i++) {
      avgPeriods[i]=((Integer)periods.get(i)).intValue();
    }
    _comment=commentVal;
    _statDuration=duration;
    _statFrequency=statFreq;
    _sendFrequency=sendFreq;
    _sendSize=sendSize;
    _statFile=statFileVal;
    _peer=d;
    _averagePeriods=avgPeriods;
    return true;
  }
 catch (  DataFormatException dfe) {
    _log.error("Peer destination for " + peerNum + " was invalid: "+ peerVal);
    return false;
  }
}
