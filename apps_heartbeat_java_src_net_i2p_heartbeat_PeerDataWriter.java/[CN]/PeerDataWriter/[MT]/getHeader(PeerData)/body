{
  StringBuffer buf=new StringBuffer(1024);
  buf.append("peer         \t").append(data.getConfig().getPeer().calculateHash().toBase64()).append('\n');
  buf.append("local        \t").append(data.getConfig().getUs().calculateHash().toBase64()).append('\n');
  buf.append("peerDest     \t").append(data.getConfig().getPeer().toBase64()).append('\n');
  buf.append("localDest    \t").append(data.getConfig().getUs().toBase64()).append('\n');
  buf.append("numTunnelHops\t").append(data.getConfig().getNumHops()).append('\n');
  buf.append("comment      \t").append(data.getConfig().getComment()).append('\n');
  buf.append("sendFrequency\t").append(data.getConfig().getSendFrequency()).append('\n');
  buf.append("sendSize     \t").append(data.getConfig().getSendSize()).append('\n');
  buf.append("sessionStart \t").append(getTime(data.getSessionStart())).append('\n');
  buf.append("currentTime  \t").append(getTime(Clock.getInstance().now())).append('\n');
  buf.append("numPending   \t").append(data.getPendingCount()).append('\n');
  buf.append("lifetimeSent \t").append(data.getLifetimeSent()).append('\n');
  buf.append("lifetimeRecv \t").append(data.getLifetimeReceived()).append('\n');
  int periods[]=data.getAveragePeriods();
  buf.append("#averages\tminutes\tsendMs\trecvMs\tnumLost\troundTrip\n");
  for (int i=0; i < periods.length; i++) {
    buf.append("periodAverage\t").append(periods[i]).append('\t');
    buf.append(getNum(data.getAverageSendTime(periods[i]))).append('\t');
    buf.append(getNum(data.getAverageReceiveTime(periods[i]))).append('\t');
    buf.append(getNum(data.getLostMessages(periods[i]))).append('\t');
    double rtt=data.getAverageSendTime(periods[i]) + data.getAverageReceiveTime(periods[i]);
    buf.append(getNum(rtt)).append('\n');
  }
  return buf.toString();
}
