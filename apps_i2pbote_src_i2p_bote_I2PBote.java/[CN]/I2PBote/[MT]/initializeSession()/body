{
  File destinationKeyFile=configuration.getDestinationKeyFile();
  try {
    FileReader fileReader=new FileReader(destinationKeyFile);
    char[] destKeyBuffer=new char[(int)destinationKeyFile.length()];
    fileReader.read(destKeyBuffer);
    byte[] localDestinationKey=Base64.decode(new String(destKeyBuffer));
    ByteArrayInputStream inputStream=new ByteArrayInputStream(localDestinationKey);
    i2pSession=i2pClient.createSession(inputStream,null);
    i2pSession.connect();
  }
 catch (  IOException e) {
    log.debug("Destination key file doesn't exist or isn't readable: " + e);
  }
catch (  I2PSessionException e) {
    log.warn("Error creating I2PSession",e);
  }
  if (i2pSession == null) {
    log.debug("Creating new local destination key");
    try {
      ByteArrayOutputStream arrayStream=new ByteArrayOutputStream();
      i2pClient.createDestination(arrayStream);
      byte[] localDestinationArray=arrayStream.toByteArray();
      i2pSession=i2pClient.createSession(new ByteArrayInputStream(localDestinationArray),null);
      i2pSession.connect();
      saveLocalDestinationKeys(destinationKeyFile,localDestinationArray);
    }
 catch (    I2PException e) {
      log.error("Error creating local destination key or I2PSession.",e);
    }
catch (    IOException e) {
      log.error("Error writing local destination key to file.",e);
    }
  }
  Destination localDestination=i2pSession.getMyDestination();
  log.debug("Local destination key = " + localDestination.toBase64());
  log.debug("Local destination hash = " + localDestination.calculateHash().toBase64());
}
