{
  final File[] files=storageDir.listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.toUpperCase().endsWith(fileExtension.toUpperCase());
    }
  }
);
  log.debug(files.length + " files with the extension '" + fileExtension+ "' found in '"+ storageDir+ "'.");
  Arrays.sort(files,new Comparator<File>(){
    @Override public int compare(    File f1,    File f2){
      return (int)Math.signum(f1.lastModified() - f2.lastModified());
    }
  }
);
  return new Iterator<T>(){
    int nextIndex=0;
    @Override public boolean hasNext(){
      return nextIndex < files.length;
    }
    @Override public T next(){
      File file=files[nextIndex];
      String filePath=file.getAbsolutePath();
      log.info("Reading file: '" + filePath + "'");
      try {
        T nextElement=createFolderElement(file);
        nextElement.setFile(file);
        nextIndex++;
        return nextElement;
      }
 catch (      Exception e) {
        log.error("Can't create a FolderElement from file: " + filePath,e);
        return null;
      }
    }
    @Override public void remove(){
      throw new UnsupportedOperationException("Use the Folder instance to delete a folder element.");
    }
  }
;
}
