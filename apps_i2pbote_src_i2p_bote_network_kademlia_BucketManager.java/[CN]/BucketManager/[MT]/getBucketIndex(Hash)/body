{
  int lowEnd=0;
  int highEnd=kBuckets.size();
  BigInteger keyValue=new BigInteger(key.getData());
  while (lowEnd < highEnd) {
    int centerIndex=(highEnd + lowEnd) / 2;
    if (keyValue.compareTo(kBuckets.get(centerIndex).getStartId()) < 0)     highEnd=centerIndex;
 else     if (keyValue.compareTo(kBuckets.get(centerIndex).getEndId()) > 0)     lowEnd=centerIndex;
 else     return centerIndex;
  }
  log.error("This should never happen! No k-bucket found for hash: " + key);
  return -1;
}
