{
  depth++;
  KBucket newBucket=new KBucket(startId,pivot.subtract(BigInteger.ONE),depth,replacementCacheEnabled);
  startId=pivot;
  for (  KademliaPeer peer : peers) {
    BigInteger nodeId=new BigInteger(peer.getDestination().calculateHash().getData());
    if (nodeId.compareTo(pivot) >= 0) {
      newBucket.add(peer);
      remove(peer);
    }
  }
  return newBucket;
}
