{
  if (key.equals(_us))   return getClosest(max,toIgnore);
  List<T> rv=new ArrayList(max);
  int count=0;
  getReadLock();
  try {
    int start=pickBucket(key);
    for (int i=start; i >= 0 && count < max; i--) {
      Set<T> entries=_buckets.get(i).getEntries();
      for (      T e : entries) {
        if (!toIgnore.contains(e)) {
          rv.add(e);
          count++;
        }
      }
    }
    for (int i=start + 1; i < _buckets.size() && count < max; i++) {
      Set<T> entries=_buckets.get(i).getEntries();
      for (      T e : entries) {
        if (!toIgnore.contains(e)) {
          rv.add(e);
          count++;
        }
      }
    }
  }
  finally {
    releaseReadLock();
  }
  Comparator comp=new XORComparator(key);
  Collections.sort(rv,comp);
  int sz=rv.size();
  for (int i=sz - 1; i >= max; i--) {
    rv.remove(i);
  }
  return rv;
}
