{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Fetching [" + url + "] proxy="+ _proxyHost+ ":"+ _proxyPort+ ": "+ _shouldProxy);
  File out=null;
  try {
    out=SecureFile.createTempFile("i2psnark",null,_tmpDir);
  }
 catch (  IOException ioe) {
    _log.error("temp file error",ioe);
    if (out != null)     out.delete();
    return null;
  }
  out.deleteOnExit();
  String fetchURL=url;
  if (rewrite)   fetchURL=rewriteAnnounce(url);
  int timeout;
  if (retries < 0) {
    if (!connected())     return null;
    timeout=EEPGET_CONNECT_TIMEOUT_SHORT;
    retries=0;
  }
 else {
    timeout=EEPGET_CONNECT_TIMEOUT;
    if (!connected()) {
      if (!connect())       return null;
    }
  }
  EepGet get=new I2PSocketEepGet(_context,_manager,retries,out.getAbsolutePath(),fetchURL);
  get.addHeader("User-Agent",EEPGET_USER_AGENT);
  if (get.fetch(timeout)) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Fetch successful [" + url + "]: size="+ out.length());
    return out;
  }
 else {
    if (_log.shouldLog(Log.WARN))     _log.warn("Fetch failed [" + url + "]");
    out.delete();
    return null;
  }
}
