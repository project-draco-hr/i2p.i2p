{
  _log.debug("Creating a metaInfo: " + m,new Exception("source"));
  BEValue val=(BEValue)m.get("announce");
  if (val == null)   throw new InvalidBEncodingException("Missing announce string");
  this.announce=val.getString();
  val=(BEValue)m.get("info");
  if (val == null)   throw new InvalidBEncodingException("Missing info map");
  Map info=val.getMap();
  infoMap=info;
  val=(BEValue)info.get("name");
  if (val == null)   throw new InvalidBEncodingException("Missing name string");
  name=val.getString();
  val=(BEValue)info.get("name.utf-8");
  if (val != null)   name_utf8=val.getString();
 else   name_utf8=null;
  val=(BEValue)info.get("piece length");
  if (val == null)   throw new InvalidBEncodingException("Missing piece length number");
  piece_length=val.getInt();
  val=(BEValue)info.get("pieces");
  if (val == null)   throw new InvalidBEncodingException("Missing piece bytes");
  piece_hashes=val.getBytes();
  val=(BEValue)info.get("length");
  if (val != null) {
    length=val.getLong();
    files=null;
    files_utf8=null;
    lengths=null;
  }
 else {
    val=(BEValue)info.get("files");
    if (val == null)     throw new InvalidBEncodingException("Missing length number and/or files list");
    List list=val.getList();
    int size=list.size();
    if (size == 0)     throw new InvalidBEncodingException("zero size files list");
    files=new ArrayList(size);
    files_utf8=new ArrayList(size);
    lengths=new ArrayList(size);
    long l=0;
    for (int i=0; i < list.size(); i++) {
      Map desc=((BEValue)list.get(i)).getMap();
      val=(BEValue)desc.get("length");
      if (val == null)       throw new InvalidBEncodingException("Missing length number");
      long len=val.getLong();
      lengths.add(new Long(len));
      l+=len;
      val=(BEValue)desc.get("path");
      if (val == null)       throw new InvalidBEncodingException("Missing path list");
      List path_list=val.getList();
      int path_length=path_list.size();
      if (path_length == 0)       throw new InvalidBEncodingException("zero size file path list");
      List file=new ArrayList(path_length);
      Iterator it=path_list.iterator();
      while (it.hasNext())       file.add(((BEValue)it.next()).getString());
      files.add(file);
      val=(BEValue)desc.get("path.utf-8");
      if (val != null) {
        path_list=val.getList();
        path_length=path_list.size();
        if (path_length > 0) {
          file=new ArrayList(path_length);
          it=path_list.iterator();
          while (it.hasNext())           file.add(((BEValue)it.next()).getString());
          files_utf8.add(file);
        }
      }
    }
    length=l;
  }
  info_hash=calculateInfoHash();
}
