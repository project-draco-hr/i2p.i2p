{
  din=new DataInputStream(in);
  dout=new DataOutputStream(out);
  dout.write(19);
  dout.write("BitTorrent protocol".getBytes("UTF-8"));
  dout.writeLong(OPTION_EXTENSION);
  byte[] shared_hash=metainfo.getInfoHash();
  dout.write(shared_hash);
  dout.write(my_id);
  dout.flush();
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Wrote my shared hash and ID to " + toString());
  byte b=din.readByte();
  if (b != 19)   throw new IOException("Handshake failure, expected 19, got " + (b & 0xff) + " on "+ sock);
  byte[] bs=new byte[19];
  din.readFully(bs);
  String bittorrentProtocol=new String(bs,"UTF-8");
  if (!"BitTorrent protocol".equals(bittorrentProtocol))   throw new IOException("Handshake failure, expected " + "'Bittorrent protocol', got '" + bittorrentProtocol + "'");
  options=din.readLong();
  bs=new byte[20];
  din.readFully(bs);
  if (!Arrays.equals(shared_hash,bs))   throw new IOException("Unexpected MetaInfo hash");
  din.readFully(bs);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Read the remote side's hash and peerID fully from " + toString());
  if (options != 0) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Peer supports options 0x" + Long.toString(options,16) + ", what should we say? "+ toString());
  }
  return bs;
}
