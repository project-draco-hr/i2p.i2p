{
  if (halted) {
    peer.disconnect(false);
    return false;
  }
  boolean need_more;
  int peersize=0;
synchronized (peers) {
    peersize=peers.size();
    need_more=(!peer.isConnected()) && peersize < _util.getMaxConnections();
    Peer old=peerIDInList(peer.getPeerID(),peers);
    need_more=need_more && ((old == null) || (old.getInactiveTime() > 8 * 60 * 1000));
  }
  if (need_more) {
    _log.debug("Adding a peer " + peer.getPeerID().getAddress().calculateHash().toBase64() + " for "+ metainfo.getName(),new Exception("add/run"));
    final PeerListener listener=this;
    final BitField bitfield=storage.getBitField();
    Runnable r=new Runnable(){
      public void run(){
        peer.runConnection(_util,listener,bitfield);
      }
    }
;
    String threadName=peer.toString();
    new I2PAppThread(r,threadName).start();
    return true;
  }
  if (_log.shouldLog(Log.DEBUG)) {
    if (peer.isConnected())     _log.info("Add peer already connected: " + peer);
 else     _log.info("Connections: " + peersize + "/"+ _util.getMaxConnections()+ " not accepting extra peer: "+ peer);
  }
  return false;
}
