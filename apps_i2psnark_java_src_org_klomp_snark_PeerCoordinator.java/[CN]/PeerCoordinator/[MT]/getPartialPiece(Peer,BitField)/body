{
  if (metainfo == null)   return null;
synchronized (wantedPieces) {
    Collections.sort(partialPieces);
    for (Iterator<PartialPiece> iter=partialPieces.iterator(); iter.hasNext(); ) {
      PartialPiece pp=iter.next();
      int savedPiece=pp.getPiece();
      if (havePieces.get(savedPiece)) {
        iter.remove();
        for (        Piece piece : wantedPieces) {
          if (piece.getId() == savedPiece) {
            piece.setRequested(peer,true);
            if (_log.shouldLog(Log.INFO)) {
              _log.info("Restoring orphaned partial piece " + pp + " Partial list size now: "+ partialPieces.size());
            }
            return pp;
          }
        }
        if (_log.shouldLog(Log.WARN))         _log.warn("Partial piece " + pp + " NOT in wantedPieces??");
      }
    }
    if (_log.shouldLog(Log.WARN) && !partialPieces.isEmpty())     _log.warn("Peer " + peer + " has none of our partials "+ partialPieces);
  }
  Piece piece=wantPiece(peer,havePieces,true);
  if (piece != null) {
    return new PartialPiece(piece,metainfo.getPieceLength(piece.getId()),_util.getTempDir());
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("We have no partial piece to return");
  return null;
}
