{
  boolean more_pieces=true;
  while (more_pieces) {
    more_pieces=outstandingRequests.size() < MAX_PIPELINE;
    if (more_pieces && lastRequest == null)     more_pieces=requestNextPiece();
 else     if (more_pieces) {
      int pieceLength;
      boolean isLastChunk;
      pieceLength=metainfo.getPieceLength(lastRequest.piece);
      isLastChunk=lastRequest.off + lastRequest.len == pieceLength;
      if (isLastChunk)       more_pieces=requestNextPiece();
 else {
        int nextPiece=lastRequest.piece;
        int nextBegin=lastRequest.off + PARTSIZE;
        byte[] bs=lastRequest.bs;
        int maxLength=pieceLength - nextBegin;
        int nextLength=maxLength > PARTSIZE ? PARTSIZE : maxLength;
        Request req=new Request(nextPiece,bs,nextBegin,nextLength);
        outstandingRequests.add(req);
        if (!choked)         out.sendRequest(req);
        lastRequest=req;
      }
    }
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug(peer + " requests " + outstandingRequests);
}
