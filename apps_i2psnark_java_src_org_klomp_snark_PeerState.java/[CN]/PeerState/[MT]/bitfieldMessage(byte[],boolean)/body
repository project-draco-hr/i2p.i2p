{
  if (_log.shouldLog(Log.DEBUG)) {
    if (bitmap != null)     _log.debug(peer + " rcv bitfield bytes: " + bitmap.length);
 else     if (isAll)     _log.debug(peer + " rcv bitfield HAVE_ALL");
 else     _log.debug(peer + " rcv bitfield HAVE_NONE");
  }
synchronized (this) {
    if (bitfield != null) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Got unexpected bitfield message from " + peer);
      return;
    }
    if (metainfo == null) {
      if (bitmap != null) {
        bitfield=new BitField(bitmap,bitmap.length * 8);
      }
 else {
        if (_log.shouldLog(Log.WARN))         _log.warn("have_x w/o metainfo: " + isAll);
        if (isAll) {
          if (havesBeforeMetaInfo == null)           havesBeforeMetaInfo=new ArrayList<Integer>(1);
 else           havesBeforeMetaInfo.clear();
          havesBeforeMetaInfo.add(PIECE_ALL);
        }
      }
      return;
    }
 else {
      if (bitmap != null) {
        bitfield=new BitField(bitmap,metainfo.getPieces());
      }
 else {
        bitfield=new BitField(metainfo.getPieces());
        if (isAll)         bitfield.setAll();
      }
    }
  }
  boolean interest=listener.gotBitField(peer,bitfield);
  setInteresting(interest);
  if (bitfield.complete() && !interest) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Disconnecting seed that connects to seeds: " + peer);
    peer.disconnect(true);
  }
}
