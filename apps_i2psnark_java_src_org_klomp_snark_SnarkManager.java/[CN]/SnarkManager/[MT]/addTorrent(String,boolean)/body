{
  if ((!dontAutoStart) && !I2PSnarkUtil.instance().connected()) {
    addMessage("Connecting to I2P");
    boolean ok=I2PSnarkUtil.instance().connect();
    if (!ok) {
      addMessage("Error connecting to I2P - check your I2CP settings");
      return;
    }
  }
  File sfile=new File(filename);
  try {
    filename=sfile.getCanonicalPath();
  }
 catch (  IOException ioe) {
    _log.error("Unable to add the torrent " + filename,ioe);
    addMessage("ERR: Could not add the torrent '" + filename + "': "+ ioe.getMessage());
    return;
  }
  File dataDir=getDataDir();
  Snark torrent=null;
synchronized (_snarks) {
    torrent=(Snark)_snarks.get(filename);
    if (torrent == null) {
      FileInputStream fis=null;
      try {
        fis=new FileInputStream(sfile);
        MetaInfo info=new MetaInfo(fis);
        fis.close();
        fis=null;
        String rejectMessage=locked_validateTorrent(info);
        if (rejectMessage != null) {
          sfile.delete();
          addMessage(rejectMessage);
          return;
        }
 else {
          torrent=new Snark(filename,null,-1,null,null,false,dataDir.getPath());
          torrent.completeListener=this;
          _snarks.put(filename,torrent);
        }
      }
 catch (      IOException ioe) {
        addMessage("Torrent in " + sfile.getName() + " is invalid: "+ ioe.getMessage());
        if (sfile.exists())         sfile.delete();
        return;
      }
 finally {
        if (fis != null)         try {
          fis.close();
        }
 catch (        IOException ioe) {
        }
      }
    }
 else {
      return;
    }
  }
  File f=new File(filename);
  if (!dontAutoStart && shouldAutoStart()) {
    torrent.startTorrent();
    addMessage("Torrent added and started: '" + f.getName() + "'");
  }
 else {
    addMessage("Torrent added: '" + f.getName() + "'");
  }
}
