{
  String announce=info.getAnnounce();
  if ((!announce.startsWith("http://")) || (announce.indexOf(".i2p/") < 0))   return "Non-i2p tracker in " + info.getName() + ", deleting it";
  List files=info.getFiles();
  if ((files != null) && (files.size() > MAX_FILES_PER_TORRENT)) {
    return "Too many files in " + info.getName() + " ("+ files.size()+ "), deleting it";
  }
 else   if (info.getPieces() <= 0) {
    return "No pieces in " + info.getName() + "?  deleting it";
  }
 else   if (info.getPieceLength(0) > Storage.MAX_PIECE_SIZE) {
    return "Pieces are too large in " + info.getName() + " ("+ DataHelper.formatSize(info.getPieceLength(0))+ "B), deleting it";
  }
 else   if (info.getTotalLength() > Storage.MAX_TOTAL_SIZE) {
    System.out.println("torrent info: " + info.toString());
    List lengths=info.getLengths();
    if (lengths != null)     for (int i=0; i < lengths.size(); i++)     System.out.println("File " + i + " is "+ lengths.get(i)+ " long");
    return "Torrents larger than " + DataHelper.formatSize(Storage.MAX_TOTAL_SIZE) + "B are not supported yet (because we're paranoid): "+ info.getName()+ ", deleting it";
  }
 else {
    return null;
  }
}
