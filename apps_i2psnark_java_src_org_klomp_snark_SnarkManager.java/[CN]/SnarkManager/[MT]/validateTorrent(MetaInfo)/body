{
  List<List<String>> files=info.getFiles();
  if ((files != null) && (files.size() > MAX_FILES_PER_TORRENT)) {
    return _t("Too many files in \"{0}\" ({1})!",info.getName(),files.size());
  }
 else   if ((files == null) && (info.getName().endsWith(".torrent"))) {
    return _t("Torrent file \"{0}\" cannot end in \".torrent\"!",info.getName());
  }
 else   if (info.getPieces() <= 0) {
    return _t("No pieces in \"{0}\"!",info.getName());
  }
 else   if (info.getPieces() > Storage.MAX_PIECES) {
    return _t("Too many pieces in \"{0}\", limit is {1}!",info.getName(),Storage.MAX_PIECES);
  }
 else   if (info.getPieceLength(0) > Storage.MAX_PIECE_SIZE) {
    return _t("Pieces are too large in \"{0}\" ({1}B)!",info.getName(),DataHelper.formatSize2(info.getPieceLength(0))) + ' ' + _t("Limit is {0}B",DataHelper.formatSize2(Storage.MAX_PIECE_SIZE));
  }
 else   if (info.getTotalLength() <= 0) {
    return _t("Torrent \"{0}\" has no data!",info.getName());
  }
 else   if (info.getTotalLength() > Storage.MAX_TOTAL_SIZE) {
    System.out.println("torrent info: " + info.toString());
    List<Long> lengths=info.getLengths();
    if (lengths != null)     for (int i=0; i < lengths.size(); i++)     System.out.println("File " + i + " is "+ lengths.get(i)+ " long.");
    return _t("Torrents larger than {0}B are not supported yet \"{1}\"!",Storage.MAX_TOTAL_SIZE,info.getName());
  }
 else {
    return null;
  }
}
