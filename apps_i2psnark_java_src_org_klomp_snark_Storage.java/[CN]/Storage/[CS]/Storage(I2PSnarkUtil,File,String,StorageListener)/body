{
  _util=util;
  this.listener=listener;
  getFiles(baseFile);
  long total=0;
  ArrayList<Long> lengthsList=new ArrayList();
  for (int i=0; i < lengths.length; i++) {
    long length=lengths[i];
    total+=length;
    lengthsList.add(Long.valueOf(length));
  }
  piece_size=MIN_PIECE_SIZE;
  pieces=(int)((total - 1) / piece_size) + 1;
  while (pieces > MAX_PIECES && piece_size < MAX_PIECE_SIZE) {
    piece_size=piece_size * 2;
    pieces=(int)((total - 1) / piece_size) + 1;
  }
  byte[] piece_hashes=new byte[20 * pieces];
  bitfield=new BitField(pieces);
  needed=0;
  List<List<String>> files=new ArrayList();
  for (int i=0; i < names.length; i++) {
    List<String> file=new ArrayList();
    StringTokenizer st=new StringTokenizer(names[i],File.separator);
    while (st.hasMoreTokens()) {
      String part=st.nextToken();
      file.add(part);
    }
    files.add(file);
  }
  if (files.size() == 1) {
    files=null;
    lengthsList=null;
  }
  metainfo=new MetaInfo(announce,baseFile.getName(),null,files,lengthsList,piece_size,piece_hashes,total);
}
