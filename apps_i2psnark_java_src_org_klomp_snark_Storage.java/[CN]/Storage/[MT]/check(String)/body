{
  File base=new File(rootDir,filterName(metainfo.getName()));
  long savedTime=SnarkManager.instance().getSavedTorrentTime(metainfo);
  BitField savedBitField=SnarkManager.instance().getSavedTorrentBitField(metainfo);
  boolean useSavedBitField=savedTime > 0 && savedBitField != null;
  List files=metainfo.getFiles();
  if (files == null) {
    Snark.debug("Creating/Checking file: " + base,Snark.NOTICE);
    if (!base.createNewFile() && !base.exists())     throw new IOException("Could not create file " + base);
    lengths=new long[1];
    rafs=new RandomAccessFile[1];
    names=new String[1];
    lengths[0]=metainfo.getTotalLength();
    if (useSavedBitField) {
      long lm=base.lastModified();
      if (lm <= 0 || lm > savedTime)       useSavedBitField=false;
    }
    if (base.exists() && !base.canWrite())     rafs[0]=new RandomAccessFile(base,"r");
 else     rafs[0]=new RandomAccessFile(base,"rw");
    names[0]=base.getName();
  }
 else {
    Snark.debug("Creating/Checking directory: " + base,Snark.NOTICE);
    if (!base.mkdir() && !base.isDirectory())     throw new IOException("Could not create directory " + base);
    List ls=metainfo.getLengths();
    int size=files.size();
    long total=0;
    lengths=new long[size];
    rafs=new RandomAccessFile[size];
    names=new String[size];
    for (int i=0; i < size; i++) {
      File f=createFileFromNames(base,(List)files.get(i));
      lengths[i]=((Long)ls.get(i)).longValue();
      total+=lengths[i];
      if (useSavedBitField) {
        long lm=base.lastModified();
        if (lm <= 0 || lm > savedTime)         useSavedBitField=false;
      }
      if (f.exists() && !f.canWrite())       rafs[i]=new RandomAccessFile(f,"r");
 else       rafs[i]=new RandomAccessFile(f,"rw");
      names[i]=f.getName();
    }
    long metalength=metainfo.getTotalLength();
    if (total != metalength)     throw new IOException("File lengths do not add up " + total + " != "+ metalength);
  }
  if (useSavedBitField) {
    bitfield=savedBitField;
    needed=metainfo.getPieces() - bitfield.count();
    Snark.debug("Found saved state and files unchanged, skipping check",Snark.NOTICE);
  }
 else {
    checkCreateFiles();
    SnarkManager.instance().saveTorrentStatus(metainfo,bitfield);
  }
}
