{
  long bytes=0;
  for (  TorrentFile tf : _torrentFiles) {
    File f=tf.RAFfile;
    if (f.equals(file)) {
      if (complete())       return 0;
      int psz=piece_size;
      long start=bytes;
      long end=start + tf.length;
      int pc=(int)(bytes / psz);
      long rv=0;
      if (!bitfield.get(pc))       rv=Math.min(psz - (start % psz),tf.length);
      for (int j=pc + 1; (((long)j) * psz) < end && j < pieces; j++) {
        if (!bitfield.get(j)) {
          if (((long)(j + 1)) * psz < end)           rv+=psz;
 else           rv+=end - (((long)j) * psz);
        }
      }
      return rv;
    }
    bytes+=tf.length;
  }
  return -1;
}
