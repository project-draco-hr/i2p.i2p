{
  long uploaded=coordinator.getUploaded();
  long downloaded=coordinator.getDownloaded();
  long left=coordinator.getLeft();
  String event;
  if (!completed && left == 0) {
    completed=true;
    event=COMPLETED_EVENT;
  }
 else   event=NO_EVENT;
  int maxSeenPeers=0;
  for (  Tracker tr : trckrs) {
    if ((!stop) && (!tr.stop) && (completed || coordinator.needOutboundPeers() || !tr.started)&& (event.equals(COMPLETED_EVENT) || System.currentTimeMillis() > tr.lastRequestTime + tr.interval)) {
      try {
        if (!tr.started)         event=STARTED_EVENT;
        TrackerInfo info=doRequest(tr,infoHash,peerID,uploaded,downloaded,left,event);
        snark.setTrackerProblems(null);
        tr.trackerProblems=null;
        tr.registerFails=0;
        tr.consecutiveFails=0;
        if (tr.isPrimary)         consecutiveFails=0;
        runStarted=true;
        tr.started=true;
        Set<Peer> peers=info.getPeers();
        tr.seenPeers=info.getPeerCount();
        if (snark.getTrackerSeenPeers() < tr.seenPeers)         snark.setTrackerSeenPeers(tr.seenPeers);
        DHT dht=_util.getDHT();
        if (dht != null) {
          for (          Peer peer : peers) {
            dht.announce(snark.getInfoHash(),peer.getPeerID().getDestHash());
          }
        }
        if (coordinator.needOutboundPeers()) {
          List<Peer> ordered=new ArrayList(peers);
          Random r=_util.getContext().random();
          Collections.shuffle(ordered,r);
          Iterator<Peer> it=ordered.iterator();
          while ((!stop) && it.hasNext() && coordinator.needOutboundPeers()) {
            Peer cur=it.next();
            if (coordinator.addPeer(cur) && it.hasNext()) {
              int delay=r.nextInt(DELAY_RAND) + DELAY_MIN;
              try {
                Thread.sleep(delay);
              }
 catch (              InterruptedException ie) {
              }
            }
          }
        }
      }
 catch (      IOException ioe) {
        if (_log.shouldLog(Log.WARN))         _log.warn("WARNING: Could not contact tracker at '" + tr.announce + "': "+ ioe);
        tr.trackerProblems=ioe.getMessage();
        if (tr.isPrimary)         snark.setTrackerProblems(tr.trackerProblems);
        if (tr.trackerProblems.toLowerCase(Locale.US).startsWith(NOT_REGISTERED)) {
          if (tr.registerFails++ > MAX_REGISTER_FAILS)           tr.stop=true;
        }
        if (++tr.consecutiveFails == MAX_CONSEC_FAILS) {
          tr.seenPeers=0;
          if (tr.interval < LONG_SLEEP)           tr.interval=LONG_SLEEP;
        }
      }
    }
 else {
      if (_log.shouldLog(Log.INFO))       _log.info("Not announcing to " + tr.announce + " last announce was "+ new Date(tr.lastRequestTime)+ " interval is "+ DataHelper.formatDuration(tr.interval));
    }
    if ((!tr.stop) && maxSeenPeers < tr.seenPeers)     maxSeenPeers=tr.seenPeers;
  }
  return maxSeenPeers;
}
