{
  try {
    while (!stop) {
      if (!verifyConnected()) {
        stop=true;
        return;
      }
      DHT dht=_util.getDHT();
      if (dht != null && (meta == null || !meta.isPrivate()))       dht.announce(snark.getInfoHash());
      int maxSeenPeers=0;
      if (!trackers.isEmpty())       maxSeenPeers=getPeersFromTrackers(trackers);
      int p=getPeersFromPEX();
      if (p > maxSeenPeers)       maxSeenPeers=p;
      p=getPeersFromDHT();
      if (p > maxSeenPeers)       maxSeenPeers=p;
      if (trackers.isEmpty() && !backupTrackers.isEmpty() && dht != null && dht.size() < 16) {
        p=getPeersFromTrackers(backupTrackers);
        if (p > maxSeenPeers)         maxSeenPeers=p;
      }
      snark.setTrackerSeenPeers(maxSeenPeers);
      if (stop)       return;
      try {
        int delay;
        Random r=_util.getContext().random();
        int random=r.nextInt(120 * 1000);
        if (completed && runStarted)         delay=3 * SLEEP * 60* 1000 + random;
 else         if (snark.getTrackerProblems() != null && ++consecutiveFails < MAX_CONSEC_FAILS)         delay=INITIAL_SLEEP;
 else         if ((!runStarted) && _runCount < MAX_CONSEC_FAILS)         delay=INITIAL_SLEEP;
 else         delay=SLEEP * 60 * 1000 + random;
        if (delay > 20 * 1000) {
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Requeueing in " + DataHelper.formatDuration(delay) + ": "+ Thread.currentThread().getName());
          queueLoop(delay);
          return;
        }
 else         if (delay > 0) {
          Thread.sleep(delay);
        }
      }
 catch (      InterruptedException interrupt) {
      }
    }
  }
 catch (  Throwable t) {
    _log.error("TrackerClient: " + t,t);
    if (t instanceof OutOfMemoryError)     throw (OutOfMemoryError)t;
  }
}
