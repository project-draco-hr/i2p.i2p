{
  String primary=null;
  if (meta != null)   primary=meta.getAnnounce();
 else   if (additionalTrackerURL != null)   primary=additionalTrackerURL;
  Set<Hash> trackerHashes=new HashSet<Hash>(8);
  if (primary != null) {
    if (isNewValidTracker(trackerHashes,primary)) {
      trackers.add(new TCTracker(primary,true));
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Announce: [" + primary + "] infoHash: "+ infoHash);
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Skipping invalid or non-i2p announce: " + primary);
    }
  }
 else {
    _log.warn("No primary announce");
  }
  if (meta != null && !meta.isPrivate()) {
    List<List<String>> list=meta.getAnnounceList();
    if (list != null) {
      for (      List<String> llist : list) {
        for (        String url : llist) {
          if (!isNewValidTracker(trackerHashes,url))           continue;
          trackers.add(new TCTracker(url,trackers.isEmpty()));
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Additional announce (list): [" + url + "] for infoHash: "+ infoHash);
        }
      }
    }
  }
  if (meta == null || !meta.isPrivate()) {
    List<String> tlist=_util.getOpenTrackers();
    for (int i=0; i < tlist.size(); i++) {
      String url=tlist.get(i);
      if (!isNewValidTracker(trackerHashes,url))       continue;
      trackers.add(new TCTracker(url,trackers.isEmpty()));
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Additional announce: [" + url + "] for infoHash: "+ infoHash);
    }
  }
  if (trackers.isEmpty() && (meta == null || !meta.isPrivate())) {
    List<String> tlist=_util.getBackupTrackers();
    for (int i=0; i < tlist.size(); i++) {
      String url=tlist.get(i);
      if (!isNewValidTracker(trackerHashes,url))       continue;
      backupTrackers.add(new TCTracker(url,false));
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Backup announce: [" + url + "] for infoHash: "+ infoHash);
    }
    if (backupTrackers.isEmpty()) {
      backupTrackers.add(new TCTracker(DEFAULT_BACKUP_TRACKER,false));
    }
  }
  this.completed=coordinator.getLeft() == 0;
  _startedOn=_util.getContext().clock().now();
}
