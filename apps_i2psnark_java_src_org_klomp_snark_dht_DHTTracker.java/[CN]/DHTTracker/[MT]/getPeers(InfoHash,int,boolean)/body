{
  Peers peers=_torrents.get(ih);
  if (peers == null || max <= 0)   return Collections.emptyList();
  List<Peer> rv=new ArrayList<Peer>(peers.values());
  int size=rv.size();
  if (max < size)   Collections.shuffle(rv,_context.random());
  if (noSeeds) {
    int i=0;
    for (Iterator<Peer> iter=rv.iterator(); iter.hasNext(); ) {
      if (iter.next().isSeed())       iter.remove();
 else       if (++i >= max)       break;
    }
    if (max < rv.size())     rv=rv.subList(0,max);
  }
 else {
    if (max < size)     rv=rv.subList(0,max);
  }
  List rv1=rv;
  List<Hash> rv2=rv1;
  return rv2;
}
