{
  InfoHash iHash=new InfoHash(ih);
  Collection<Hash> rv=_tracker.getPeers(iHash,max);
  rv.remove(_myNodeInfo.getHash());
  if (rv.size() >= max)   return rv;
  rv=new HashSet(rv);
  long endTime=_context.clock().now() + maxWait;
  int maxNodes=12;
  List<NodeInfo> nodes=_knownNodes.findClosest(iHash,maxNodes);
  SortedSet<NodeInfo> toTry=new TreeSet(new NodeInfoComparator(iHash));
  toTry.addAll(nodes);
  Set<NodeInfo> tried=new HashSet();
  if (_log.shouldLog(Log.INFO))   _log.info("Starting getPeers for " + iHash + " with "+ nodes.size()+ " to try");
  for (int i=0; i < maxNodes; i++) {
    if (!_isRunning)     break;
    NodeInfo nInfo;
    try {
      nInfo=toTry.first();
    }
 catch (    NoSuchElementException nsee) {
      break;
    }
    toTry.remove(nInfo);
    tried.add(nInfo);
    ReplyWaiter waiter=sendGetPeers(nInfo,iHash);
    if (waiter == null)     continue;
synchronized (waiter) {
      try {
        waiter.wait(Math.max(20 * 1000,(Math.min(40 * 1000,endTime - _context.clock().now()))));
      }
 catch (      InterruptedException ie) {
      }
    }
    int replyType=waiter.getReplyCode();
    if (replyType == REPLY_NONE) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Got no reply");
    }
 else     if (replyType == REPLY_PONG) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Got pong");
    }
 else     if (replyType == REPLY_PEERS) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Got peers");
      List<Hash> reply=(List<Hash>)waiter.getReplyObject();
      if (!reply.isEmpty()) {
        for (int j=0; j < reply.size() && rv.size() < max; j++) {
          rv.add(reply.get(j));
        }
        if (_log.shouldLog(Log.INFO))         _log.info("Finished get Peers, got " + rv.size() + " from DHT, returning "+ reply.size());
        return rv;
      }
    }
 else     if (replyType == REPLY_NODES) {
      List<NodeInfo> reply=(List<NodeInfo>)waiter.getReplyObject();
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Got " + reply.size() + " nodes");
      for (      NodeInfo ni : reply) {
        if (!(ni.equals(_myNodeInfo) || tried.contains(ni) || toTry.contains(ni)))         toTry.add(ni);
      }
    }
 else     if (replyType == REPLY_NETWORK_FAIL) {
      break;
    }
 else {
      if (_log.shouldLog(Log.INFO))       _log.info("Got unexpected reply " + replyType + ": "+ waiter.getReplyObject());
    }
    if (_context.clock().now() > endTime)     break;
  }
  if (_log.shouldLog(Log.INFO))   _log.info("Finished get Peers, " + rv.size() + " from local and none from DHT");
  return rv;
}
