{
  try {
    InputStream is=new ByteArrayInputStream(payload);
    BDecoder dec=new BDecoder(is);
    BEValue bev=dec.bdecodeMap();
    Map<String,BEValue> map=bev.getMap();
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Got KRPC message " + bev.toString());
    byte[] msgIDBytes=map.get("t").getBytes();
    MsgID mID=new MsgID(msgIDBytes);
    String type=map.get("y").getString();
    if (type.equals("q") && from != null) {
      String method=map.get("q").getString();
      Map<String,BEValue> args=map.get("a").getMap();
      receiveQuery(mID,from,fromPort,method,args);
    }
 else     if (type.equals("r") || type.equals("e")) {
      ReplyWaiter waiter=_sentQueries.remove(mID);
      if (waiter != null) {
        if (type.equals("r")) {
          Map<String,BEValue> response=map.get("r").getMap();
          receiveResponse(waiter,response);
        }
 else {
          List<BEValue> error=map.get("e").getList();
          receiveError(waiter,error);
        }
      }
 else {
        if (_log.shouldLog(Log.WARN))         _log.warn("Rcvd msg with no one waiting: " + bev.toString());
      }
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Unknown msg type rcvd: " + bev.toString());
      throw new InvalidBEncodingException("Unknown type: " + type);
    }
  }
 catch (  Exception e) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Receive error for message",e);
  }
}
