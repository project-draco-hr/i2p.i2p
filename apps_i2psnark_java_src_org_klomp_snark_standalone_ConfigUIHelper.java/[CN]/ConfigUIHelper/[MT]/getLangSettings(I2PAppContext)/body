{
  String clang=Translate.getLanguage(ctx);
  String current=clang;
  String country=Translate.getCountry(ctx);
  if (country != null && country.length() > 0)   current+='_' + country;
  boolean found=false;
  for (int i=0; i < langs.length; i++) {
    if (langs[i][0].equals(current)) {
      found=true;
      break;
    }
  }
  if (!found) {
    if (country != null && country.length() > 0) {
      current=clang;
      for (int i=0; i < langs.length; i++) {
        if (langs[i][0].equals(current)) {
          found=true;
          break;
        }
      }
    }
    if (!found)     current="en";
  }
  StringBuilder buf=new StringBuilder(512);
  buf.append("<select name=\"lang\">\n");
  for (int i=0; i < langs.length; i++) {
    String lang=langs[i][0];
    if (lang.equals("xx") && !isAdvanced())     continue;
    buf.append("<option ");
    if (lang.equals(current))     buf.append(CHECKED);
    buf.append("value=\"").append(lang).append("\">");
    int under=lang.indexOf('_');
    String slang=(under > 0) ? lang.substring(0,under) : lang;
    buf.append(Translate.getDisplayLanguage(slang,langs[i][2],ctx,BUNDLE_NAME));
    String name=langs[i][3];
    if (name != null) {
      buf.append(" (").append(Translate.getString(name,ctx,COUNTRY_BUNDLE_NAME)).append(')');
    }
    buf.append("</option>\n");
  }
  buf.append("</select>\n");
  return buf.toString();
}
