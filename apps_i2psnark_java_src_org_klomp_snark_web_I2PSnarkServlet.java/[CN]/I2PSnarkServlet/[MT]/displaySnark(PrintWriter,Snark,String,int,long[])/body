{
  String filename=snark.torrent;
  File f=new File(filename);
  filename=f.getName();
  int i=filename.lastIndexOf(".torrent");
  if (i > 0)   filename=filename.substring(0,i);
  if (filename.length() > MAX_DISPLAYED_FILENAME_LENGTH)   filename=filename.substring(0,MAX_DISPLAYED_FILENAME_LENGTH) + "...";
  long total=snark.meta.getTotalLength();
  long remaining=(long)snark.storage.needed() * (long)snark.meta.getPieceLength(0);
  if (remaining > total)   remaining=total;
  long downBps=0;
  long upBps=0;
  if (snark.coordinator != null) {
    downBps=snark.coordinator.getDownloadRate();
    upBps=snark.coordinator.getUploadRate();
  }
  long remainingSeconds;
  if (downBps > 0)   remainingSeconds=remaining / downBps;
 else   remainingSeconds=-1;
  boolean isRunning=!snark.stopped;
  long uploaded=0;
  if (snark.coordinator != null) {
    uploaded=snark.coordinator.getUploaded();
    stats[0]+=snark.coordinator.getDownloaded();
  }
  stats[1]+=uploaded;
  if (isRunning) {
    stats[2]+=downBps;
    stats[3]+=upBps;
  }
  boolean isValid=snark.meta != null;
  boolean singleFile=snark.meta.getFiles() == null;
  String err=null;
  int curPeers=0;
  int knownPeers=0;
  if (snark.coordinator != null) {
    err=snark.coordinator.trackerProblems;
    curPeers=snark.coordinator.getPeerCount();
    knownPeers=snark.coordinator.trackerSeenPeers;
  }
  String statusString="Unknown";
  if (err != null) {
    if (isRunning)     statusString="TrackerErr (" + curPeers + "/"+ knownPeers+ " peers)";
 else {
      if (err.length() > MAX_DISPLAYED_ERROR_LENGTH)       err=err.substring(0,MAX_DISPLAYED_ERROR_LENGTH) + "...";
      statusString="TrackerErr (" + err + ")";
    }
  }
 else   if (remaining <= 0) {
    if (isRunning)     statusString="Seeding (" + curPeers + "/"+ knownPeers+ " peers)";
 else     statusString="Complete";
  }
 else {
    if (isRunning && curPeers > 0 && downBps > 0)     statusString="OK (" + curPeers + "/"+ knownPeers+ " peers)";
 else     if (isRunning && curPeers > 0)     statusString="Stalled (" + curPeers + "/"+ knownPeers+ " peers)";
 else     if (isRunning)     statusString="No Peers (0/" + knownPeers + ")";
 else     statusString="Stopped";
  }
  String rowClass=(row % 2 == 0 ? "snarkTorrentEven" : "snarkTorrentOdd");
  out.write("<tr class=\"" + rowClass + "\">");
  out.write("<td valign=\"top\" align=\"left\" class=\"snarkTorrentStatus " + rowClass + "\">");
  out.write(statusString + "</td>\n\t");
  out.write("<td valign=\"top\" align=\"left\" class=\"snarkTorrentName " + rowClass + "\">");
  if (remaining == 0)   out.write("<a href=\"file:///" + _manager.getDataDir().getAbsolutePath() + File.separatorChar+ snark.meta.getName()+ "\" title=\"Download the completed file\">");
  out.write(filename);
  if (remaining == 0)   out.write("</a>");
  out.write("</td>\n\t");
  out.write("<td valign=\"top\" align=\"right\" class=\"snarkTorrentETA " + rowClass + "\">");
  if (isRunning && remainingSeconds > 0)   out.write(DataHelper.formatDuration(remainingSeconds * 1000));
  out.write("</td>\n\t");
  out.write("<td valign=\"top\" align=\"right\" class=\"snarkTorrentDownloaded " + rowClass + "\">");
  if (remaining > 0)   out.write(formatSize(total - remaining) + "/" + formatSize(total));
 else   out.write(formatSize(total));
  out.write("</td>\n\t");
  out.write("<td valign=\"top\" align=\"right\" class=\"snarkTorrentUploaded " + rowClass + "\">"+ formatSize(uploaded)+ "</td>\n\t");
  out.write("<td valign=\"top\" align=\"right\" class=\"snarkTorrentRate\">");
  if (isRunning && remaining > 0)   out.write(formatSize(downBps) + "ps");
  out.write("</td>\n\t");
  out.write("<td valign=\"top\" align=\"right\" class=\"snarkTorrentRate\">");
  if (isRunning)   out.write(formatSize(upBps) + "ps");
  out.write("</td>\n\t");
  out.write("<td valign=\"top\" align=\"left\" class=\"snarkTorrentAction " + rowClass + "\">");
  if (isRunning) {
    out.write("<a href=\"" + uri + "?action=Stop&nonce="+ _nonce+ "&torrent="+ Base64.encode(snark.meta.getInfoHash())+ "\" title=\"Stop the torrent\">Stop</a>");
  }
 else {
    if (isValid)     out.write("<a href=\"" + uri + "?action=Start&nonce="+ _nonce+ "&torrent="+ Base64.encode(snark.meta.getInfoHash())+ "\" title=\"Start the torrent\">Start</a> ");
    out.write("<a href=\"" + uri + "?action=Remove&nonce="+ _nonce+ "&torrent="+ Base64.encode(snark.meta.getInfoHash())+ "\" title=\"Remove the torrent from the active list, deleting the .torrent file\">Remove</a><br />");
    out.write("<a href=\"" + uri + "?action=Delete&nonce="+ _nonce+ "&torrent="+ Base64.encode(snark.meta.getInfoHash())+ "\" title=\"Delete the .torrent file and the associated data file(s)\">Delete</a> ");
  }
  out.write("</td>\n</tr>\n");
}
