{
  if (!r.isDirectory())   return null;
  String[] ls=r.list();
  if (ls == null)   return null;
  Arrays.sort(ls,Collator.getInstance());
  StringBuilder buf=new StringBuilder(4096);
  buf.append("<HTML><HEAD><TITLE>");
  String title=URI.decodePath(base);
  if (title.startsWith("/i2psnark/"))   title=title.substring("/i2psnark/".length());
  Snark snark=null;
  try {
    String torrentName;
    int slash=title.indexOf('/');
    if (slash > 0)     torrentName=title.substring(0,slash) + ".torrent";
 else     torrentName=title + ".torrent";
    File dataDir=_manager.getDataDir();
    String torrentAbsPath=(new File(dataDir,torrentName)).getCanonicalPath();
    snark=_manager.getTorrent(torrentAbsPath);
  }
 catch (  IOException ioe) {
  }
  if (title.endsWith("/"))   title=title.substring(0,title.length() - 1);
  title=_("Torrent") + ": " + title;
  buf.append(title);
  buf.append("</TITLE>").append(HEADER).append("</HEAD><BODY>\n<div class=\"snarknavbar\">");
  buf.append(title);
  if (parent) {
    buf.append("\n<br><A HREF=\"");
    buf.append(URI.addPaths(base,"../"));
    buf.append("\"><img border=\"0\" src=\"/themes/console/images/outbound.png\"> ").append(_("Up to higher level directory")).append("</A>\n");
  }
  buf.append("</div><div class=\"page\"><div class=\"mainsection\">" + "<TABLE BORDER=0 class=\"snarkTorrents\" cellpadding=\"5px 10px\">" + "<thead><tr><th>").append(_("File")).append("</th><th>").append(_("Size")).append("</th><th>").append(_("Status")).append("</th></tr></thead>");
  for (int i=0; i < ls.length; i++) {
    String encoded=URI.encodePath(ls[i]);
    Resource item=r.addPath(ls[i]);
    String rowClass=(i % 2 == 0 ? "snarkTorrentEven" : "snarkTorrentOdd");
    buf.append("<TR class=\"").append(rowClass).append("\"><TD class=\"snarkFileName ").append(rowClass).append("\">");
    boolean complete=false;
    String status="";
    long length=item.length();
    if (item.isDirectory()) {
      complete=true;
      status="<img height=\"16\" width=\"16\" src=\"/i2psnark/_icons/tick.png\"> " + _("Directory");
    }
 else {
      if (snark == null) {
        complete=true;
        status="<img height=\"16\" width=\"16\" src=\"/i2psnark/_icons/cancel.png\"> " + _("Torrent not found?");
      }
 else {
        try {
          File f=item.getFile();
          if (f != null) {
            long remaining=snark.storage.remaining(f.getCanonicalPath());
            if (remaining < 0) {
              complete=true;
              status="<img height=\"16\" width=\"16\" src=\"/i2psnark/_icons/cancel.png\"> " + _("File not found in torrent?");
            }
 else             if (remaining == 0 || length <= 0) {
              complete=true;
              status="<img height=\"16\" width=\"16\" src=\"/i2psnark/_icons/tick.png\"> " + _("Complete");
            }
 else {
              status="<img height=\"16\" width=\"16\" src=\"/i2psnark/_icons/clock.png\"> " + (100 - (100 * remaining / length)) + "% "+ _("complete")+ " ("+ DataHelper.formatSize(remaining)+ " bytes remaining)";
            }
          }
 else {
            status="Not a file?";
          }
        }
 catch (        IOException ioe) {
          status="Not a file? " + ioe;
        }
      }
    }
    String path=URI.addPaths(base,encoded);
    if (item.isDirectory() && !path.endsWith("/"))     path=URI.addPaths(path,"/");
    String plc=path.toLowerCase();
    String icon;
    if (item.isDirectory()) {
      icon="folder";
    }
 else {
      String mime=getServletContext().getMimeType(path);
      if (mime == null)       mime="";
      if (mime.equals("text/html"))       icon="html";
 else       if (mime.equals("text/plain") || plc.endsWith(".nfo"))       icon="page";
 else       if (mime.equals("application/java-archive") || plc.endsWith(".war"))       icon="package";
 else       if (plc.endsWith(".xpi2p"))       icon="plugin";
 else       if (mime.equals("application/pdf"))       icon="page_white_acrobat";
 else       if (mime.startsWith("image/") || plc.endsWith(".ico"))       icon="photo";
 else       if (mime.startsWith("audio/") || mime.equals("application/ogg") || plc.endsWith(".flac")|| plc.endsWith(".m4a")|| plc.endsWith(".wma")|| plc.endsWith(".ape"))       icon="music";
 else       if (mime.startsWith("video/") || plc.endsWith(".mkv") || plc.endsWith(".m4v")|| plc.endsWith(".mp4"))       icon="film";
 else       if (mime.equals("application/zip") || mime.equals("application/x-gtar") || mime.equals("application/compress")|| mime.equals("application/gzip")|| mime.equals("application/x-tar")|| plc.endsWith(".rar")|| plc.endsWith(".bz2")|| plc.endsWith(".7z"))       icon="compress";
 else       if (plc.endsWith(".exe"))       icon="application";
 else       icon="bug";
    }
    if (complete) {
      buf.append("<a href=\"").append(path).append("\"><img alt=\"\" border=\"0\" ");
      if (plc.endsWith(".jpg") || plc.endsWith(".jpeg") || plc.endsWith(".png")|| plc.endsWith(".gif")|| plc.endsWith(".ico")) {
        buf.append("class=\"thumb\" src=\"").append(path).append("\"></a> ");
      }
 else {
        buf.append("height=\"16\" width=\"16\" src=\"/i2psnark/_icons/").append(icon).append(".png\"></a> ");
      }
      buf.append("<A HREF=\"");
      buf.append(path);
      buf.append("\">");
    }
 else {
      buf.append("<img height=\"16\" width=\"16\" src=\"/i2psnark/_icons/").append(icon).append(".png\"> ");
    }
    buf.append(ls[i]);
    if (complete)     buf.append("</a>");
    buf.append("</TD><TD ALIGN=right class=\"").append(rowClass).append(" snarkFileSize\">");
    if (!item.isDirectory())     buf.append(DataHelper.formatSize(length)).append(' ').append(_("Bytes"));
    buf.append("</TD><TD class=\"").append(rowClass).append(" snarkFileStatus\">");
    buf.append(status);
    buf.append("</TD></TR>\n");
  }
  buf.append("</TABLE>\n");
  buf.append("</div></div></BODY></HTML>\n");
  return buf.toString();
}
