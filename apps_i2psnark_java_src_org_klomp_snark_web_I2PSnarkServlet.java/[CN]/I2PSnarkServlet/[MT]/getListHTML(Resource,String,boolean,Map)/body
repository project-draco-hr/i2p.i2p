{
  if (!r.isDirectory())   return null;
  String[] ls=r.list();
  if (ls == null)   return null;
  Arrays.sort(ls,Collator.getInstance());
  StringBuilder buf=new StringBuilder(4096);
  buf.append(DOCTYPE + "<HTML><HEAD><TITLE>");
  String title=URI.decodePath(base);
  if (title.startsWith("/i2psnark/"))   title=title.substring("/i2psnark/".length());
  String torrentName;
  int slash=title.indexOf('/');
  if (slash > 0)   torrentName=title.substring(0,slash);
 else   torrentName=title;
  Snark snark=_manager.getTorrentByBaseName(torrentName);
  if (snark != null && postParams != null)   savePriorities(snark,postParams);
  if (title.endsWith("/"))   title=title.substring(0,title.length() - 1);
  String directory=title;
  title=_("Torrent") + ": " + title;
  buf.append(title);
  buf.append("</TITLE>").append(HEADER_A).append(_themePath).append(HEADER_B).append("<link rel=\"shortcut icon\" href=\"" + _themePath + "favicon.ico\">"+ "</HEAD><BODY>\n<center><div class=\"snarknavbar\"><a href=\"/i2psnark/\" title=\"Torrents\"");
  buf.append(" class=\"snarkRefresh\"><img alt=\"\" border=\"0\" src=\"" + _imgPath + "arrow_refresh.png\">&nbsp;&nbsp;I2PSnark</a></div></center>\n");
  if (parent)   buf.append("<div class=\"page\"><div class=\"mainsection\">");
  boolean showPriority=snark != null && snark.getStorage() != null && !snark.getStorage().complete();
  if (showPriority)   buf.append("<form action=\"").append(base).append("\" method=\"POST\">\n");
  buf.append("<TABLE BORDER=0 class=\"snarkTorrents\" ><thead>");
  if (snark != null) {
    buf.append("<tr><th colspan=\"" + (showPriority ? '4' : '3') + "\"><div>").append(_("Torrent")).append(": ").append(snark.getBaseName());
    int pieces=snark.getPieces();
    double completion=(pieces - snark.getNeeded()) / (double)pieces;
    if (completion < 1.0)     buf.append("<br>").append(_("Completion")).append(": ").append((new DecimalFormat("0.00%")).format(completion));
 else     buf.append("<br>").append(_("Complete"));
    buf.append("<br>").append(_("Size")).append(": ").append(formatSize(snark.getTotalLength()));
    MetaInfo meta=snark.getMetaInfo();
    if (meta != null) {
      List files=meta.getFiles();
      int fileCount=files != null ? files.size() : 1;
      buf.append("<br>").append(_("Files")).append(": ").append(fileCount);
    }
    buf.append("<br>").append(_("Pieces")).append(": ").append(pieces);
    buf.append("<br>").append(_("Piece size")).append(": ").append(formatSize(snark.getPieceLength(0)));
    String hex=I2PSnarkUtil.toHex(snark.getInfoHash());
    buf.append("<br>").append(_("Magnet link")).append(": <a href=\"").append(MAGNET).append(hex).append("\">").append(MAGNET).append(hex).append("</a>");
    buf.append("</div></th></tr>");
  }
  buf.append("<tr><th>").append("<img alt=\"\" border=\"0\" src=\"" + _imgPath + "file.png\" >&nbsp;").append(_("Directory")).append(": ").append(directory).append("</th><th align=\"right\">").append("<img alt=\"\" border=\"0\" src=\"" + _imgPath + "size.png\" >&nbsp;").append(_("Size"));
  buf.append("</th><th class=\"headerstatus\">").append("<img alt=\"\" border=\"0\" src=\"" + _imgPath + "status.png\" >&nbsp;").append(_("Status")).append("</th>");
  if (showPriority)   buf.append("<th class=\"headerpriority\">").append("<img alt=\"\" border=\"0\" src=\"" + _imgPath + "priority.png\" >&nbsp;").append(_("Priority")).append("</th>");
  buf.append("</tr></thead>\n");
  buf.append("<tr><td colspan=\"" + (showPriority ? '4' : '3') + "\" class=\"ParentDir\"><A HREF=\"");
  buf.append(URI.addPaths(base,"../"));
  buf.append("\"><img alt=\"\" border=\"0\" src=\"" + _imgPath + "up.png\"> ").append(_("Up to higher level directory")).append("</A></td></tr>\n");
  boolean showSaveButton=false;
  for (int i=0; i < ls.length; i++) {
    String encoded=URI.encodePath(ls[i]);
    Resource item=r.addPath(ls[i]);
    String rowClass=(i % 2 == 0 ? "snarkTorrentEven" : "snarkTorrentOdd");
    buf.append("<TR class=\"").append(rowClass).append("\"><TD class=\"snarkFileName ").append(rowClass).append("\">");
    boolean complete=false;
    String status="";
    long length=item.length();
    if (item.isDirectory()) {
      complete=true;
      status=toImg("tick") + ' ' + _("Directory");
    }
 else {
      if (snark == null || snark.getStorage() == null) {
        complete=true;
        status=toImg("cancel") + ' ' + _("Torrent not found?");
      }
 else {
        Storage storage=snark.getStorage();
        try {
          File f=item.getFile();
          if (f != null) {
            long remaining=storage.remaining(f.getCanonicalPath());
            if (remaining < 0) {
              complete=true;
              status=toImg("cancel") + ' ' + _("File not found in torrent?");
            }
 else             if (remaining == 0 || length <= 0) {
              complete=true;
              status=toImg("tick") + ' ' + _("Complete");
            }
 else {
              int priority=storage.getPriority(f.getCanonicalPath());
              if (priority < 0)               status=toImg("cancel");
 else               if (priority == 0)               status=toImg("clock");
 else               status=toImg("clock_red");
              status+=" " + (100 * (length - remaining) / length) + "% "+ _("complete")+ " ("+ DataHelper.formatSize2(remaining)+ _("bytes remaining")+ ")";
            }
          }
 else {
            status="Not a file?";
          }
        }
 catch (        IOException ioe) {
          status="Not a file? " + ioe;
        }
      }
    }
    String path=URI.addPaths(base,encoded);
    if (item.isDirectory() && !path.endsWith("/"))     path=URI.addPaths(path,"/");
    String icon=toIcon(item);
    if (complete) {
      buf.append("<a href=\"").append(path).append("\">");
      String plc=item.toString().toLowerCase();
      if (plc.endsWith(".jpg") || plc.endsWith(".jpeg") || plc.endsWith(".png")|| plc.endsWith(".gif")|| plc.endsWith(".ico")) {
        buf.append("<img alt=\"\" border=\"0\" class=\"thumb\" src=\"").append(path).append("\"></a> ");
      }
 else {
        buf.append(toImg(icon,_("Open"))).append("</a> ");
      }
      buf.append("<A HREF=\"");
      buf.append(path);
      buf.append("\">");
    }
 else {
      buf.append(toImg(icon)).append(' ');
    }
    buf.append(ls[i]);
    if (complete)     buf.append("</a>");
    buf.append("</TD><TD ALIGN=right class=\"").append(rowClass).append(" snarkFileSize\">");
    if (!item.isDirectory())     buf.append(DataHelper.formatSize2(length)).append('B');
    buf.append("</TD><TD class=\"").append(rowClass).append(" snarkFileStatus\">");
    buf.append(status);
    buf.append("</TD>");
    if (showPriority) {
      buf.append("<td class=\"priority\">");
      File f=item.getFile();
      if ((!complete) && (!item.isDirectory()) && f != null) {
        int pri=snark.getStorage().getPriority(f.getCanonicalPath());
        buf.append("<input type=\"radio\" value=\"5\" name=\"pri.").append(f.getCanonicalPath()).append("\" ");
        if (pri > 0)         buf.append("checked=\"true\"");
        buf.append('>').append(_("High"));
        buf.append("<input type=\"radio\" value=\"0\" name=\"pri.").append(f.getCanonicalPath()).append("\" ");
        if (pri == 0)         buf.append("checked=\"true\"");
        buf.append('>').append(_("Normal"));
        buf.append("<input type=\"radio\" value=\"-9\" name=\"pri.").append(f.getCanonicalPath()).append("\" ");
        if (pri < 0)         buf.append("checked=\"true\"");
        buf.append('>').append(_("Skip"));
        showSaveButton=true;
      }
      buf.append("</td>");
    }
    buf.append("</TR>\n");
  }
  if (showSaveButton) {
    buf.append("<thead><tr><th colspan=\"3\">&nbsp;</th><th align=\"center\"><input type=\"submit\" value=\"");
    buf.append(_("Save priorities"));
    buf.append("\" name=\"foo\" ></th></tr></thead>\n");
  }
  buf.append("</TABLE>\n");
  if (showPriority)   buf.append("</form>");
  buf.append("</div></div></BODY></HTML>\n");
  return buf.toString();
}
