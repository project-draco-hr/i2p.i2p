{
  req.setCharacterEncoding("UTF-8");
  resp.setCharacterEncoding("UTF-8");
  resp.setContentType("text/html; charset=UTF-8");
  long stats[]={0,0,0,0};
  String nonce=req.getParameter("nonce");
  if ((nonce != null) && (nonce.equals(String.valueOf(_nonce))))   processRequest(req);
  String peerParam=req.getParameter("p");
  String peerString;
  if (peerParam == null) {
    peerString="";
  }
 else {
    peerString="?p=" + peerParam;
  }
  PrintWriter out=resp.getWriter();
  out.write(HEADER_BEGIN);
  out.write("<meta http-equiv=\"refresh\" content=\"60;" + req.getRequestURI() + peerString+ "\">\n");
  out.write(HEADER);
  out.write("<table border=\"0\" width=\"100%\">\n");
  out.write("<tr><td width=\"20%\" class=\"snarkTitle\" valign=\"top\" align=\"left\">");
  out.write("I2PSnark<br />\n");
  out.write("<table border=\"0\" width=\"100%\">\n");
  out.write("<tr><td><a href=\"" + req.getRequestURI() + peerString+ "\" class=\"snarkRefresh\">Refresh</a>\n");
  out.write("<td><a href=\"http://forum.i2p/viewforum.php?f=21\" class=\"snarkRefresh\">Forum</a>\n");
  int count=0;
  Map trackers=_manager.getTrackers();
  for (Iterator iter=trackers.keySet().iterator(); iter.hasNext(); ) {
    String name=(String)iter.next();
    String baseURL=(String)trackers.get(name);
    int e=baseURL.indexOf('=');
    if (e < 0)     continue;
    baseURL=baseURL.substring(e + 1);
    if (count++ % 2 == 0)     out.write("<tr>");
    out.write("<td><a href=\"" + baseURL + "\" class=\"snarkRefresh\">"+ name+ "</a>\n");
  }
  if (count % 2 == 1)   out.write("<td>&nbsp;\n");
  out.write("</table>\n");
  out.write("</td><td width=\"80%\" class=\"snarkMessages\" valign=\"top\" align=\"left\"><pre>");
  List msgs=_manager.getMessages();
  for (int i=msgs.size() - 1; i >= 0; i--) {
    String msg=(String)msgs.get(i);
    out.write(msg + "\n");
  }
  out.write("</pre></td></tr></table>\n");
  List snarks=getSortedSnarks(req);
  String uri=req.getRequestURI();
  out.write(TABLE_HEADER);
  if (I2PSnarkUtil.instance().connected() && snarks.size() > 0) {
    if (peerParam != null)     out.write("(<a href=\"" + req.getRequestURI() + "\">Hide Peers</a>)<br />\n");
 else     out.write("(<a href=\"" + req.getRequestURI() + "?p=1"+ "\">Show Peers</a>)<br />\n");
  }
  out.write(TABLE_HEADER2);
  out.write("<th align=\"left\" valign=\"top\">");
  if (I2PSnarkUtil.instance().connected())   out.write("<a href=\"" + uri + "?action=StopAll&nonce="+ _nonce+ "\" title=\"Stop all torrents and the i2p tunnel\">Stop All</a>");
 else   if (snarks.size() > 0)   out.write("<a href=\"" + uri + "?action=StartAll&nonce="+ _nonce+ "\" title=\"Start all torrents and the i2p tunnel\">Start All</a>");
 else   out.write("&nbsp;");
  out.write("</th></tr></thead>\n");
  for (int i=0; i < snarks.size(); i++) {
    Snark snark=(Snark)snarks.get(i);
    boolean showPeers="1".equals(peerParam) || Base64.encode(snark.meta.getInfoHash()).equals(peerParam);
    displaySnark(out,snark,uri,i,stats,showPeers);
  }
  if (snarks.size() <= 0) {
    out.write(TABLE_EMPTY);
  }
 else   if (snarks.size() > 1) {
    out.write(TABLE_TOTAL);
    out.write("    <th align=\"right\" valign=\"top\">" + formatSize(stats[0]) + "</th>\n"+ "    <th align=\"right\" valign=\"top\">"+ formatSize(stats[1])+ "</th>\n"+ "    <th align=\"right\" valign=\"top\">"+ formatSize(stats[2])+ "ps</th>\n"+ "    <th align=\"right\" valign=\"top\">"+ formatSize(stats[3])+ "ps</th>\n"+ "    <th>&nbsp;</th></tr>\n"+ "</tfoot>\n");
  }
  out.write(TABLE_FOOTER);
  writeAddForm(out,req);
  if (true)   writeSeedForm(out,req);
  writeConfigForm(out,req);
  out.write(FOOTER);
}
