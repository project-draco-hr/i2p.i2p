{
  String uri=req.getRequestURI();
  String dataDir=_manager.getDataDir().getAbsolutePath();
  boolean autoStart=_manager.shouldAutoStart();
  boolean useOpenTrackers=_manager.util().shouldUseOpenTrackers();
  String openTrackers=_manager.util().getOpenTrackerString();
  out.write("<form action=\"/i2psnark/configure\" method=\"POST\">\n");
  out.write("<div class=\"configsectionpanel\"><div class=\"snarkConfig\">\n");
  out.write("<input type=\"hidden\" name=\"nonce\" value=\"" + _nonce + "\" >\n");
  out.write("<input type=\"hidden\" name=\"action\" value=\"Save\" >\n");
  out.write("<span class=\"snarkConfigTitle\">");
  out.write("<img alt=\"\" border=\"0\" src=\"" + _imgPath + "config.png\"> ");
  out.write(_("Configuration"));
  out.write("</span><hr>\n");
  out.write("<table border=\"0\"><tr><td>");
  out.write(_("Data directory"));
  out.write(": <td><code>" + dataDir + "</code> <i>(");
  out.write(_("Edit i2psnark.config and restart to change"));
  out.write(")</i><br>\n");
  out.write("<tr><td>");
  out.write(_("Auto start"));
  out.write(": <td><input type=\"checkbox\" class=\"optbox\" name=\"autoStart\" value=\"true\" " + (autoStart ? "checked " : "") + "title=\"");
  out.write(_("If checked, automatically start torrents that are added"));
  out.write("\" >");
  out.write("<tr><td>");
  out.write(_("Theme"));
  out.write(": <td><select name='theme'>");
  String theme=_manager.getTheme();
  String[] themes=_manager.getThemes();
  for (int i=0; i < themes.length; i++) {
    if (themes[i].equals(theme))     out.write("\n<OPTION value=\"" + themes[i] + "\" SELECTED>"+ themes[i]);
 else     out.write("\n<OPTION value=\"" + themes[i] + "\">"+ themes[i]);
  }
  out.write("</select>\n");
  out.write("<tr><td>");
  out.write(_("Startup delay"));
  out.write(": <td><input name=\"startupDelay\" size=\"3\" class=\"r\" value=\"" + _manager.util().getStartupDelay() + "\"> ");
  out.write(_("minutes"));
  out.write("<br>\n");
  out.write("<tr><td>");
  out.write(_("Total uploader limit"));
  out.write(": <td><input type=\"text\" name=\"upLimit\" class=\"r\" value=\"" + _manager.util().getMaxUploaders() + "\" size=\"3\" maxlength=\"3\" > ");
  out.write(_("peers"));
  out.write("<br>\n");
  out.write("<tr><td>");
  out.write(_("Up bandwidth limit"));
  out.write(": <td><input type=\"text\" name=\"upBW\" class=\"r\" value=\"" + _manager.util().getMaxUpBW() + "\" size=\"3\" maxlength=\"3\" > KBps <i>(");
  out.write(_("Half available bandwidth recommended."));
  out.write(" <a href=\"/config.jsp\" target=\"blank\">");
  out.write(_("View or change router bandwidth"));
  out.write("</a>)</i><br>\n");
  out.write("<tr><td>");
  out.write(_("Use open trackers also"));
  out.write(": <td><input type=\"checkbox\" class=\"optbox\" name=\"useOpenTrackers\" value=\"true\" " + (useOpenTrackers ? "checked " : "") + "title=\"");
  out.write(_("If checked, announce torrents to open trackers as well as the tracker listed in the torrent file"));
  out.write("\" > ");
  out.write("<tr><td>");
  out.write(_("Open tracker announce URLs"));
  out.write(": <td><input type=\"text\" name=\"openTrackers\" value=\"" + openTrackers + "\" size=\"50\" ><br>\n");
  Map<String,String> options=new TreeMap(_manager.util().getI2CPOptions());
  out.write("<tr><td>");
  out.write(_("Inbound Settings"));
  out.write(":<td>");
  out.write(renderOptions(1,6,options.remove("inbound.quantity"),"inbound.quantity",TUNNEL));
  out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
  out.write(renderOptions(0,4,options.remove("inbound.length"),"inbound.length",HOP));
  out.write("<tr><td>");
  out.write(_("Outbound Settings"));
  out.write(":<td>");
  out.write(renderOptions(1,6,options.remove("outbound.quantity"),"outbound.quantity",TUNNEL));
  out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
  out.write(renderOptions(0,4,options.remove("outbound.length"),"outbound.length",HOP));
  out.write("<tr><td>");
  out.write(_("I2CP host"));
  out.write(": <td><input type=\"text\" name=\"i2cpHost\" value=\"" + _manager.util().getI2CPHost() + "\" size=\"15\" > ");
  out.write("<tr><td>");
  out.write(_("I2CP port"));
  out.write(": <td><input type=\"text\" name=\"i2cpPort\" class=\"r\" value=\"" + +_manager.util().getI2CPPort() + "\" size=\"5\" maxlength=\"5\" > <br>\n");
  StringBuilder opts=new StringBuilder(64);
  for (Iterator iter=options.entrySet().iterator(); iter.hasNext(); ) {
    Map.Entry entry=(Map.Entry)iter.next();
    String key=(String)entry.getKey();
    String val=(String)entry.getValue();
    opts.append(key).append('=').append(val).append(' ');
  }
  out.write("<tr><td>");
  out.write(_("I2CP options"));
  out.write(": <td><textarea name=\"i2cpOpts\" cols=\"60\" rows=\"1\" wrap=\"off\" >" + opts.toString() + "</textarea><br>\n");
  out.write("<tr><td>&nbsp;<td><input type=\"submit\" value=\"");
  out.write(_("Save configuration"));
  out.write("\" name=\"foo\" >\n");
  out.write("</table></div></div></form>");
}
