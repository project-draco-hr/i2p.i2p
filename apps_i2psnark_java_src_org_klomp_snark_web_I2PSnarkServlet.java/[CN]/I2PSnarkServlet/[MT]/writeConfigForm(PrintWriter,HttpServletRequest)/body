{
  String uri=req.getRequestURI();
  String dataDir=_manager.getDataDir().getAbsolutePath();
  boolean autoStart=_manager.shouldAutoStart();
  boolean useOpenTrackers=_manager.util().shouldUseOpenTrackers();
  String openTrackers=_manager.util().getOpenTrackerString();
  out.write("<form action=\"" + uri + "\" method=\"POST\">\n");
  out.write("<div class=\"configsection\"><span class=\"snarkConfig\">\n");
  out.write("<input type=\"hidden\" name=\"nonce\" value=\"" + _nonce + "\" />\n");
  out.write("<span class=\"snarkConfigTitle\">Configuration:</span><br>\n");
  out.write("Data directory: <input type=\"text\" size=\"40\" name=\"dataDir\" value=\"" + dataDir + "\" ");
  out.write("title=\"Directory to store torrents and data\" disabled=\"true\" /> <i>(Edit i2psnark.config and restart to change)</i><br>\n");
  out.write("Auto start: <input type=\"checkbox\" class=\"optbox\" name=\"autoStart\" value=\"true\" " + (autoStart ? "checked " : "") + "title=\"If true, automatically start torrents that are added\" />");
  out.write("Total uploader limit: <input type=\"text\" name=\"upLimit\" value=\"" + _manager.util().getMaxUploaders() + "\" size=\"3\" maxlength=\"3\" /> peers<br>\n");
  out.write("Up bandwidth limit: <input type=\"text\" name=\"upBW\" value=\"" + _manager.util().getMaxUpBW() + "\" size=\"3\" maxlength=\"3\" /> KBps <i>(Half <a href=\"/config.jsp\" target=\"blank\">available bandwidth</a> recommended.)</i><br>\n");
  out.write("Use open trackers also: <input type=\"checkbox\" class=\"optbox\" name=\"useOpenTrackers\" value=\"true\" " + (useOpenTrackers ? "checked " : "") + "title=\"If true, uses open trackers in addition\" /> ");
  out.write("Announce URLs: <input type=\"text\" name=\"openTrackers\" value=\"" + openTrackers + "\" size=\"50\" /><br>\n");
  out.write("I2CP host: <input type=\"text\" name=\"i2cpHost\" value=\"" + _manager.util().getI2CPHost() + "\" size=\"15\" /> ");
  out.write("port: <input type=\"text\" name=\"i2cpPort\" value=\"" + +_manager.util().getI2CPPort() + "\" size=\"5\" maxlength=\"5\" /> <br>\n");
  StringBuilder opts=new StringBuilder(64);
  Map options=new TreeMap(_manager.util().getI2CPOptions());
  for (Iterator iter=options.entrySet().iterator(); iter.hasNext(); ) {
    Map.Entry entry=(Map.Entry)iter.next();
    String key=(String)entry.getKey();
    String val=(String)entry.getValue();
    opts.append(key).append('=').append(val).append(' ');
  }
  out.write("I2CP opts: <input type=\"text\" name=\"i2cpOpts\" size=\"80\" value=\"" + opts.toString() + "\" /><br>\n");
  out.write("<input type=\"submit\" value=\"Save configuration\" name=\"action\" />\n");
  out.write("</span>\n");
  out.write("</form></div>");
}
