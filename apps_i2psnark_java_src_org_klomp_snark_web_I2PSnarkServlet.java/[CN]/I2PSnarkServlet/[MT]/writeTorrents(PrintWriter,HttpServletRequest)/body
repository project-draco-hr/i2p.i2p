{
  final long stats[]={0,0,0,0,0,0};
  String peerParam=req.getParameter("p");
  String stParam=req.getParameter("st");
  List<Snark> snarks=getSortedSnarks(req);
  boolean isForm=_manager.util().connected() || !snarks.isEmpty();
  if (isForm) {
    out.write("<form action=\"_post\" method=\"POST\">\n");
    writeHiddenInputs(out,req,null);
  }
  out.write(TABLE_HEADER);
  String ua=req.getHeader("User-Agent");
  boolean isDegraded=ua != null && (ua.startsWith("Lynx") || ua.startsWith("w3m") || ua.startsWith("ELinks")|| ua.startsWith("Links")|| ua.startsWith("Dillo")|| ua.startsWith("Emacs-w3m"));
  boolean noThinsp=isDegraded || (ua != null && ua.startsWith("Opera"));
  int start=0;
  int total=snarks.size();
  if (stParam != null) {
    try {
      start=Math.max(0,Math.min(total - 1,Integer.parseInt(stParam)));
    }
 catch (    NumberFormatException nfe) {
    }
  }
  int pageSize=Math.max(_manager.getPageSize(),5);
  String currentSort=req.getParameter("sort");
  boolean showSort=total > 1;
  out.write("<tr><th>");
  String sort=("2".equals(currentSort)) ? "-2" : "2";
  if (showSort) {
    out.write("<a href=\"" + _contextPath + '/'+ getQueryString(req,null,null,sort));
    out.write("\">");
  }
  String tx=_("Status");
  out.write(toThemeImg("status",tx,showSort ? _("Sort by {0}",tx) : tx));
  if (showSort)   out.write("</a>");
  out.write("</th>\n<th>");
  if (_manager.util().connected() && !snarks.isEmpty()) {
    out.write(" <a href=\"" + _contextPath + '/');
    if (peerParam != null) {
      out.write(getQueryString(req,"",null,null));
      out.write("\">");
      tx=_("Hide Peers");
      out.write(toThemeImg("hidepeers",tx,tx));
    }
 else {
      out.write(getQueryString(req,"1",null,null));
      out.write("\">");
      tx=_("Show Peers");
      out.write(toThemeImg("showpeers",tx,tx));
    }
    out.write("</a><br>\n");
  }
  out.write("</th>\n<th colspan=\"2\" align=\"left\">");
  boolean isTypeSort=false;
  if (showSort) {
    if (currentSort == null || "0".equals(currentSort) || "1".equals(currentSort)) {
      sort="-1";
    }
 else     if ("-1".equals(currentSort)) {
      sort="12";
      isTypeSort=true;
    }
 else     if ("12".equals(currentSort)) {
      sort="-12";
      isTypeSort=true;
    }
 else {
      sort="";
    }
    out.write("<a href=\"" + _contextPath + '/'+ getQueryString(req,null,null,sort));
    out.write("\">");
  }
  tx=_("Torrent");
  out.write(toThemeImg("torrent",tx,showSort ? _("Sort by {0}",(isTypeSort ? _("File type") : tx)) : tx));
  if (showSort)   out.write("</a>");
  out.write("</th>\n<th align=\"center\">");
  if (total > 0 && (start > 0 || total > pageSize)) {
    writePageNav(out,req,start,pageSize,total,noThinsp);
  }
  out.write("</th>\n<th align=\"right\">");
  if (_manager.util().connected() && !snarks.isEmpty()) {
    if (showSort) {
      sort=("4".equals(currentSort)) ? "-4" : "4";
      out.write("<a href=\"" + _contextPath + '/'+ getQueryString(req,null,null,sort));
      out.write("\">");
    }
    tx=_("ETA");
    out.write(toThemeImg("eta",tx,showSort ? _("Sort by {0}",_("Estimated time remaining")) : _("Estimated time remaining")));
    if (showSort)     out.write("</a>");
  }
  out.write("</th>\n<th align=\"right\">");
  boolean isDlSort=false;
  if (showSort) {
    if ("5".equals(currentSort)) {
      sort="-5";
    }
 else     if ("-5".equals(currentSort)) {
      sort="6";
      isDlSort=true;
    }
 else     if ("6".equals(currentSort)) {
      sort="-6";
      isDlSort=true;
    }
 else {
      sort="5";
    }
    out.write("<a href=\"" + _contextPath + '/'+ getQueryString(req,null,null,sort));
    out.write("\">");
  }
  tx=_("RX");
  out.write(toThemeImg("head_rx",tx,showSort ? _("Sort by {0}",(isDlSort ? _("Downloaded") : _("Size"))) : _("Downloaded")));
  if (showSort)   out.write("</a>");
  out.write("</th>\n<th align=\"right\">");
  boolean isRatSort=false;
  if (!snarks.isEmpty()) {
    boolean nextRatSort=false;
    if (showSort) {
      if ("7".equals(currentSort)) {
        sort="-7";
      }
 else       if ("-7".equals(currentSort)) {
        sort="11";
        nextRatSort=true;
      }
 else       if ("11".equals(currentSort)) {
        sort="-11";
        nextRatSort=true;
        isRatSort=true;
      }
 else       if ("-11".equals(currentSort)) {
        sort="7";
        isRatSort=true;
      }
 else {
        sort="7";
      }
      out.write("<a href=\"" + _contextPath + '/'+ getQueryString(req,null,null,sort));
      out.write("\">");
    }
    tx=_("TX");
    out.write(toThemeImg("head_tx",tx,showSort ? _("Sort by {0}",(nextRatSort ? _("Upload ratio") : _("Uploaded"))) : _("Uploaded")));
    if (showSort)     out.write("</a>");
  }
  out.write("</th>\n<th align=\"right\">");
  if (_manager.util().connected() && !snarks.isEmpty()) {
    if (showSort) {
      sort=("8".equals(currentSort)) ? "-8" : "8";
      out.write("<a href=\"" + _contextPath + '/'+ getQueryString(req,null,null,sort));
      out.write("\">");
    }
    tx=_("RX Rate");
    out.write(toThemeImg("head_rxspeed",tx,showSort ? _("Sort by {0}",_("Down Rate")) : _("Down Rate")));
    if (showSort)     out.write("</a>");
  }
  out.write("</th>\n<th align=\"right\">");
  if (_manager.util().connected() && !snarks.isEmpty()) {
    if (showSort) {
      sort=("9".equals(currentSort)) ? "-9" : "9";
      out.write("<a href=\"" + _contextPath + '/'+ getQueryString(req,null,null,sort));
      out.write("\">");
    }
    tx=_("TX Rate");
    out.write(toThemeImg("head_txspeed",tx,showSort ? _("Sort by {0}",_("Up Rate")) : _("Up Rate")));
    if (showSort)     out.write("</a>");
  }
  out.write("</th>\n<th align=\"center\">");
  if (_manager.isStopping()) {
    out.write("&nbsp;");
  }
 else   if (_manager.util().connected()) {
    if (isDegraded)     out.write("<a href=\"" + _contextPath + "/?action=StopAll&amp;nonce="+ _nonce+ "\"><img title=\"");
 else {
      out.write("<input type=\"image\" name=\"action_StopAll\" value=\"foo\" title=\"");
    }
    out.write(_("Stop all torrents and the I2P tunnel"));
    out.write("\" src=\"" + _imgPath + "stop_all.png\" alt=\"");
    out.write(_("Stop All"));
    out.write("\">");
    if (isDegraded)     out.write("</a>");
    for (    Snark s : snarks) {
      if (s.isStopped()) {
        out.write("<br>");
        if (isDegraded)         out.write("<a href=\"" + _contextPath + "/?action=StartAll&amp;nonce="+ _nonce+ "\"><img title=\"");
 else         out.write("<input type=\"image\" name=\"action_StartAll\" value=\"foo\" title=\"");
        out.write(_("Start all stopped torrents"));
        out.write("\" src=\"" + _imgPath + "start_all.png\" alt=\"");
        out.write(_("Start All"));
        out.write("\">");
        if (isDegraded)         out.write("</a>");
        break;
      }
    }
  }
 else   if ((!_manager.util().isConnecting()) && !snarks.isEmpty()) {
    if (isDegraded)     out.write("<a href=\"" + _contextPath + "/?action=StartAll&amp;nonce="+ _nonce+ "\"><img title=\"");
 else     out.write("<input type=\"image\" name=\"action_StartAll\" value=\"foo\" title=\"");
    out.write(_("Start all torrents and the I2P tunnel"));
    out.write("\" src=\"" + _imgPath + "start_all.png\" alt=\"");
    out.write(_("Start All"));
    out.write("\">");
    if (isDegraded)     out.write("</a>");
  }
 else {
    out.write("&nbsp;");
  }
  out.write("</th></tr>\n");
  out.write("</thead>\n");
  String uri=_contextPath + '/';
  boolean showDebug="2".equals(peerParam);
  for (int i=0; i < total; i++) {
    Snark snark=snarks.get(i);
    boolean showPeers=showDebug || "1".equals(peerParam) || Base64.encode(snark.getInfoHash()).equals(peerParam);
    boolean hide=i < start || i >= start + pageSize;
    displaySnark(out,req,snark,uri,i,stats,showPeers,isDegraded,noThinsp,showDebug,hide,isRatSort);
  }
  if (total == 0) {
    out.write("<tr class=\"snarkTorrentNoneLoaded\">" + "<td class=\"snarkTorrentNoneLoaded\"" + " colspan=\"11\"><i>");
    out.write(_("No torrents loaded."));
    out.write("</i></td></tr>\n");
  }
 else {
    out.write("<tfoot><tr>\n" + "    <th align=\"left\" colspan=\"6\">");
    out.write("&nbsp;");
    out.write(_("Dest") + ":");
    out.write("&nbsp;");
    String IPString=_manager.util().getOurIPString();
    if (!IPString.equals("unknown")) {
      IPString="<i>" + IPString.substring(0,4) + "</i>";
    }
 else {
      IPString=IPString + ".";
    }
    out.write(IPString);
    out.write("&nbsp;");
    out.write(_("Totals"));
    out.write(":&nbsp;");
    out.write(ngettext("1 torrent","{0} torrents",total));
    out.write(", ");
    out.write(DataHelper.formatSize2(stats[5]) + "B");
    if (_manager.util().connected() && total > 0) {
      out.write(", ");
      out.write(ngettext("1 connected peer","{0} connected peers",(int)stats[4]));
    }
    DHT dht=_manager.util().getDHT();
    if (dht != null) {
      int dhts=dht.size();
      if (dhts > 0) {
        out.write(", ");
        out.write(ngettext("1 DHT peer","{0} DHT peers",dhts));
      }
      if (showDebug)       out.write(dht.renderStatusHTML());
    }
    out.write("</th>\n");
    if (_manager.util().connected() && total > 0) {
      out.write("    <th align=\"right\">" + formatSize(stats[0]) + "</th>\n"+ "    <th align=\"right\">"+ formatSize(stats[1])+ "</th>\n"+ "    <th align=\"right\">"+ formatSize(stats[2])+ "ps</th>\n"+ "    <th align=\"right\">"+ formatSize(stats[3])+ "ps</th>\n"+ "    <th></th>");
    }
 else {
      out.write("<th colspan=\"5\"></th>");
    }
    out.write("</tr></tfoot>\n");
  }
  out.write("</table>");
  if (isForm)   out.write("</form>\n");
  return start == 0;
}
