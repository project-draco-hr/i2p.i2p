{
  List<InclusiveByteRange> satRanges=null;
  headers:   while (headers.hasMoreElements()) {
    String header=(String)headers.nextElement();
    StringTokenizer tok=new StringTokenizer(header,"=,",false);
    String t=null;
    try {
      while (tok.hasMoreTokens()) {
        try {
          t=tok.nextToken().trim();
          long first=-1;
          long last=-1;
          int d=t.indexOf('-');
          if (d < 0 || t.indexOf("-",d + 1) >= 0) {
            if ("bytes".equals(t))             continue;
            continue headers;
          }
 else           if (d == 0) {
            if (d + 1 < t.length())             last=Long.parseLong(t.substring(d + 1).trim());
 else {
              continue;
            }
          }
 else           if (d + 1 < t.length()) {
            first=Long.parseLong(t.substring(0,d).trim());
            last=Long.parseLong(t.substring(d + 1).trim());
          }
 else           first=Long.parseLong(t.substring(0,d).trim());
          if (first == -1 && last == -1)           continue headers;
          if (first != -1 && last != -1 && (first > last))           continue headers;
          if (first < size) {
            if (satRanges == null)             satRanges=new ArrayList(4);
            InclusiveByteRange range=new InclusiveByteRange(first,last);
            satRanges.add(range);
          }
        }
 catch (        NumberFormatException e) {
          continue;
        }
      }
    }
 catch (    Exception e) {
    }
  }
  return satRanges;
}
