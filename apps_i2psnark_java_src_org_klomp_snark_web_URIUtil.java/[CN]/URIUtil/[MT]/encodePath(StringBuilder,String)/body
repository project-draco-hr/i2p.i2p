{
  byte[] bytes=null;
  if (buf == null) {
    loop:     for (int i=0; i < path.length(); i++) {
      char c=path.charAt(i);
switch (c) {
case '%':
case '?':
case ';':
case '#':
case '\'':
case '"':
case '<':
case '>':
case ' ':
        buf=new StringBuilder(path.length() * 2);
      break loop;
default :
    if (c >= 0x7f || c <= 0x1f) {
      bytes=DataHelper.getUTF8(path);
      buf=new StringBuilder(path.length() * 2);
      break loop;
    }
}
}
if (buf == null) return null;
}
if (bytes != null) {
for (int i=0; i < bytes.length; i++) {
byte c=bytes[i];
switch (c) {
case '%':
  buf.append("%25");
continue;
case '?':
buf.append("%3F");
continue;
case ';':
buf.append("%3B");
continue;
case '#':
buf.append("%23");
continue;
case '"':
buf.append("%22");
continue;
case '\'':
buf.append("%27");
continue;
case '<':
buf.append("%3C");
continue;
case '>':
buf.append("%3E");
continue;
case ' ':
buf.append("%20");
continue;
case 0x7f:
buf.append("%7F");
continue;
default :
if (c <= 0x1f) toHex(c,buf);
 else buf.append((char)c);
continue;
}
}
}
 else {
for (int i=0; i < path.length(); i++) {
char c=path.charAt(i);
switch (c) {
case '%':
buf.append("%25");
continue;
case '?':
buf.append("%3F");
continue;
case ';':
buf.append("%3B");
continue;
case '#':
buf.append("%23");
continue;
case '"':
buf.append("%22");
continue;
case '\'':
buf.append("%27");
continue;
case '<':
buf.append("%3C");
continue;
case '>':
buf.append("%3E");
continue;
case ' ':
buf.append("%20");
continue;
default :
if (c <= 0x1f || (c >= 0x7f && c <= 0x9f) || Character.isSpaceChar(c)) toHex(c,buf);
 else buf.append(c);
continue;
}
}
}
return buf;
}
