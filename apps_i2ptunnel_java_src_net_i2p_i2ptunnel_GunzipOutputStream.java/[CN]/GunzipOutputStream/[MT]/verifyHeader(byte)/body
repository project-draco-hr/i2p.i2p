{
  int c=b & 0xff;
switch (_state) {
case MB1:
    if (c != 0x1F)     throw new IOException("First magic byte was wrong [" + c + "]");
  _state=HeaderState.MB2;
break;
case MB2:
if (c != 0x8B) throw new IOException("Second magic byte was wrong [" + c + "]");
_state=HeaderState.CF;
break;
case CF:
if (c != 0x08) throw new IOException("Compression format is invalid [" + c + "]");
_state=HeaderState.FLAGS;
break;
case FLAGS:
_flags=c;
_state=HeaderState.MT0;
break;
case MT0:
_state=HeaderState.MT1;
break;
case MT1:
_state=HeaderState.MT2;
break;
case MT2:
_state=HeaderState.MT3;
break;
case MT3:
_state=HeaderState.EF;
break;
case EF:
if ((c != 0x00) && (c != 0x02) && (c != 0x04)) throw new IOException("Invalid extended flags [" + c + "]");
_state=HeaderState.OS;
break;
case OS:
if (0 != (_flags & (1 << 5))) _state=HeaderState.EH1;
 else if (0 != (_flags & (1 << 4))) _state=HeaderState.NAME;
 else if (0 != (_flags & (1 << 3))) _state=HeaderState.COMMENT;
 else if (0 != (_flags & (1 << 6))) _state=HeaderState.CRC1;
 else _state=HeaderState.DONE;
break;
case EH1:
_extHdrToRead=c;
_state=HeaderState.EH2;
break;
case EH2:
_extHdrToRead+=(c << 8);
if (_extHdrToRead > 0) _state=HeaderState.EHDATA;
 else if (0 != (_flags & (1 << 4))) _state=HeaderState.NAME;
if (0 != (_flags & (1 << 3))) _state=HeaderState.COMMENT;
 else if (0 != (_flags & (1 << 6))) _state=HeaderState.CRC1;
 else _state=HeaderState.DONE;
break;
case EHDATA:
if (--_extHdrToRead <= 0) {
if (0 != (_flags & (1 << 4))) _state=HeaderState.NAME;
if (0 != (_flags & (1 << 3))) _state=HeaderState.COMMENT;
 else if (0 != (_flags & (1 << 6))) _state=HeaderState.CRC1;
 else _state=HeaderState.DONE;
}
break;
case NAME:
if (c == 0) {
if (0 != (_flags & (1 << 3))) _state=HeaderState.COMMENT;
 else if (0 != (_flags & (1 << 6))) _state=HeaderState.CRC1;
 else _state=HeaderState.DONE;
}
break;
case COMMENT:
if (c == 0) {
if (0 != (_flags & (1 << 6))) _state=HeaderState.CRC1;
 else _state=HeaderState.DONE;
}
break;
case CRC1:
_state=HeaderState.CRC2;
break;
case CRC2:
_state=HeaderState.DONE;
break;
case DONE:
default :
break;
}
}
