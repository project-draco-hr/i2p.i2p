{
  if (_log.shouldLog(Log.INFO))   _log.info("Closing " + out + " threaded?? "+ shouldCompress(),new Exception("I did it"));
  PipedInputStream pi;
synchronized (this) {
    super.close();
    pi=_pipedInputStream;
  }
  if (pi != null) {
    for (int i=0; i < 50; i++) {
      if (pi.available() <= 0) {
        if (i > 0 && _log.shouldWarn())         _log.warn("Waited " + (i * 20) + " for read side to close");
        break;
      }
      try {
        Thread.sleep(20);
      }
 catch (      InterruptedException ie) {
      }
    }
  }
}
