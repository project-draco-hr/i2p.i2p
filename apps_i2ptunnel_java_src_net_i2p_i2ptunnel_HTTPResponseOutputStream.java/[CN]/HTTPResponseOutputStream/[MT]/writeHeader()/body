{
  String responseLine=null;
  boolean connectionSent=false;
  boolean proxyConnectionSent=false;
  int lastEnd=-1;
  for (int i=0; i < _headerBuffer.getValid(); i++) {
    if (isNL(_headerBuffer.getData()[i])) {
      if (lastEnd == -1) {
        responseLine=new String(_headerBuffer.getData(),0,i + 1);
        responseLine=filterResponseLine(responseLine);
        responseLine=(responseLine.trim() + "\n");
        out.write(responseLine.getBytes());
      }
 else {
        for (int j=lastEnd + 1; j < i; j++) {
          if (_headerBuffer.getData()[j] == ':') {
            String key=new String(_headerBuffer.getData(),lastEnd + 1,j - (lastEnd + 1));
            String val=new String(_headerBuffer.getData(),j + 2,i - (j + 2));
            if ("Connection".equals(key)) {
              out.write("Connection: close\n".getBytes());
              connectionSent=true;
            }
 else             if ("Proxy-Connection".equals(key)) {
              out.write("Proxy-Connection: close\n".getBytes());
              proxyConnectionSent=true;
            }
 else {
              out.write((key.trim() + ": " + val.trim()+ "\n").getBytes());
            }
            break;
          }
        }
      }
      lastEnd=i;
    }
  }
  if (!connectionSent)   out.write("Connection: close\n".getBytes());
  if (!proxyConnectionSent)   out.write("Proxy-Connection: close\n".getBytes());
  out.write("\n".getBytes());
  if (_headerBuffer.getData().length == CACHE_SIZE)   _cache.release(_headerBuffer);
 else   _headerBuffer=null;
}
