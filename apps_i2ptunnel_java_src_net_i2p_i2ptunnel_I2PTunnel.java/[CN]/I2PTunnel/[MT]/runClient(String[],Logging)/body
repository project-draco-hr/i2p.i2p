{
  if (args.length == 2) {
    int portNum=-1;
    try {
      portNum=Integer.parseInt(args[0]);
    }
 catch (    NumberFormatException nfe) {
      l.log("invalid port");
      _log.error(getPrefix() + "Port specified is not valid: " + args[0],nfe);
      notifyEvent("clientTaskId",new Integer(-1));
      return;
    }
    I2PTunnelTask task;
    try {
      task=new I2PTunnelClient(portNum,args[1],l,ownDest,(EventDispatcher)this,this);
      addtask(task);
      notifyEvent("clientTaskId",new Integer(task.getId()));
    }
 catch (    IllegalArgumentException iae) {
      _log.error(getPrefix() + "Invalid I2PTunnel config to create a client [" + host+ ":"+ port+ "]",iae);
      l.log("Invalid I2PTunnel configuration [" + host + ":"+ port+ "]");
      notifyEvent("clientTaskId",new Integer(-1));
    }
  }
 else {
    l.log("client <port> <pubkey>|file:<pubkeyfile>");
    l.log("  creates a client that forwards port to the pubkey.\n" + "  use 0 as port to get a free port assigned.");
    notifyEvent("clientTaskId",new Integer(-1));
  }
}
