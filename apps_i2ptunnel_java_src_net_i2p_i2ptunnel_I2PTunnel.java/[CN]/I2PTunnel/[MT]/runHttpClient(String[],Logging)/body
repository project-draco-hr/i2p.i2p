{
  if (args.length >= 1 && args.length <= 2) {
    int port=-1;
    try {
      port=Integer.parseInt(args[0]);
    }
 catch (    NumberFormatException nfe) {
      l.log("invalid port");
      _log.error(getPrefix() + "Port specified is not valid: " + args[0],nfe);
      notifyEvent("httpclientTaskId",new Integer(-1));
      return;
    }
    String proxy="squid.i2p";
    if (args.length == 2) {
      proxy=args[1];
    }
    I2PTunnelTask task;
    try {
      task=new I2PTunnelHTTPClient(port,l,ownDest,proxy,(EventDispatcher)this,this);
      addtask(task);
      notifyEvent("httpclientTaskId",new Integer(task.getId()));
    }
 catch (    IllegalArgumentException iae) {
      _log.error(getPrefix() + "Invalid I2PTunnel config to create an httpclient [" + host+ ":"+ port+ "]",iae);
      l.log("Invalid I2PTunnel configuration [" + host + ":"+ port+ "]");
      notifyEvent("httpclientTaskId",new Integer(-1));
    }
  }
 else {
    l.log("httpclient <port> [<proxy>]");
    l.log("  creates a client that distributes HTTP requests.");
    l.log("  <proxy> (optional) indicates a proxy server to be used");
    l.log("  when trying to access an address out of the .i2p domain");
    l.log("  (the default proxy is squid.i2p).");
    notifyEvent("httpclientTaskId",new Integer(-1));
  }
}
