{
  Log _log=tunnel.getContext().logManager().getLog(I2PTunnelClientBase.class);
  Properties props=new Properties();
  props.putAll(tunnel.getClientOptions());
  int portNum=7654;
  if (tunnel.port != null) {
    try {
      portNum=Integer.parseInt(tunnel.port);
    }
 catch (    NumberFormatException nfe) {
      throw new IllegalArgumentException("Invalid port specified [" + tunnel.port + "]",nfe);
    }
  }
  I2PSocketManager sockManager=null;
  FileInputStream fis=null;
  try {
    if (pkf != null) {
      fis=new FileInputStream(pkf);
      sockManager=I2PSocketManagerFactory.createDisconnectedManager(fis,tunnel.host,portNum,props);
    }
 else {
      sockManager=I2PSocketManagerFactory.createDisconnectedManager(null,tunnel.host,portNum,props);
    }
  }
 catch (  I2PSessionException ise) {
    throw new IllegalArgumentException("Can't create socket manager",ise);
  }
catch (  IOException ioe) {
    if (log != null)     log.log("Error opening key file " + ioe);
    _log.error("Error opening key file",ioe);
    throw new IllegalArgumentException("Error opening key file " + ioe);
  }
 finally {
    if (fis != null)     try {
      fis.close();
    }
 catch (    IOException ioe) {
    }
  }
  sockManager.setName("Client");
  if (_log.shouldLog(Log.INFO))   _log.info(tunnel.getClientOptions().getProperty("inbound.nickname") + ": Built a new socket manager [s=" + sockManager.getSession()+ "]");
  tunnel.addSession(sockManager.getSession());
  return sockManager;
}
