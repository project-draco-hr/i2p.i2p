{
  String authRequired=getTunnel().getClientOptions().getProperty(PROP_AUTH);
  if (Boolean.valueOf(authRequired).booleanValue() || (authRequired != null && "basic".equals(authRequired.toLowerCase(Locale.US)))) {
    if (s instanceof InternalSocket) {
      if (_log.shouldLog(Log.INFO))       _log.info(getPrefix(requestId) + "Internal access, no auth required");
      return true;
    }
 else     if (authorization != null) {
      byte[] decoded=Base64.decode(authorization.replace("/","~").replace("+","="));
      if (decoded != null) {
        try {
          String dec=new String(decoded,"UTF-8");
          String[] parts=dec.split(":");
          String user=parts[0];
          String pw=parts[1];
          String configPW=getTunnel().getClientOptions().getProperty(PROP_PW_PREFIX + user);
          if (configPW == null) {
            String configUser=getTunnel().getClientOptions().getProperty(PROP_USER);
            if (user.equals(configUser))             configPW=getTunnel().getClientOptions().getProperty(PROP_PW);
          }
          if (configPW != null) {
            if (pw.equals(configPW)) {
              if (_log.shouldLog(Log.INFO))               _log.info(getPrefix(requestId) + "Good auth - user: " + user+ " pw: "+ pw);
              return true;
            }
 else {
              if (_log.shouldLog(Log.WARN))               _log.warn(getPrefix(requestId) + "Bad auth, pw mismatch - user: " + user+ " pw: "+ pw+ " expected: "+ configPW);
            }
          }
 else {
            if (_log.shouldLog(Log.WARN))             _log.warn(getPrefix(requestId) + "Bad auth, no stored pw for user: " + user+ " pw: "+ pw);
          }
        }
 catch (        UnsupportedEncodingException uee) {
          _log.error(getPrefix(requestId) + "No UTF-8 support? B64: " + authorization,uee);
        }
catch (        ArrayIndexOutOfBoundsException aioobe) {
          if (_log.shouldLog(Log.WARN))           _log.warn(getPrefix(requestId) + "Bad auth B64: " + authorization,aioobe);
        }
      }
 else {
        if (_log.shouldLog(Log.WARN))         _log.warn(getPrefix(requestId) + "Bad auth B64: " + authorization);
      }
    }
    return false;
  }
 else {
    return true;
  }
}
