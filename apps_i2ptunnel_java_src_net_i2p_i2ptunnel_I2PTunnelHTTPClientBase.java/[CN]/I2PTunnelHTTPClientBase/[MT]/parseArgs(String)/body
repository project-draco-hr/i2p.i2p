{
  Map<String,String> rv=new HashMap(8);
  char data[]=args.toCharArray();
  StringBuilder buf=new StringBuilder(32);
  boolean isQuoted=false;
  String key=null;
  for (int i=0; i < data.length; i++) {
switch (data[i]) {
case '\"':
      if (isQuoted) {
        if (key != null) {
          rv.put(key,buf.toString().trim());
          key=null;
        }
        buf.setLength(0);
      }
    isQuoted=!isQuoted;
  break;
case ' ':
case '\r':
case '\n':
case '\t':
case ',':
if (isQuoted) {
  buf.append(data[i]);
}
 else {
  if (key != null) {
    rv.put(key,buf.toString().trim());
    key=null;
  }
  buf.setLength(0);
}
break;
case '=':
if (isQuoted) {
buf.append(data[i]);
}
 else {
key=buf.toString().trim().toLowerCase(Locale.US);
buf.setLength(0);
}
break;
default :
buf.append(data[i]);
break;
}
}
if (key != null) rv.put(key,buf.toString().trim());
return rv;
}
