{
  Properties headers=new Properties();
  StringBuilder buf=new StringBuilder(128);
  boolean ok=DataHelper.readLine(in,command);
  if (!ok)   throw new IOException("EOF reached while reading the HTTP command [" + command.toString() + "]");
  int trimmed=0;
  if (command.length() > 0) {
    for (int i=0; i < command.length(); i++) {
      if (command.charAt(i) == 0) {
        command=command.deleteCharAt(i);
        i--;
        trimmed++;
      }
    }
  }
  if (trimmed > 0)   ctx.statManager().addRateData("i2ptunnel.httpNullWorkaround",trimmed,0);
  int i=0;
  while (true) {
    if (++i > MAX_HEADERS)     throw new IOException("Too many header lines - max " + MAX_HEADERS);
    buf.setLength(0);
    ok=DataHelper.readLine(in,buf);
    if (!ok)     throw new IOException("EOF reached before the end of the headers [" + buf.toString() + "]");
    if ((buf.length() == 0) || ((buf.charAt(0) == '\n') || (buf.charAt(0) == '\r'))) {
      return headers;
    }
 else {
      int split=buf.indexOf(":");
      if (split <= 0)       throw new IOException("Invalid HTTP header, missing colon [" + buf.toString() + "]");
      String name=buf.substring(0,split).trim();
      String value=null;
      if (buf.length() > split + 1)       value=buf.substring(split + 1).trim();
 else       value="";
      if ("Accept-encoding".equalsIgnoreCase(name))       name="Accept-encoding";
 else       if ("X-Accept-encoding".equalsIgnoreCase(name))       name="X-Accept-encoding";
      boolean skip=false;
      for (      String skipHeader : skipHeaders) {
        if (skipHeader.equalsIgnoreCase(name)) {
          skip=true;
          break;
        }
      }
      if (skip) {
        continue;
      }
      headers.setProperty(name,value);
    }
  }
}
