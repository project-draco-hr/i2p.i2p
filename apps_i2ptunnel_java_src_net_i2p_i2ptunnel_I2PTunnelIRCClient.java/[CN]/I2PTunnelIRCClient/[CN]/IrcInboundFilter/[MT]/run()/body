{
  InputStream input;
  OutputStream output;
  try {
    input=remote.getInputStream();
    output=local.getOutputStream();
  }
 catch (  IOException e) {
    if (_log.shouldLog(Log.ERROR))     _log.error("IrcInboundFilter: no streams",e);
    return;
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("IrcInboundFilter: Running.");
  while (true) {
    try {
      String inmsg=DataHelper.readLine(input);
      if (inmsg == null)       break;
      if (inmsg.endsWith("\r"))       inmsg=inmsg.substring(0,inmsg.length() - 1);
      String outmsg=inboundFilter(inmsg);
      if (outmsg != null) {
        if (!inmsg.equals(outmsg)) {
          if (_log.shouldLog(Log.WARN)) {
            _log.warn("inbound FILTERED: " + outmsg);
            _log.warn(" - inbound was: " + inmsg);
          }
        }
 else {
          if (_log.shouldLog(Log.INFO))           _log.info("inbound: " + outmsg);
        }
        outmsg=outmsg + "\n";
        output.write(outmsg.getBytes());
      }
 else {
        if (_log.shouldLog(Log.WARN))         _log.warn("inbound BLOCKED: " + inmsg);
      }
    }
 catch (    IOException e1) {
      if (_log.shouldLog(Log.ERROR))       _log.error("IrcInboundFilter: disconnected",e1);
      break;
    }
  }
  try {
    local.close();
  }
 catch (  IOException e) {
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("IrcInboundFilter: Done.");
}
