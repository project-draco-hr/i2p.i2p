{
  BufferedReader in;
  OutputStream output;
  try {
    in=new BufferedReader(new InputStreamReader(local.getInputStream(),"ISO-8859-1"));
    output=remote.getOutputStream();
  }
 catch (  IOException e) {
    if (_log.shouldLog(Log.ERROR))     _log.error("IrcOutboundFilter: no streams",e);
    return;
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("IrcOutboundFilter: Running.");
  try {
    while (true) {
      try {
        String inmsg=in.readLine();
        if (inmsg == null)         break;
        if (inmsg.endsWith("\r"))         inmsg=inmsg.substring(0,inmsg.length() - 1);
        if (_log.shouldLog(Log.DEBUG))         _log.debug("out: [" + inmsg + "]");
        String outmsg=outboundFilter(inmsg,expectedPong);
        if (outmsg != null) {
          if (!inmsg.equals(outmsg)) {
            if (_log.shouldLog(Log.WARN)) {
              _log.warn("outbound FILTERED: " + outmsg);
              _log.warn(" - outbound was: " + inmsg);
            }
          }
 else {
            if (_log.shouldLog(Log.INFO))             _log.info("outbound: " + outmsg);
          }
          outmsg=outmsg + "\r\n";
          output.write(outmsg.getBytes("ISO-8859-1"));
        }
 else {
          if (_log.shouldLog(Log.WARN))           _log.warn("outbound BLOCKED: " + "\"" + inmsg + "\"");
        }
      }
 catch (      IOException e1) {
        if (_log.shouldLog(Log.WARN))         _log.warn("IrcOutboundFilter: disconnected",e1);
        break;
      }
    }
  }
 catch (  RuntimeException re) {
    _log.error("Error filtering outbound data",re);
  }
 finally {
    if (remote != null)     try {
      remote.close();
    }
 catch (    IOException e) {
    }
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("IrcOutboundFilter: Done.");
}
