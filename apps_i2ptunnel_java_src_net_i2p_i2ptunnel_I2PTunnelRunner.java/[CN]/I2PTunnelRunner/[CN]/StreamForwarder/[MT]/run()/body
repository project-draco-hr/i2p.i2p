{
  byte[] buffer=new byte[NETWORK_BUFFER_SIZE];
  try {
    int len;
    while ((len=in.read(buffer)) != -1) {
      out.write(buffer,0,len);
      if (len > 0)       updateActivity();
      if (in.available() == 0) {
        try {
          Thread.sleep(I2PTunnel.PACKET_DELAY);
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
      if (in.available() == 0) {
        out.flush();
      }
    }
  }
 catch (  SocketException ex) {
synchronized (finishLock) {
      if (!finished) {
        _log.debug("Socket closed - error reading and writing",ex);
      }
    }
  }
catch (  InterruptedIOException ex) {
    _log.warn("Closing connection due to timeout (error: \"" + ex.getMessage() + "\")");
  }
catch (  IOException ex) {
    if (!finished)     _log.error("Error forwarding",ex);
  }
 finally {
    try {
      out.close();
      in.close();
    }
 catch (    IOException ex) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Error closing streams",ex);
    }
synchronized (finishLock) {
      finished=true;
      finishLock.notifyAll();
    }
  }
}
