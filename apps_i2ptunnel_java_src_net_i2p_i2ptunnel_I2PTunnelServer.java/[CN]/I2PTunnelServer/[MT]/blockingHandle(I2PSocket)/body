{
  if (_log.shouldLog(Log.INFO))   _log.info("Incoming connection to '" + toString() + "' port "+ socket.getLocalPort()+ " from: "+ socket.getPeerDestination().calculateHash()+ " port "+ socket.getPort());
  long afterAccept=getTunnel().getContext().clock().now();
  long afterSocket=-1;
  try {
    socket.setReadTimeout(readTimeout);
    Socket s=getSocket(socket.getLocalPort());
    afterSocket=getTunnel().getContext().clock().now();
    new I2PTunnelRunner(s,socket,slock,null,null);
    long afterHandle=getTunnel().getContext().clock().now();
    long timeToHandle=afterHandle - afterAccept;
    if ((timeToHandle > 1000) && (_log.shouldLog(Log.WARN)))     _log.warn("Took a while to handle the request for " + remoteHost + ':'+ remotePort+ " ["+ timeToHandle+ ", socket create: "+ (afterSocket - afterAccept)+ "]");
  }
 catch (  SocketException ex) {
    try {
      socket.close();
    }
 catch (    IOException ioe) {
    }
    if (_log.shouldLog(Log.ERROR))     _log.error("Error connecting to server " + remoteHost + ':'+ remotePort,ex);
  }
catch (  IOException ex) {
    _log.error("Error while waiting for I2PConnections",ex);
  }
}
