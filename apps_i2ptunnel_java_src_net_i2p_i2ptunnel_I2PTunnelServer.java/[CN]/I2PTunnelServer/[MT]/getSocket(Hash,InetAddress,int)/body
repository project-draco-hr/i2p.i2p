{
  String opt=getTunnel().getClientOptions().getProperty(PROP_USE_SSL);
  if (Boolean.parseBoolean(opt)) {
synchronized (sslLock) {
      if (_sslFactory == null) {
        try {
          _sslFactory=new I2PSSLSocketFactory(getTunnel().getContext(),true,"certificates/i2ptunnel");
        }
 catch (        GeneralSecurityException gse) {
          IOException ioe=new IOException("SSL Fail");
          ioe.initCause(gse);
          throw ioe;
        }
      }
    }
    return _sslFactory.createSocket(remoteHost,remotePort);
  }
 else {
    boolean unique=Boolean.parseBoolean(getTunnel().getClientOptions().getProperty(PROP_UNIQUE_LOCAL));
    if (unique && remoteHost.isLoopbackAddress()) {
      byte[] addr;
      if (remoteHost instanceof Inet4Address) {
        addr=new byte[4];
        addr[0]=127;
        System.arraycopy(from.getData(),0,addr,1,3);
      }
 else {
        addr=new byte[16];
        addr[0]=(byte)0xfd;
        System.arraycopy(from.getData(),0,addr,1,15);
      }
      InetAddress local=InetAddress.getByAddress(addr);
      return new Socket(remoteHost,remotePort,local,0);
    }
 else {
      return new Socket(remoteHost,remotePort);
    }
  }
}
