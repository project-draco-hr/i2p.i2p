{
  if (_running) {
    if (_log.shouldLog(Log.INFO))     _log.info("Already running");
    log("Tunnel " + getName() + " is already running");
    return;
  }
  String type=getType();
  if ((type == null) || (type.length() <= 0)) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Cannot start the tunnel - no type specified");
    return;
  }
  if (type.endsWith("server") || getPersistentClientKey()) {
    boolean ok=createPrivateKey();
    if (!ok) {
      log("Failed to start tunnel " + getName() + " as the private key file could not be created");
      return;
    }
  }
  setI2CPOptions();
  setSessionOptions();
  if (TYPE_HTTP_CLIENT.equals(type)) {
    startHttpClient();
  }
 else   if (TYPE_IRC_CLIENT.equals(type)) {
    startIrcClient();
  }
 else   if (TYPE_SOCKS.equals(type)) {
    startSocksClient();
  }
 else   if (TYPE_SOCKS_IRC.equals(type)) {
    startSocksIRCClient();
  }
 else   if (TYPE_CONNECT.equals(type)) {
    startConnectClient();
  }
 else   if (TYPE_STD_CLIENT.equals(type)) {
    startClient();
  }
 else   if (TYPE_STREAMR_CLIENT.equals(type)) {
    startStreamrClient();
  }
 else   if (TYPE_STD_SERVER.equals(type)) {
    startServer();
  }
 else   if (TYPE_HTTP_SERVER.equals(type)) {
    startHttpServer();
  }
 else   if (TYPE_HTTP_BIDIR_SERVER.equals(type)) {
    startHttpBidirServer();
  }
 else   if (TYPE_IRC_SERVER.equals(type)) {
    startIrcServer();
  }
 else   if (TYPE_STREAMR_SERVER.equals(type)) {
    startStreamrServer();
  }
 else {
    if (_log.shouldLog(Log.ERROR))     _log.error("Cannot start tunnel - unknown type [" + type + "]");
    return;
  }
  acquire();
  _running=true;
}
