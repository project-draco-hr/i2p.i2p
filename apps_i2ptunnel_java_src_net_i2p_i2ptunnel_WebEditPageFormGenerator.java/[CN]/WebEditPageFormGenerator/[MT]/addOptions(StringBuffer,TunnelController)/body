{
  int tunnelDepth=2;
  int numTunnels=2;
  int connectDelay=0;
  int maxWindowSize=-1;
  Properties opts=getOptions(controller);
  if (opts != null) {
    String depth=opts.getProperty("inbound.length");
    if (depth != null) {
      try {
        tunnelDepth=Integer.parseInt(depth);
      }
 catch (      NumberFormatException nfe) {
        tunnelDepth=2;
      }
    }
    String num=opts.getProperty("inbound.quantity");
    if (num != null) {
      try {
        numTunnels=Integer.parseInt(num);
      }
 catch (      NumberFormatException nfe) {
        numTunnels=2;
      }
    }
    String delay=opts.getProperty("i2p.streaming.connectDelay");
    if (delay != null) {
      try {
        connectDelay=Integer.parseInt(delay);
      }
 catch (      NumberFormatException nfe) {
        connectDelay=0;
      }
    }
    String max=opts.getProperty("i2p.streaming.maxWindowSize");
    if (max != null) {
      try {
        maxWindowSize=Integer.parseInt(max);
      }
 catch (      NumberFormatException nfe) {
        maxWindowSize=-1;
      }
    }
  }
  buf.append("<b>Tunnel depth:</b> ");
  buf.append("<select name=\"tunnelDepth\">");
  buf.append("<option value=\"0\" ");
  if (tunnelDepth == 0)   buf.append(" selected=\"true\" ");
  buf.append(">0 hop tunnel (low anonymity, low latency)</option>");
  buf.append("<option value=\"1\" ");
  if (tunnelDepth == 1)   buf.append(" selected=\"true\" ");
  buf.append(">1 hop tunnel (medium anonymity, medium latency)</option>");
  buf.append("<option value=\"2\" ");
  if (tunnelDepth == 2)   buf.append(" selected=\"true\" ");
  buf.append(">2 hop tunnel (high anonymity, high latency)</option>");
  if (tunnelDepth > 2) {
    buf.append("<option value=\"").append(tunnelDepth).append("\" selected=\"true\" >");
    buf.append(tunnelDepth);
    buf.append(" hop tunnel (custom)</option>");
  }
  buf.append("</select><br />\n");
  buf.append("<b>Tunnel count:</b> ");
  buf.append("<select name=\"tunnelCount\">");
  buf.append("<option value=\"1\" ");
  if (numTunnels == 1)   buf.append(" selected=\"true\" ");
  buf.append(">1 inbound tunnel (low bandwidth usage, less reliability)</option>");
  buf.append("<option value=\"2\" ");
  if (numTunnels == 2)   buf.append(" selected=\"true\" ");
  buf.append(">2 inbound tunnels (standard bandwidth usage, standard reliability)</option>");
  buf.append("<option value=\"3\" ");
  if (numTunnels == 3)   buf.append(" selected=\"true\" ");
  buf.append(">3 inbound tunnels (higher bandwidth usage, higher reliability)</option>");
  if (numTunnels > 3) {
    buf.append("<option value=\"").append(numTunnels).append("\" selected=\"true\" >");
    buf.append(numTunnels);
    buf.append(" inbound tunnels (custom)</option>");
  }
  buf.append("</select><br />\n");
  buf.append("<b>Delay connection briefly? </b> ");
  buf.append("<input type=\"checkbox\" name=\"connectDelay\" value=\"");
  buf.append((connectDelay > 0 ? connectDelay : 1000)).append("\" ");
  if (connectDelay > 0)   buf.append("checked=\"true\" ");
  buf.append("/> (useful for brief request/response connections)<br />\n");
  buf.append("<b>Communication profile:</b>");
  buf.append("<select name=\"profile\">");
  if (maxWindowSize <= 0)   buf.append("<option value=\"interactive\">Interactive</option><option value=\"bulk\" selected=\"true\">Bulk</option>");
 else   buf.append("<option value=\"interactive\" selected=\"true\">Interactive</option><option value=\"bulk\">Bulk</option>");
  buf.append("</select><br />\n");
  buf.append("<b>I2CP host:</b> ");
  buf.append("<input type=\"text\" name=\"clientHost\" size=\"20\" value=\"");
  if ((controller != null) && (controller.getI2CPHost() != null))   buf.append(controller.getI2CPHost());
 else   buf.append("127.0.0.1");
  buf.append("\" /><br />\n");
  buf.append("<b>I2CP port:</b> ");
  buf.append("<input type=\"text\" name=\"clientPort\" size=\"20\" value=\"");
  if ((controller != null) && (controller.getI2CPPort() != null))   buf.append(controller.getI2CPPort());
 else   buf.append("7654");
  buf.append("\" /><br />\n");
  buf.append("<b>Other custom options:</b> \n");
  buf.append("<input type=\"text\" name=\"customOptions\" size=\"60\" value=\"");
  if (opts != null) {
    int i=0;
    for (Iterator iter=opts.keySet().iterator(); iter.hasNext(); ) {
      String key=(String)iter.next();
      String val=opts.getProperty(key);
      if ("inbound.length".equals(key))       continue;
      if ("outbound.length".equals(key))       continue;
      if ("inbound.quantity".equals(key))       continue;
      if ("outbound.quantity".equals(key))       continue;
      if ("inbound.nickname".equals(key))       continue;
      if ("outbound.nickname".equals(key))       continue;
      if ("i2p.streaming.connectDelay".equals(key))       continue;
      if ("i2p.streaming.maxWindowSize".equals(key))       continue;
      if (i != 0)       buf.append(' ');
      buf.append(key).append('=').append(val);
      i++;
    }
  }
  buf.append("\" /><br />\n");
}
