{
  if (_log.shouldLog(Log.INFO))   _log.info("Incoming connection to '" + toString() + "' from: "+ socket.getPeerDestination().calculateHash().toBase64());
  try {
    expireOutbound();
    int myPort=socket.getLocalPort();
    LocalAddress local=_outgoing.remove(Integer.valueOf(myPort));
    if (local == null) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Rejecting incoming DCC connection for unknown port " + myPort);
      try {
        socket.close();
      }
 catch (      IOException ioe) {
      }
      return;
    }
    if (_log.shouldLog(Log.WARN))     _log.warn("Incoming DCC connection for I2P port " + myPort + " sending to "+ local.ia+ ':'+ local.port);
    try {
      Socket s=new Socket(local.ia,local.port);
      _sockList.add(socket);
      Thread t=new I2PTunnelRunner(s,socket,slock,null,null,_sockList,(I2PTunnelRunner.FailCallback)null);
      t.start();
      local.socket=socket;
      local.expire=getTunnel().getContext().clock().now() + OUTBOUND_EXPIRE;
      _active.put(Integer.valueOf(myPort),local);
    }
 catch (    SocketException ex) {
      try {
        socket.close();
      }
 catch (      IOException ioe) {
      }
      _log.error("Error relaying incoming DCC connection to IRC client at " + local.ia + ':'+ local.port,ex);
    }
  }
 catch (  IOException ex) {
    _log.error("Error while waiting for I2PConnections",ex);
  }
}
