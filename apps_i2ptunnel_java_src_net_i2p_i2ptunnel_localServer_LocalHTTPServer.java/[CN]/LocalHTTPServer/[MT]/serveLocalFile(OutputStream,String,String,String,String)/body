{
  if (targetRequest.equals("/")) {
    out.write(OK.getBytes("UTF-8"));
    out.flush();
    return;
  }
  if ((method.equals("GET") || method.equals("HEAD")) && targetRequest.startsWith("/themes/") && !targetRequest.contains("..")) {
    String filename=null;
    try {
      filename=targetRequest.substring(8);
    }
 catch (    IndexOutOfBoundsException ioobe) {
      return;
    }
    if (filename.startsWith("console/default/"))     filename=filename.replaceFirst("default",I2PAppContext.getGlobalContext().getProperty("routerconsole.theme","light"));
    File themesDir=new File(I2PAppContext.getGlobalContext().getBaseDir(),"docs/themes");
    File file=new File(themesDir,filename);
    if (file.exists() && !file.isDirectory()) {
      String type;
      if (filename.endsWith(".css"))       type="text/css";
 else       if (filename.endsWith(".ico"))       type="image/x-icon";
 else       if (filename.endsWith(".png"))       type="image/png";
 else       if (filename.endsWith(".jpg"))       type="image/jpeg";
 else       type="text/html";
      out.write("HTTP/1.1 200 OK\r\nContent-Type: ".getBytes("UTF-8"));
      out.write(type.getBytes("UTF-8"));
      out.write("\r\nCache-Control: max-age=86400\r\nConnection: close\r\nProxy-Connection: close\r\n\r\n".getBytes("UTF-8"));
      FileUtil.readFile(filename,themesDir.getAbsolutePath(),out);
      return;
    }
  }
  if (targetRequest.equals("/add")) {
    Map<String,String> opts=new HashMap<String,String>(8);
    StringTokenizer tok=new StringTokenizer(query,"=&;");
    while (tok.hasMoreTokens()) {
      String k=tok.nextToken();
      if (!tok.hasMoreTokens())       break;
      String v=tok.nextToken();
      opts.put(decode(k),decode(v));
    }
    String url=opts.get("url");
    String host=opts.get("host");
    String b64Dest=opts.get("dest");
    String nonce=opts.get("nonce");
    String referer=opts.get("referer");
    String book="privatehosts.txt";
    if (opts.get("master") != null)     book="userhosts.txt";
 else     if (opts.get("router") != null)     book="hosts.txt";
    Destination dest=null;
    if (b64Dest != null) {
      try {
        dest=new Destination(b64Dest);
      }
 catch (      DataFormatException dfe) {
        System.err.println("Bad dest to save?" + b64Dest);
      }
    }
    if (proxyNonce.equals(nonce) && url != null && host != null && dest != null) {
      NamingService ns=I2PAppContext.getGlobalContext().namingService();
      Properties nsOptions=new Properties();
      nsOptions.setProperty("list",book);
      if (referer != null && referer.startsWith("http")) {
        String from="<a href=\"" + referer + "\">"+ referer+ "</a>";
        nsOptions.setProperty("s",_t("Added via address helper from {0}",from));
      }
 else {
        nsOptions.setProperty("s",_t("Added via address helper"));
      }
      boolean success=ns.put(host,dest,nsOptions);
      writeRedirectPage(out,success,host,book,url);
      return;
    }
    out.write(ERR_ADD.getBytes("UTF-8"));
  }
 else {
    out.write(ERR_404.getBytes("UTF-8"));
  }
  out.flush();
}
