{
  setupServer();
  if (connHostName == null) {
    _log.error("BUG: destination host name has not been initialized!");
    throw new SOCKSException("BUG! See the logs!");
  }
  if (connPort == 0) {
    _log.error("BUG: destination port has not been initialized!");
    throw new SOCKSException("BUG! See the logs!");
  }
  DataOutputStream out;
  try {
    out=new DataOutputStream(clientSock.getOutputStream());
  }
 catch (  IOException e) {
    throw new SOCKSException("Connection error (" + e.getMessage() + ")");
  }
  I2PSocket destSock;
  try {
    if (connHostName.toLowerCase(Locale.US).endsWith(".i2p") || connHostName.toLowerCase(Locale.US).endsWith(".onion")) {
      _log.debug("connecting to " + connHostName + "...");
      destSock=t.createI2PSocket(I2PAppContext.getGlobalContext().namingService().lookup(connHostName));
    }
 else     if ("localhost".equals(connHostName) || "127.0.0.1".equals(connHostName)) {
      String err="No localhost accesses allowed through the Socks Proxy";
      _log.error(err);
      try {
        sendRequestReply(Reply.CONNECTION_REFUSED,InetAddress.getByName("127.0.0.1"),0,out);
      }
 catch (      IOException ioe) {
      }
      throw new SOCKSException(err);
    }
 else     if (connPort == 80) {
      String err="No handler for HTTP outproxy implemented - to: " + connHostName;
      _log.error(err);
      try {
        sendRequestReply(Reply.CONNECTION_REFUSED,InetAddress.getByName("127.0.0.1"),0,out);
      }
 catch (      IOException ioe) {
      }
      throw new SOCKSException(err);
    }
 else {
      List<String> proxies=t.getProxies(connPort);
      if (proxies == null || proxies.isEmpty()) {
        String err="No outproxy configured for port " + connPort + " and no default configured either - host: "+ connHostName;
        _log.error(err);
        try {
          sendRequestReply(Reply.CONNECTION_REFUSED,InetAddress.getByName("127.0.0.1"),0,out);
        }
 catch (        IOException ioe) {
        }
        throw new SOCKSException(err);
      }
      int p=I2PAppContext.getGlobalContext().random().nextInt(proxies.size());
      String proxy=proxies.get(p);
      _log.debug("connecting to port " + connPort + " proxy "+ proxy+ " for "+ connHostName+ "...");
      destSock=t.createI2PSocket(I2PAppContext.getGlobalContext().namingService().lookup(proxy));
    }
    confirmConnection();
    _log.debug("connection confirmed - exchanging data...");
  }
 catch (  DataFormatException e) {
    try {
      sendRequestReply(Reply.CONNECTION_REFUSED,InetAddress.getByName("127.0.0.1"),0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error in destination format");
  }
catch (  SocketException e) {
    try {
      sendRequestReply(Reply.CONNECTION_REFUSED,InetAddress.getByName("127.0.0.1"),0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error connecting (" + e.getMessage() + ")");
  }
catch (  IOException e) {
    try {
      sendRequestReply(Reply.CONNECTION_REFUSED,InetAddress.getByName("127.0.0.1"),0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error connecting (" + e.getMessage() + ")");
  }
catch (  I2PException e) {
    try {
      sendRequestReply(Reply.CONNECTION_REFUSED,InetAddress.getByName("127.0.0.1"),0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error connecting (" + e.getMessage() + ")");
  }
  return destSock;
}
