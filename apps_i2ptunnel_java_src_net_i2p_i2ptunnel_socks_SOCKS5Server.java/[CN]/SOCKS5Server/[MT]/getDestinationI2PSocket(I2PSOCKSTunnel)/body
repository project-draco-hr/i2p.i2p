{
  setupServer();
  if (connHostName == null) {
    _log.error("BUG: destination host name has not been initialized!");
    throw new SOCKSException("BUG! See the logs!");
  }
  if (connPort == 0) {
    _log.error("BUG: destination port has not been initialized!");
    throw new SOCKSException("BUG! See the logs!");
  }
  DataOutputStream out;
  try {
    out=new DataOutputStream(clientSock.getOutputStream());
  }
 catch (  IOException e) {
    throw new SOCKSException("Connection error: " + e);
  }
  I2PSocket destSock;
  try {
    if (connHostName.toLowerCase(Locale.US).endsWith(".i2p")) {
      _log.debug("connecting to " + connHostName + "...");
      Destination dest=I2PAppContext.getGlobalContext().namingService().lookup(connHostName);
      if (dest == null) {
        try {
          sendRequestReply(Reply.HOST_UNREACHABLE,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
        }
 catch (        IOException ioe) {
        }
        throw new SOCKSException("Host not found");
      }
      Properties overrides=new Properties();
      I2PSocketOptions sktOpts=t.buildOptions(overrides);
      sktOpts.setPort(connPort);
      destSock=t.createI2PSocket(I2PAppContext.getGlobalContext().namingService().lookup(connHostName),sktOpts);
    }
 else     if ("localhost".equals(connHostName) || "127.0.0.1".equals(connHostName)) {
      String err="No localhost accesses allowed through the Socks Proxy";
      _log.error(err);
      try {
        sendRequestReply(Reply.CONNECTION_NOT_ALLOWED_BY_RULESET,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
      }
 catch (      IOException ioe) {
      }
      throw new SOCKSException(err);
    }
 else {
      List<String> proxies=t.getProxies(connPort);
      if (proxies == null || proxies.isEmpty()) {
        String err="No outproxy configured for port " + connPort + " and no default configured either";
        _log.error(err);
        try {
          sendRequestReply(Reply.CONNECTION_NOT_ALLOWED_BY_RULESET,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
        }
 catch (        IOException ioe) {
        }
        throw new SOCKSException(err);
      }
      int p=I2PAppContext.getGlobalContext().random().nextInt(proxies.size());
      String proxy=proxies.get(p);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("connecting to proxy " + proxy + " for "+ connHostName+ " port "+ connPort);
      try {
        destSock=outproxyConnect(t,proxy);
      }
 catch (      SOCKSException se) {
        try {
          sendRequestReply(Reply.HOST_UNREACHABLE,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
        }
 catch (        IOException ioe) {
        }
        throw se;
      }
    }
    confirmConnection();
    _log.debug("connection confirmed - exchanging data...");
  }
 catch (  DataFormatException e) {
    if (_log.shouldLog(Log.WARN))     _log.warn("socks error",e);
    try {
      sendRequestReply(Reply.HOST_UNREACHABLE,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error in destination format");
  }
catch (  SocketException e) {
    if (_log.shouldLog(Log.WARN))     _log.warn("socks error",e);
    try {
      sendRequestReply(Reply.HOST_UNREACHABLE,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error connecting: " + e);
  }
catch (  IOException e) {
    if (_log.shouldLog(Log.WARN))     _log.warn("socks error",e);
    try {
      sendRequestReply(Reply.HOST_UNREACHABLE,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error connecting: " + e);
  }
catch (  I2PException e) {
    if (_log.shouldLog(Log.WARN))     _log.warn("socks error",e);
    try {
      sendRequestReply(Reply.HOST_UNREACHABLE,AddressType.DOMAINNAME,null,"0.0.0.0",0,out);
    }
 catch (    IOException ioe) {
    }
    throw new SOCKSException("Error connecting: " + e);
  }
  return destSock;
}
