{
  SigType type;
  String ttype;
  boolean isShared;
  if (tunnel >= 0) {
    Destination d=getDestination(tunnel);
    if (d != null) {
      type=d.getSigType();
      if (type != null)       return type.getCode();
    }
    String stype=getProperty(tunnel,I2PClient.PROP_SIGTYPE,null);
    type=stype != null ? SigType.parseSigType(stype) : null;
    ttype=getTunnelType(tunnel);
    isShared=isSharedClient(tunnel);
  }
 else {
    type=null;
    ttype=newTunnelType;
    isShared=false;
  }
  if (type == null) {
    if ((!TunnelController.isClient(ttype) || ((TunnelController.TYPE_IRC_CLIENT.equals(ttype) || TunnelController.TYPE_SOCKS_IRC.equals(ttype) || TunnelController.TYPE_STREAMR_CLIENT.equals(ttype)|| TunnelController.TYPE_STD_CLIENT.equals(ttype)) && !isShared)))     type=TunnelController.PREFERRED_SIGTYPE;
 else     type=SigType.DSA_SHA1;
  }
  return type.getCode();
}
