{
  if (!_removeConfirmed)   return "Please confirm removal";
  TunnelController cur=getController(_tunnel);
  if (cur == null)   return "Invalid tunnel number";
  List<String> msgs=_group.removeController(cur);
  msgs.addAll(doSave());
  String pk=cur.getPrivKeyFile();
  if (pk == null)   pk=_config.getPrivKeyFile();
  if (pk != null && pk.startsWith("i2ptunnel") && pk.endsWith("-privKeys.dat") && ((!isClient(cur.getType())) || cur.getPersistentClientKey())) {
    File pkf=new File(_context.getConfigDir(),pk);
    if (pkf.exists()) {
      String name=cur.getName();
      if (name == null) {
        name=cur.getDescription();
        if (name == null) {
          name=cur.getType();
          if (name == null)           name=Long.toString(_context.clock().now());
        }
      }
      name=name.replace(' ','_').replace(':','_').replace("..","_").replace('/','_').replace('\\','_');
      name="i2ptunnel-deleted-" + name + '-'+ _context.clock().now()+ "-privkeys.dat";
      File backupDir=new SecureFile(_context.getConfigDir(),TunnelController.KEY_BACKUP_DIR);
      File to;
      if (backupDir.isDirectory() || backupDir.mkdir())       to=new File(backupDir,name);
 else       to=new File(_context.getConfigDir(),name);
      boolean success=FileUtil.rename(pkf,to);
      if (success)       msgs.add("Private key file " + pkf.getAbsolutePath() + " renamed to "+ to.getAbsolutePath());
    }
  }
  return getMessages(msgs);
}
