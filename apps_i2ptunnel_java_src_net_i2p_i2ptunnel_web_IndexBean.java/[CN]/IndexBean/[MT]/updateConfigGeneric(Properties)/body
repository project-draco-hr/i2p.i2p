{
  config.setProperty(TunnelController.PROP_TYPE,_type);
  if (_name != null)   config.setProperty(TunnelController.PROP_NAME,_name);
  if (_description != null)   config.setProperty(TunnelController.PROP_DESCR,_description);
  if (!_context.isRouterContext()) {
    if (_i2cpHost != null)     config.setProperty(TunnelController.PROP_I2CP_HOST,_i2cpHost);
    if ((_i2cpPort != null) && (_i2cpPort.trim().length() > 0)) {
      config.setProperty(TunnelController.PROP_I2CP_PORT,_i2cpPort);
    }
 else {
      config.setProperty(TunnelController.PROP_I2CP_PORT,"7654");
    }
  }
  if (_privKeyFile != null)   config.setProperty(TunnelController.PROP_FILE,_privKeyFile);
  if (_customOptions != null) {
    StringTokenizer tok=new StringTokenizer(_customOptions);
    while (tok.hasMoreTokens()) {
      String pair=tok.nextToken();
      int eq=pair.indexOf('=');
      if ((eq <= 0) || (eq >= pair.length()))       continue;
      String key=pair.substring(0,eq);
      if (_noShowSet.contains(key))       continue;
      if ((!TunnelController.TYPE_HTTP_CLIENT.equals(_type)) && (!TunnelController.TYPE_CONNECT.equals(_type)) && _nonProxyNoShowSet.contains(key))       continue;
      String val=pair.substring(eq + 1);
      config.setProperty(OPT + key,val);
    }
  }
  config.setProperty(TunnelController.PROP_START,_startOnLoad + "");
  if (_tunnelQuantity != null) {
    config.setProperty("option.inbound.quantity",_tunnelQuantity);
    config.setProperty("option.outbound.quantity",_tunnelQuantity);
  }
  if (_tunnelDepth != null) {
    config.setProperty("option.inbound.length",_tunnelDepth);
    config.setProperty("option.outbound.length",_tunnelDepth);
  }
  if (_tunnelVariance != null) {
    config.setProperty("option.inbound.lengthVariance",_tunnelVariance);
    config.setProperty("option.outbound.lengthVariance",_tunnelVariance);
  }
  if (_tunnelBackupQuantity != null) {
    config.setProperty("option.inbound.backupQuantity",_tunnelBackupQuantity);
    config.setProperty("option.outbound.backupQuantity",_tunnelBackupQuantity);
  }
  if (_connectDelay)   config.setProperty("option.i2p.streaming.connectDelay","1000");
 else   config.setProperty("option.i2p.streaming.connectDelay","0");
  if (isClient(_type) && _sharedClient) {
    config.setProperty("option.inbound.nickname",CLIENT_NICKNAME);
    config.setProperty("option.outbound.nickname",CLIENT_NICKNAME);
  }
 else   if (_name != null) {
    config.setProperty("option.inbound.nickname",_name);
    config.setProperty("option.outbound.nickname",_name);
  }
  if ("interactive".equals(_profile))   config.setProperty("option.i2p.streaming.maxWindowSize","16");
 else   config.remove("option.i2p.streaming.maxWindowSize");
}
