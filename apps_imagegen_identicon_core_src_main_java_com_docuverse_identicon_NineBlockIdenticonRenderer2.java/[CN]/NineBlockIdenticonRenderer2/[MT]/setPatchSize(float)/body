{
  this.patchSize=size;
  this.patchOffset=patchSize / 2.0f;
  float patchScale=patchSize / 4.0f;
  this.patchShapes=new GeneralPath[patchTypes.length];
  for (int i=0; i < patchTypes.length; i++) {
    GeneralPath patch=new GeneralPath(GeneralPath.WIND_NON_ZERO);
    boolean moveTo=true;
    byte[] patchVertices=patchTypes[i];
    for (int j=0; j < patchVertices.length; j++) {
      int v=(int)patchVertices[j];
      if (v == PATCH_MOVETO)       moveTo=true;
      float vx=((v % PATCH_GRIDS) * patchScale) - patchOffset;
      float vy=((float)Math.floor(((float)v) / PATCH_GRIDS)) * patchScale - patchOffset;
      if (!moveTo) {
        patch.lineTo(vx,vy);
      }
 else {
        moveTo=false;
        patch.moveTo(vx,vy);
      }
    }
    patch.closePath();
    this.patchShapes[i]=patch;
  }
}
