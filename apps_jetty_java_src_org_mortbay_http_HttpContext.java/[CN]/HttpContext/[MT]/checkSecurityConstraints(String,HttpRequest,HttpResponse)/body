{
  UserRealm realm=getRealm();
  List scss=_constraintMap.getMatches(pathInContext);
  String pattern=null;
  if (scss != null && scss.size() > 0) {
    Object constraints=null;
    loop:     for (int m=0; m < scss.size(); m++) {
      Map.Entry entry=(Map.Entry)scss.get(m);
      Object scs=entry.getValue();
      String p=(String)entry.getKey();
      for (int c=0; c < LazyList.size(scs); c++) {
        SecurityConstraint sc=(SecurityConstraint)LazyList.get(scs,c);
        if (!sc.forMethod(request.getMethod()))         continue;
        if (pattern != null && !pattern.equals(p))         break loop;
        pattern=p;
        constraints=LazyList.add(constraints,sc);
      }
    }
    return SecurityConstraint.check(LazyList.getList(constraints),_authenticator,realm,pathInContext,request,response);
  }
  request.setUserPrincipal(HttpRequest.__NOT_CHECKED);
  return true;
}
