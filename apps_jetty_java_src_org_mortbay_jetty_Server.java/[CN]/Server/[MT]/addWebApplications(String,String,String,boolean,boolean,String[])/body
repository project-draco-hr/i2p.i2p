{
  ArrayList wacs=new ArrayList();
  Resource r=Resource.newResource(webapps);
  if (!r.exists())   throw new IllegalArgumentException("No such webapps resource " + r);
  if (!r.isDirectory())   throw new IllegalArgumentException("Not directory webapps resource " + r);
  if (Attributes != null) {
    if (((Attributes.length / 2) * 2) != Attributes.length) {
      throw new IllegalArgumentException("Attributes must be in pairs of key,value.");
    }
  }
  String[] files=r.list();
  for (int f=0; files != null && f < files.length; f++) {
    String context=files[f];
    if (context.equalsIgnoreCase("CVS/") || context.equalsIgnoreCase("CVS") || context.startsWith("."))     continue;
    String app=r.addPath(r.encode(files[f])).toString();
    if (context.toLowerCase().endsWith(".war") || context.toLowerCase().endsWith(".jar")) {
      context=context.substring(0,context.length() - 4);
      Resource unpacked=r.addPath(context);
      if (unpacked != null && unpacked.exists() && unpacked.isDirectory())       continue;
    }
    if (_rootWebApp != null && (context.equals(_rootWebApp) || context.equals(_rootWebApp + "/")))     context="/";
 else     context="/" + context;
    WebApplicationContext wac=addWebApplication(host,context,app);
    wac.setExtractWAR(extract);
    wac.setClassLoaderJava2Compliant(java2CompliantClassLoader);
    if (defaults != null) {
      if (defaults.length() == 0)       wac.setDefaultsDescriptor(null);
 else       wac.setDefaultsDescriptor(defaults);
    }
    if (Attributes != null) {
      for (int i=0; i < Attributes.length; i++, i++) {
        wac.setAttribute(Attributes[i],Attributes[i + 1]);
      }
    }
    wacs.add(wac);
  }
  return (WebApplicationContext[])wacs.toArray(new WebApplicationContext[wacs.size()]);
}
