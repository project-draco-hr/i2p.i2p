{
  final RrdException rrdException=new RrdException("Wrong rrdtool-like archive definition: " + rrdToolArcDef);
  final StringTokenizer tokenizer=new StringTokenizer(rrdToolArcDef,":");
  if (tokenizer.countTokens() != 5) {
    throw rrdException;
  }
  final String[] tokens=new String[5];
  for (int curTok=0; tokenizer.hasMoreTokens(); curTok++) {
    tokens[curTok]=tokenizer.nextToken();
  }
  if (!tokens[0].equalsIgnoreCase("RRA")) {
    throw rrdException;
  }
  final String consolFun=tokens[1];
  double xff;
  try {
    xff=Double.parseDouble(tokens[2]);
  }
 catch (  final NumberFormatException nfe) {
    throw rrdException;
  }
  int steps;
  try {
    steps=Integer.parseInt(tokens[3]);
  }
 catch (  final NumberFormatException nfe) {
    throw rrdException;
  }
  int rows;
  try {
    rows=Integer.parseInt(tokens[4]);
  }
 catch (  final NumberFormatException nfe) {
    throw rrdException;
  }
  addArchive(new ArcDef(consolFun,xff,steps,rows));
}
