{
  if (doop >= 0) {
    op=doop;
    expectToken(TimeToken.NUMBER,"There should be number after " + (op == TimeToken.PLUS ? '+' : '-'));
    prev_multiplier=-1;
  }
  int delta=Integer.parseInt(token.value);
  token=scanner.nextToken();
  if (token.id == TimeToken.MONTHS_MINUTES) {
switch (prev_multiplier) {
case TimeToken.DAYS:
case TimeToken.WEEKS:
case TimeToken.MONTHS:
case TimeToken.YEARS:
      token=scanner.resolveMonthsMinutes(TimeToken.MONTHS);
    break;
case TimeToken.SECONDS:
case TimeToken.MINUTES:
case TimeToken.HOURS:
  token=scanner.resolveMonthsMinutes(TimeToken.MINUTES);
break;
default :
if (delta < 6) {
token=scanner.resolveMonthsMinutes(TimeToken.MONTHS);
}
 else {
token=scanner.resolveMonthsMinutes(TimeToken.MINUTES);
}
}
}
prev_multiplier=token.id;
delta*=(op == TimeToken.PLUS) ? +1 : -1;
switch (token.id) {
case TimeToken.YEARS:
spec.dyear+=delta;
break;
case TimeToken.MONTHS:
spec.dmonth+=delta;
break;
case TimeToken.WEEKS:
delta*=7;
spec.dday+=delta;
break;
case TimeToken.DAYS:
spec.dday+=delta;
break;
case TimeToken.HOURS:
spec.dhour+=delta;
break;
case TimeToken.MINUTES:
spec.dmin+=delta;
break;
case TimeToken.SECONDS:
default :
spec.dsec+=delta;
break;
}
}
