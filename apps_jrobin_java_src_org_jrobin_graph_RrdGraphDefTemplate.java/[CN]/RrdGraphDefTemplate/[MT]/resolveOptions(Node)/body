{
  validateTagsOnlyOnce(rootOptionNode,new String[]{"anti_aliasing","use_pool","time_grid","value_grid","alt_y_grid","alt_y_mrtg","no_minor_grid","alt_autoscale","alt_autoscale_max","units_exponent","units_length","vertical_label","width","height","interlaced","image_info","image_format","image_quality","background_image","overlay_image","unit","lazy","min_value","max_value","rigid","base","logarithmic","colors","no_legend","only_graph","force_rules_legend","title","step","fonts","first_day_of_week","signature"});
  Node[] optionNodes=getChildNodes(rootOptionNode);
  for (  Node optionNode : optionNodes) {
    String option=optionNode.getNodeName();
    if (option.equals("use_pool")) {
      rrdGraphDef.setPoolUsed(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("anti_aliasing")) {
      rrdGraphDef.setAntiAliasing(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("time_grid")) {
      resolveTimeGrid(optionNode);
    }
 else     if (option.equals("value_grid")) {
      resolveValueGrid(optionNode);
    }
 else     if (option.equals("no_minor_grid")) {
      rrdGraphDef.setNoMinorGrid(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("alt_y_grid")) {
      rrdGraphDef.setAltYGrid(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("alt_y_mrtg")) {
      rrdGraphDef.setAltYMrtg(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("alt_autoscale")) {
      rrdGraphDef.setAltAutoscale(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("alt_autoscale_max")) {
      rrdGraphDef.setAltAutoscaleMax(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("units_exponent")) {
      rrdGraphDef.setUnitsExponent(getValueAsInt(optionNode));
    }
 else     if (option.equals("units_length")) {
      rrdGraphDef.setUnitsLength(getValueAsInt(optionNode));
    }
 else     if (option.equals("vertical_label")) {
      rrdGraphDef.setVerticalLabel(getValue(optionNode));
    }
 else     if (option.equals("width")) {
      rrdGraphDef.setWidth(getValueAsInt(optionNode));
    }
 else     if (option.equals("height")) {
      rrdGraphDef.setHeight(getValueAsInt(optionNode));
    }
 else     if (option.equals("interlaced")) {
      rrdGraphDef.setInterlaced(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("image_info")) {
      rrdGraphDef.setImageInfo(getValue(optionNode));
    }
 else     if (option.equals("image_format")) {
      rrdGraphDef.setImageFormat(getValue(optionNode));
    }
 else     if (option.equals("image_quality")) {
      rrdGraphDef.setImageQuality((float)getValueAsDouble(optionNode));
    }
 else     if (option.equals("background_image")) {
      rrdGraphDef.setBackgroundImage(getValue(optionNode));
    }
 else     if (option.equals("overlay_image")) {
      rrdGraphDef.setOverlayImage(getValue(optionNode));
    }
 else     if (option.equals("unit")) {
      rrdGraphDef.setUnit(getValue(optionNode));
    }
 else     if (option.equals("lazy")) {
      rrdGraphDef.setLazy(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("min_value")) {
      rrdGraphDef.setMinValue(getValueAsDouble(optionNode));
    }
 else     if (option.equals("max_value")) {
      rrdGraphDef.setMaxValue(getValueAsDouble(optionNode));
    }
 else     if (option.equals("rigid")) {
      rrdGraphDef.setRigid(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("base")) {
      rrdGraphDef.setBase(getValueAsDouble(optionNode));
    }
 else     if (option.equals("logarithmic")) {
      rrdGraphDef.setLogarithmic(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("colors")) {
      resolveColors(optionNode);
    }
 else     if (option.equals("no_legend")) {
      rrdGraphDef.setNoLegend(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("only_graph")) {
      rrdGraphDef.setOnlyGraph(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("force_rules_legend")) {
      rrdGraphDef.setForceRulesLegend(getValueAsBoolean(optionNode));
    }
 else     if (option.equals("title")) {
      rrdGraphDef.setTitle(getValue(optionNode));
    }
 else     if (option.equals("step")) {
      rrdGraphDef.setStep(getValueAsLong(optionNode));
    }
 else     if (option.equals("fonts")) {
      resolveFonts(optionNode);
    }
 else     if (option.equals("first_day_of_week")) {
      int dayIndex=resolveFirstDayOfWeek(getValue(optionNode));
      rrdGraphDef.setFirstDayOfWeek(dayIndex);
    }
 else     if (option.equals("signature")) {
      rrdGraphDef.setShowSignature(getValueAsBoolean(optionNode));
    }
  }
}
