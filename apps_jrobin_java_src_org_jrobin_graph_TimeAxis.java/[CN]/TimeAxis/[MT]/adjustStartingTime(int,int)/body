{
  calendar.setTime(new Date(rrdGraph.im.start * 1000L));
switch (timeUnit) {
case SECOND:
    calendar.add(Calendar.SECOND,-(calendar.get(Calendar.SECOND) % timeUnitCount));
  break;
case MINUTE:
calendar.set(Calendar.SECOND,0);
calendar.add(Calendar.MINUTE,-(calendar.get(Calendar.MINUTE) % timeUnitCount));
break;
case HOUR:
calendar.set(Calendar.SECOND,0);
calendar.set(Calendar.MINUTE,0);
calendar.add(Calendar.HOUR_OF_DAY,-(calendar.get(Calendar.HOUR_OF_DAY) % timeUnitCount));
break;
case DAY:
calendar.set(Calendar.SECOND,0);
calendar.set(Calendar.MINUTE,0);
calendar.set(Calendar.HOUR_OF_DAY,0);
break;
case WEEK:
calendar.set(Calendar.SECOND,0);
calendar.set(Calendar.MINUTE,0);
calendar.set(Calendar.HOUR_OF_DAY,0);
int diffDays=calendar.get(Calendar.DAY_OF_WEEK) - calendar.getFirstDayOfWeek();
if (diffDays < 0) {
diffDays+=7;
}
calendar.add(Calendar.DAY_OF_MONTH,-diffDays);
break;
case MONTH:
calendar.set(Calendar.SECOND,0);
calendar.set(Calendar.MINUTE,0);
calendar.set(Calendar.HOUR_OF_DAY,0);
calendar.set(Calendar.DAY_OF_MONTH,1);
calendar.add(Calendar.MONTH,-(calendar.get(Calendar.MONTH) % timeUnitCount));
break;
case YEAR:
calendar.set(Calendar.SECOND,0);
calendar.set(Calendar.MINUTE,0);
calendar.set(Calendar.HOUR_OF_DAY,0);
calendar.set(Calendar.DAY_OF_MONTH,1);
calendar.set(Calendar.MONTH,0);
calendar.add(Calendar.YEAR,-(calendar.get(Calendar.YEAR) % timeUnitCount));
break;
}
}
