{
  if (_log.shouldLog(Log.DEBUG))   _log.debug(getPrefix() + ":" + Thread.currentThread().getName()+ "handleNextPacket");
  int len=in.read(buffer);
  int bcsize=0;
synchronized (bc) {
    bcsize=bc.getCurrentSize();
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug(getPrefix() + ":" + Thread.currentThread().getName()+ "handleNextPacket len="+ len+ " bcsize="+ bcsize);
  if (len != -1) {
synchronized (bc) {
      bc.append(buffer,len);
    }
  }
 else   if (bcsize == 0) {
    return false;
  }
  if ((bcsize < MAX_PACKET_SIZE) && (in.available() == 0)) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug(getPrefix() + ":" + Thread.currentThread().getName()+ "Runner Point d: "+ hashCode());
    try {
      Thread.sleep(PACKET_DELAY);
    }
 catch (    InterruptedException e) {
      _log.warn("wtf",e);
    }
  }
  if ((bcsize >= MAX_PACKET_SIZE) || (in.available() == 0)) {
    byte data[]=null;
synchronized (bc) {
      data=bc.startToByteArray(MAX_PACKET_SIZE);
    }
    if (data.length > 0) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug(getPrefix() + ":" + Thread.currentThread().getName()+ "Message size is: "+ data.length);
      boolean sent=sendBlock(data);
      if (!sent) {
        if (_log.shouldLog(Log.WARN))         _log.warn(getPrefix() + ":" + Thread.currentThread().getName()+ "Error sending message to peer.  Killing socket runner");
        errorOccurred();
        return false;
      }
 else {
        if (_log.shouldLog(Log.DEBUG))         _log.debug(getPrefix() + ":" + Thread.currentThread().getName()+ "Message sent to peer");
      }
    }
  }
  return true;
}
