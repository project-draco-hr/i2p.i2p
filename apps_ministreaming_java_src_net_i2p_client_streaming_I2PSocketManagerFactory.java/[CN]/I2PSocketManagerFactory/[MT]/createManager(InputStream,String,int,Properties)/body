{
  I2PClient client=I2PClientFactory.createClient();
  if (opts == null)   opts=new Properties();
  for (Iterator iter=System.getProperties().keySet().iterator(); iter.hasNext(); ) {
    String name=(String)iter.next();
    if (!opts.containsKey(name))     opts.setProperty(name,System.getProperty(name));
  }
  boolean oldLib=DEFAULT_MANAGER.equals(opts.getProperty(PROP_MANAGER,DEFAULT_MANAGER));
  if (oldLib && false) {
    opts.setProperty(I2PClient.PROP_RELIABILITY,I2PClient.PROP_RELIABILITY_GUARANTEED);
  }
 else {
    opts.setProperty(I2PClient.PROP_RELIABILITY,I2PClient.PROP_RELIABILITY_BEST_EFFORT);
  }
  if (i2cpHost != null)   opts.setProperty(I2PClient.PROP_TCP_HOST,i2cpHost);
  if (i2cpPort > 0)   opts.setProperty(I2PClient.PROP_TCP_PORT,"" + i2cpPort);
  try {
    I2PSession session=client.createSession(myPrivateKeyStream,opts);
    session.connect();
    I2PSocketManager sockMgr=createManager(session,opts,"manager");
    return sockMgr;
  }
 catch (  I2PSessionException ise) {
    _log.error("Error creating session for socket manager",ise);
    return null;
  }
}
