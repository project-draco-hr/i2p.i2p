{
  FileOutputStream fos=null;
  try {
    File sink=new File(_sinkDir);
    if (!sink.exists())     sink.mkdirs();
    File cur=File.createTempFile("clientSink",".dat",sink);
    fos=new FileOutputStream(cur);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Writing to " + cur.getAbsolutePath());
  }
 catch (  IOException ioe) {
    _log.error("Error creating sink",ioe);
    return;
  }
  long start=System.currentTimeMillis();
  try {
    InputStream in=sock.getInputStream();
    byte buf[]=new byte[4096];
    long written=0;
    int read=0;
    while ((read=in.read(buf)) != -1) {
      written+=read;
      if (_log.shouldLog(Log.DEBUG))       _log.debug("read and wrote " + read + " ("+ written+ ")");
    }
    fos.write(("written: [" + written + "]\n").getBytes());
    long lifetime=System.currentTimeMillis() - start;
    _log.info("Got EOF from client socket [written=" + written + " lifetime="+ lifetime+ "]");
  }
 catch (  IOException ioe) {
    _log.error("Error writing the sink",ioe);
  }
 finally {
    if (fos != null)     try {
      fos.close();
    }
 catch (    IOException ioe) {
    }
    if (sock != null)     try {
      sock.close();
    }
 catch (    IOException ioe) {
    }
    _log.debug("Client socket closed");
  }
}
