{
  Destination dest=null;
  SigningPrivateKey priv=null;
  FileInputStream fis=null;
  try {
    fis=new FileInputStream(_destFile);
    dest=new Destination();
    dest.readBytes(fis);
    PrivateKey whocares=new PrivateKey();
    whocares.readBytes(fis);
    priv=new SigningPrivateKey();
    priv.readBytes(fis);
  }
 catch (  Exception e) {
    System.err.println("Destination private keys under " + _destFile + " are corrupt");
    e.printStackTrace();
    return;
  }
 finally {
    if (fis != null)     try {
      fis.close();
    }
 catch (    IOException ioe) {
    }
  }
  NameReference ref=new NameReference(_context);
  ref.setDestination(dest);
  ref.setPreferredName(_preferredName);
  ref.setSequenceNum(_sequenceNum);
  ref.setServiceType(_serviceType);
  if (_options != null) {
    for (Iterator iter=_options.keySet().iterator(); iter.hasNext(); ) {
      String key=(String)iter.next();
      String val=_options.getProperty(key);
      ref.setOption(key,val);
    }
  }
  try {
    ref.sign(priv);
  }
 catch (  IllegalStateException ise) {
    System.err.println("Error signing the new reference");
    ise.printStackTrace();
  }
  FileOutputStream fos=null;
  try {
    fos=new FileOutputStream(_outputFile);
    ref.write(fos);
  }
 catch (  IOException ioe) {
    System.err.println("Error writing out the new reference");
    ioe.printStackTrace();
  }
 finally {
    if (fos != null)     try {
      fos.close();
    }
 catch (    IOException ioe) {
    }
  }
  System.out.println("Reference created at " + _outputFile);
}
