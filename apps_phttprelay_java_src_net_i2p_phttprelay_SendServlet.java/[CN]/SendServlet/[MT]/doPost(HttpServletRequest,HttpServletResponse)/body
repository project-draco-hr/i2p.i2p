{
  ServletInputStream in=req.getInputStream();
  try {
    int contentLen=req.getContentLength();
    String firstLine=getFirstLine(in,contentLen);
    if (firstLine == null) {
      return;
    }
    Map params=getParameters(firstLine);
    String target=(String)params.get(PARAM_SEND_TARGET);
    String timeoutStr=(String)params.get(PARAM_SEND_TIMEOUTMS);
    String lenStr=(String)params.get(PARAM_SEND_DATA_LENGTH);
    String remoteTimeStr=(String)params.get(PARAM_SEND_TIME);
    long skew=0;
    try {
      long remTime=Long.parseLong(remoteTimeStr);
      skew=System.currentTimeMillis() - remTime;
    }
 catch (    Throwable t) {
      skew=Long.MAX_VALUE;
      log("*ERROR could not parse the remote time from [" + remoteTimeStr + "]");
    }
    log("Target [" + target + "] timeout ["+ timeoutStr+ "] length ["+ lenStr+ "] skew ["+ skew+ "]");
    if ((skew > CLOCK_FUDGE_FACTOR) || (skew < 0 - CLOCK_FUDGE_FACTOR)) {
      log("Attempt to send by a skewed router: skew = " + skew + "ms (local-remote)");
      failSkewed(req,resp,skew);
    }
    if (!isValidTarget(target)) {
      log("Attempt to send to an invalid target [" + target + "]");
      fail(req,resp,"Unknown or invalid target");
      return;
    }
    long len=-1;
    try {
      len=Long.parseLong(lenStr);
    }
 catch (    Throwable t) {
      log("Unable to parse length parameter [" + PARAM_SEND_DATA_LENGTH + "] ("+ lenStr+ ")");
      fail(req,resp,"Invalid length parameter");
      return;
    }
    int msgId=saveFile(in,resp,target,len);
    if (msgId >= 0) {
      sendSuccess(req,resp,target,msgId);
    }
 else {
      fail(req,resp,"Unable to queue up the message for delivery");
    }
  }
  finally {
    try {
      in.close();
    }
 catch (    IOException ioe) {
    }
  }
}
