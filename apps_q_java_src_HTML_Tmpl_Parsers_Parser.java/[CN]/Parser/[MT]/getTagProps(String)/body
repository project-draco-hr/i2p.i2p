{
  Properties p=new Properties();
  tag=cleanTag(tag);
  Util.debug_print("clean: " + tag);
  if (tag.startsWith("/")) {
    p.put("close","true");
    tag=tag.substring(1);
  }
 else {
    p.put("close","");
  }
  Util.debug_print("close: " + p.getProperty("close"));
  p.put("type",getTagType(tag));
  Util.debug_print("type: " + p.getProperty("type"));
  if (p.getProperty("type").equals("else") || p.getProperty("close").equals("true"))   return p;
  if (p.getProperty("type").equals("var"))   p.put("escape","");
  int sp=tag.indexOf(" ");
  tag=tag.substring(sp).trim();
  Util.debug_print("checking params: " + tag);
  if (tag.indexOf("=") < 0) {
    sp=tag.toLowerCase().indexOf(" escape");
    if (sp < 0) {
      p.put("name",tag);
      p.put("escape","0");
    }
 else {
      tag=tag.substring(0,sp);
      p.put("name",tag);
      p.put("escape","html");
    }
  }
 else {
    StringTokenizer st=new StringTokenizer(tag," =");
    while (st.hasMoreTokens()) {
      String key, value;
      key=st.nextToken().toLowerCase();
      if (st.hasMoreTokens())       value=st.nextToken();
 else       if (key.equals("escape"))       value="html";
 else       throw new NullPointerException("parameter " + key + " has no value");
      if (value.startsWith("\"") && value.endsWith("\""))       value=value.substring(1,value.length() - 1);
 else       if (value.startsWith("'") && value.endsWith("'"))       value=value.substring(1,value.length() - 1);
      if (value.length() == 0)       throw new NullPointerException("parameter " + key + " has no value");
      if (key.equals("escape"))       value=value.toLowerCase();
      p.put(key,value);
    }
  }
  String name=p.getProperty("name");
  if (!case_sensitive && !p.getProperty("type").equals("include") && !(name.startsWith("__") && name.endsWith("__"))) {
    p.put("name",name.toLowerCase());
  }
  if (!Util.isNameChar(name))   throw new IllegalArgumentException("parameter name may only contain " + "letters, digits, ., /, +, -, _");
  return p;
}
