{
  int i;
  int nthreads=7;
  Thread[] threads=new Thread[nthreads];
  EmbargoedQueue q=new EmbargoedQueue();
  SimpleSemaphore threadPool=new SimpleSemaphore(nthreads);
  q.putAfter(10000,"red");
  q.putAfter(3000,"orange");
  q.putAfter(6000,"yellow");
  for (i=0; i < nthreads; i++) {
    threads[i]=new TestThread("thread" + i,q);
  }
  for (i=0; i < nthreads; i++) {
    threads[i].start();
  }
  try {
    Thread.sleep(12000);
  }
 catch (  Exception e) {
    e.printStackTrace();
    return;
  }
  Random r=new Random();
  String[] items={"green","blue","indigo","violet","black","white","brown"};
  for (i=0; i < items.length; i++) {
    String item=items[i];
    int delay=2000 + r.nextInt(8000);
    System.out.println("main: adding '" + item + "' after "+ delay+ "ms ...");
    q.putAfter(delay,item);
  }
  try {
    Thread.sleep(12000);
  }
 catch (  Exception e) {
    e.printStackTrace();
    return;
  }
  System.out.println("main: terminating");
}
