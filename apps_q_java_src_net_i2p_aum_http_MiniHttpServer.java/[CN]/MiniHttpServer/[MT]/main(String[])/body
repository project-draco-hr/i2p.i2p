{
  /** 
 * create a simple request handler 
 */
class DemoHandler extends MiniHttpRequestPage {
    public DemoHandler(    MiniHttpServer server,    Object sock,    Object arg) throws Exception {
      super(server,sock,arg);
    }
    public void on_GET(){
      on_hit();
    }
    public void on_POST(){
      on_hit();
    }
    public void on_hit(){
      setContentType("text/html");
      page.head.nest("title").raw("DemoHandler");
      page.body.nest("h3").raw("DemoHandler").end.hr().raw("reqFile=" + reqFile).br().raw("reqType=" + reqType).hr().add(dumpVars());
    }
  }
  MiniHttpServer server;
  int port=defaultPort;
  if (args.length > 0) {
    try {
      port=new Integer(args[0]).intValue();
    }
 catch (    NumberFormatException e) {
      System.out.println("Invalid port: " + args[0]);
      System.exit(1);
    }
    server=new MiniHttpServer(DemoHandler.class,port);
  }
 else {
    server=new MiniHttpServer(DemoHandler.class);
  }
  MiniDemoXmlRpcHandler hdlr=new MiniDemoXmlRpcHandler(server);
  server.addXmlRpcHandler("foo",hdlr);
  server.run();
}
