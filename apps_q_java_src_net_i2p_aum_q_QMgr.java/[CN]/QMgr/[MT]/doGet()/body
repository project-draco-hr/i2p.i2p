{
  if (argi == argc) {
    usage("get: missing key");
  }
  String key=args[argi++];
  System.err.println("Trying to retrieve key '" + key + "'...");
  Hashtable res;
  try {
    Vector getArgs=new Vector();
    getArgs.addElement(key);
    res=(Hashtable)node.execute("i2p.q.getItem",getArgs);
  }
 catch (  Exception e) {
    e.printStackTrace();
    System.out.println("Failed to ping node");
    return 1;
  }
  String status=(String)res.get("status");
  if (!status.equals("ok")) {
    String err=(String)res.get("error");
    System.err.println("Key retrieve error: " + err);
    String comment=(String)res.get("comment");
    if (comment != null) {
      System.err.println("  " + comment);
    }
    return 1;
  }
  byte[] data=(byte[])res.get("data");
  if (argi < argc) {
    String path=args[argi];
    try {
      new SimpleFile(path,"rws").write(data);
    }
 catch (    Exception e) {
      e.printStackTrace(System.err);
      System.err.println("Failed to save data to file '" + path);
      return 1;
    }
  }
 else {
    for (int i=0; i < data.length; i++) {
      char c=(char)data[i];
      System.out.print(c);
    }
    System.out.flush();
  }
  return 0;
}
