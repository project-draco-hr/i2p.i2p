{
  QPeer peerRec=(QPeer)node.peers.get(peerId);
  int timeLastPeersUpdate=peerRec.getTimeLastUpdate();
  int timeNextContact;
  int doCatalog=((Integer)(job.get("includeCatalog"))).intValue();
  int doPeers=((Integer)(job.get("includePeers"))).intValue();
  Vector peers;
  Vector items;
  node.log.info("doGetUpdate: " + node.id + " -> "+ peerId);
  try {
    Hashtable result=node.peerGetUpdate(peerId,timeLastPeersUpdate,doPeers,doCatalog);
    String status=(String)result.get("status");
    if (status.equals("ok")) {
      node.log.debug("doGetUpdate: successful, result=" + result);
      int i;
      peers=(Vector)result.get("peers");
      int npeers=peers.size();
      for (i=0; i < npeers; i++) {
        String destStr=(String)peers.get(i);
        String destId=node.destToId(destStr);
        if (!node.peers.containsKey(destId)) {
          node.log.debug("doGetPeerList: adding new peer " + destId);
          node.newPeer(destStr);
        }
 else {
          node.log.debug("doGetPeerList: we already know peer " + destId);
        }
      }
      items=(Vector)result.get("items");
      int nitems=items.size();
      for (i=0; i < nitems; i++) {
        Hashtable metadata=(Hashtable)(items.get(i));
        node.addMetadataToCatalog(metadata);
        String key=(String)metadata.get("key");
        node.addItemLocation(key,peerId);
      }
      int nextTime=((Integer)result.get("timeNextContact")).intValue();
      int lastTime=((Integer)result.get("timeUpdateEnds")).intValue();
      peerRec.setTimeNextContact(nextTime);
      peerRec.setTimeLastUpdate(lastTime);
      Hashtable job=new Hashtable();
      job.put("cmd","getUpdate");
      job.put("peerId",peerId);
      job.put("includePeers",new Integer(doPeers));
      job.put("includeCatalog",new Integer(doCatalog));
      node.runAt(((long)nextTime) * 1000,job,"getUpdate:peerId=" + peerId);
    }
  }
 catch (  Exception e) {
    node.log.warn("xmlrpc client failure, rescheduling 180 secs from now",e);
    Hashtable job=new Hashtable();
    job.put("cmd","getUpdate");
    job.put("peerId",peerId);
    job.put("includePeers",new Integer(doPeers));
    job.put("includeCatalog",new Integer(doCatalog));
    node.runAfter(180000,job,"getUpdate:peerId=" + peerId);
  }
}
