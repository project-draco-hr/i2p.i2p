{
  Hashtable result=new Hashtable();
  BufferLogger log=new BufferLogger();
  String[] args=new String[1];
  if (criteria.containsKey("job")) {
    Object j=criteria.get("job");
  }
  if (criteria.containsKey("job") && criteria.get("job").equals("all")) {
    return xmlrpcClose("all");
  }
  Hashtable jobs=xmlrpcList();
  Vector jobsList=(Vector)(jobs.get("jobs"));
  int numJobs=jobsList.size();
  int i;
  for (i=0; i < numJobs; i++) {
    boolean closing=false;
    Hashtable job=(Hashtable)jobsList.get(i);
    if (criteria.containsKey("job") && criteria.get("job").equals(job.get("job"))) {
      closing=true;
    }
    if (criteria.containsKey("type") && criteria.get("type").equals(job.get("type"))) {
      closing=true;
    }
    if (criteria.containsKey("port") && criteria.get("port").equals(job.get("port"))) {
      closing=true;
    }
    if (criteria.containsKey("host") && job.containsKey("host") && (criteria.get("host").equals(job.get("host")))) {
      closing=true;
    }
    if (criteria.containsKey("ip") && job.containsKey("ip") && (criteria.get("ip").equals(job.get("ip")))) {
      closing=true;
    }
    if (closing) {
      String jobStr=String.valueOf(job.get("job"));
      args[0]=jobStr;
      runClose(args,log);
      result.put("status","ok");
      return result;
    }
  }
  result.put("status","ok");
  return result;
}
