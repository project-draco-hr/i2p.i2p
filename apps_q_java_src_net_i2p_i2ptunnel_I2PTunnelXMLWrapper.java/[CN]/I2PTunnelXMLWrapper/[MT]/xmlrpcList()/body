{
  Hashtable result=new Hashtable();
  BufferLogger log=new BufferLogger();
  Vector jobs=new Vector();
  runList(log);
  String raw=log.getBuffer();
  if (raw.equals("")) {
    System.out.println("list: no jobs");
  }
 else {
    String[] rawlines=raw.trim().split("\\n+");
    int numLines=Array.getLength(rawlines);
    int i;
    System.out.println("list: numLines=" + numLines);
    for (i=0; i < numLines; i++) {
      String line=rawlines[i];
      System.out.println("list: line[" + i + "]="+ line);
      String[] flds=line.split("\\s+");
      String jobFld=flds[0];
      String tcpFld=flds[1];
      String typeFld=flds[2];
      String i2pFld=flds[3];
      Integer portInt;
      int port;
      Hashtable job=new Hashtable();
      Integer jobNumInt=new Integer(jobFld.substring(1,jobFld.length() - 1));
      int jobNum=jobNumInt.intValue();
      job.put("job",jobNumInt);
      if (typeFld.equals("<-")) {
        job.put("type","server");
        String hostsStr;
        String hostStr;
        String ipStr;
        String portStr;
        String[] tmpFlds=tcpFld.split(":");
        hostsStr=tmpFlds[0];
        portStr=tmpFlds[1];
        portInt=new Integer(portStr);
        port=portInt.intValue();
        tmpFlds=hostsStr.split("/");
        hostStr=tmpFlds[0];
        ipStr=tmpFlds[1];
        job.put("host",hostStr);
        job.put("ip",ipStr);
        job.put("port",portInt);
      }
 else {
        job.put("type","client");
        portInt=new Integer(tcpFld);
        port=portInt.intValue();
        job.put("dest",i2pFld);
        job.put("port",portInt);
      }
      jobs.add(job);
    }
  }
  result.put("status","ok");
  result.put("jobs",jobs);
  return result;
}
