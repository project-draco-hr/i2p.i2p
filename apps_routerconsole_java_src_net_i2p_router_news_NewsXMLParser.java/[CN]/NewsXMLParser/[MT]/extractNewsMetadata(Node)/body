{
  NewsMetadata rv=new NewsMetadata();
  Node n=feed.getNode("title");
  if (n != null)   rv.feedTitle=n.getValue();
  n=feed.getNode("subtitle");
  if (n != null)   rv.feedSubtitle=n.getValue();
  n=feed.getNode("id");
  if (n != null)   rv.feedID=n.getValue();
  n=feed.getNode("updated");
  if (n != null) {
    String v=n.getValue();
    if (v != null) {
      long time=RFC3339Date.parse3339Date(v);
      if (time > 0)       rv.feedUpdated=time;
    }
  }
  List<NewsMetadata.Release> releases=new ArrayList<NewsMetadata.Release>();
  List<Node> releaseNodes=getNodes(feed,"i2p:release");
  if (releaseNodes.size() == 0)   throw new I2PParserException("no release data in XML");
  for (  Node r : releaseNodes) {
    NewsMetadata.Release release=new NewsMetadata.Release();
    String a=r.getAttributeValue("date");
    if (a.length() > 0) {
      long time=RFC3339Date.parse3339Date(a);
      if (time > 0)       release.date=time;
    }
    a=r.getAttributeValue("minVersion");
    if (a.length() > 0)     release.minVersion=a;
    a=r.getAttributeValue("minJavaVersion");
    if (a.length() > 0)     release.minJavaVersion=a;
    n=r.getNode("i2p:version");
    if (n != null)     release.i2pVersion=n.getValue();
    List<NewsMetadata.Update> updates=new ArrayList<NewsMetadata.Update>();
    List<Node> updateNodes=getNodes(r,"i2p:update");
    for (    Node u : updateNodes) {
      String type=u.getAttributeValue("type");
      if (type.length() > 0) {
        NewsMetadata.Update update=new NewsMetadata.Update();
        update.type=type;
        int totalSources=0;
        List<String> torrents=new ArrayList<String>();
        List<Node> torrentNodes=getNodes(u,"i2p:torrent");
        for (        Node t : torrentNodes) {
          String href=t.getAttributeValue("href");
          if (href.length() > 0) {
            torrents.add(href);
          }
        }
        update.torrent=torrents;
        totalSources+=torrents.size();
        if (totalSources == 0)         throw new I2PParserException("no sources for update type " + type);
        updates.add(update);
      }
    }
    Collections.sort(updates);
    release.updates=updates;
    releases.add(release);
  }
  Collections.sort(releases);
  rv.releases=releases;
  return rv;
}
