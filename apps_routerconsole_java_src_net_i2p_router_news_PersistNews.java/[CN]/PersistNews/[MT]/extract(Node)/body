{
  NewsEntry e=new NewsEntry();
  Node n=entry.getNode("title");
  if (n != null) {
    e.title=n.getValue();
    if (e.title != null)     e.title=e.title.trim();
  }
  n=entry.getNode("link");
  if (n != null) {
    String a=n.getAttributeValue("href");
    if (a.length() > 0)     e.link=a.trim();
  }
  n=entry.getNode("id");
  if (n != null) {
    e.id=n.getValue();
    if (e.id != null)     e.id=e.id.trim();
  }
  n=entry.getNode("updated");
  if (n != null) {
    String v=n.getValue();
    if (v != null) {
      long time=RFC3339Date.parse3339Date(v.trim());
      if (time > 0)       e.updated=time;
    }
  }
  n=entry.getNode("summary");
  if (n != null) {
    e.summary=n.getValue();
    if (e.summary != null)     e.summary=e.summary.trim();
  }
  n=entry.getNode("author");
  if (n != null) {
    n=n.getNode("name");
    if (n != null) {
      e.authorName=n.getValue();
      if (e.authorName != null)       e.authorName=e.authorName.trim();
    }
  }
  n=entry.getNode("content");
  if (n != null) {
    String a=n.getAttributeValue("type");
    if (a.length() > 0)     e.contentType=a;
    StringBuilder buf=new StringBuilder(256);
    for (int i=0; i < n.getNNodes(); i++) {
      Node sn=n.getNode(i);
      XMLParser.toString(buf,sn);
    }
    e.content=buf.toString();
  }
  return e;
}
