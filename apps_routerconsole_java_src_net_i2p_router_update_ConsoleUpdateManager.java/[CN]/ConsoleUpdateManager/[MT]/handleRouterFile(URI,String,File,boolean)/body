{
  String url=uri.toString();
  updateStatus("<b>" + _("Update downloaded") + "</b>");
  File to=new File(_context.getRouterDir(),Router.UPDATE_FILE);
  String err;
  if (isSU3) {
    SU3File up=new SU3File(_context,f);
    File temp=new File(_context.getTempDir(),"su3out-" + _context.random().nextLong() + ".zip");
    try {
      if (up.verifyAndMigrate(temp)) {
        String ver=up.getVersionString();
        int type=up.getContentType();
        if (ver == null || VersionComparator.comp(RouterVersion.VERSION,ver) <= 0)         err="Old version " + ver;
 else         if (type != SU3File.CONTENT_ROUTER)         err="Bad su3 content type " + type;
 else         if (!FileUtil.copy(temp,to,true,false))         err="Failed copy to " + to;
 else         err=null;
      }
 else {
        err="Signature failed, signer " + DataHelper.stripHTML(up.getSignerString()) + ' '+ up.getSigType();
      }
    }
 catch (    IOException ioe) {
      _log.error("SU3 extract error",ioe);
      err=DataHelper.stripHTML(ioe.toString());
    }
 finally {
      temp.delete();
    }
  }
 else {
    TrustedUpdate up=new TrustedUpdate(_context);
    err=up.migrateVerified(RouterVersion.VERSION,f,to);
  }
  if (err == null) {
    String policy=_context.getProperty(ConfigUpdateHandler.PROP_UPDATE_POLICY);
    long modtime=_context.clock().now();
    _context.router().saveConfig(NewsHelper.PROP_LAST_UPDATE_TIME,Long.toString(modtime));
    if ("install".equals(policy)) {
      _log.log(Log.CRIT,"Update was VERIFIED, restarting to install it");
      updateStatus("<b>" + _("Update verified") + "</b><br>"+ _("Restarting"));
      restart();
    }
 else {
      _log.log(Log.CRIT,"Update was VERIFIED, will be installed at next restart");
      updateStatus("");
    }
  }
 else {
    _log.log(Log.CRIT,err + " from " + url);
    updateStatus("<b>" + err + ' '+ _("from {0}",linkify(url))+ " </b>");
  }
  return err == null;
}
