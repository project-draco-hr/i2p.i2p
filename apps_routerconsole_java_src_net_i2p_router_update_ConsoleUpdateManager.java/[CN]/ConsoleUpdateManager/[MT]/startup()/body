{
  changeState(STARTING);
  notifyInstalled(NEWS,"",Long.toString(NewsHelper.lastUpdated(_context)));
  notifyInstalled(ROUTER_SIGNED,"",RouterVersion.VERSION);
  notifyInstalled(ROUTER_SIGNED_SU3,"",RouterVersion.VERSION);
  (new NewsFetcher(_context,this,Collections.<URI>emptyList())).checkForUpdates();
  for (  String plugin : PluginStarter.getPlugins()) {
    Properties props=PluginStarter.pluginProperties(_context,plugin);
    String ver=props.getProperty("version");
    if (ver != null)     notifyInstalled(PLUGIN,plugin,ver);
  }
  DummyHandler dh=new DummyHandler(_context,this);
  register((Checker)dh,TYPE_DUMMY,METHOD_DUMMY,0);
  register((Updater)dh,TYPE_DUMMY,METHOD_DUMMY,0);
  VersionAvailable dummyVA=new VersionAvailable("","",METHOD_DUMMY,Collections.<URI>emptyList());
  _available.put(new UpdateItem(TYPE_DUMMY,""),dummyVA);
  Checker c=new NewsHandler(_context,this);
  register(c,NEWS,HTTP,0);
  register(c,NEWS_SU3,HTTP,0);
  register(c,ROUTER_SIGNED,HTTP,0);
  Updater u=new UpdateHandler(_context,this);
  register(u,ROUTER_SIGNED,HTTP,0);
  if (ConfigUpdateHandler.USE_SU3_UPDATE) {
    register(c,ROUTER_SIGNED_SU3,HTTP,0);
    register(u,ROUTER_SIGNED_SU3,HTTP,0);
  }
  UnsignedUpdateHandler uuh=new UnsignedUpdateHandler(_context,this);
  register((Checker)uuh,ROUTER_UNSIGNED,HTTP,0);
  register((Updater)uuh,ROUTER_UNSIGNED,HTTP,0);
  String newVersion=_context.getProperty(PROP_UNSIGNED_AVAILABLE);
  if (newVersion != null) {
    List<URI> updateSources=uuh.getUpdateSources();
    if (uuh != null) {
      VersionAvailable newVA=new VersionAvailable(newVersion,"",HTTP,updateSources);
      _available.put(new UpdateItem(ROUTER_UNSIGNED,""),newVA);
    }
  }
  DevSU3UpdateHandler dsuh=new DevSU3UpdateHandler(_context,this);
  register((Checker)dsuh,ROUTER_DEV_SU3,HTTP,0);
  register((Updater)dsuh,ROUTER_DEV_SU3,HTTP,0);
  newVersion=_context.getProperty(PROP_DEV_SU3_AVAILABLE);
  if (newVersion != null) {
    List<URI> updateSources=dsuh.getUpdateSources();
    if (dsuh != null) {
      VersionAvailable newVA=new VersionAvailable(newVersion,"",HTTP,updateSources);
      _available.put(new UpdateItem(ROUTER_DEV_SU3,""),newVA);
    }
  }
  PluginUpdateHandler puh=new PluginUpdateHandler(_context,this);
  register((Checker)puh,PLUGIN,HTTP,0);
  register((Updater)puh,PLUGIN,HTTP,0);
  register((Updater)puh,PLUGIN,FILE,0);
  new NewsTimerTask(_context,this);
  _context.simpleTimer2().addPeriodicEvent(new TaskCleaner(),TASK_CLEANER_TIME);
  changeState(RUNNING);
  if (_cmgr != null)   _cmgr.register(this);
}
