{
  FileInputStream in=null;
  try {
    in=new FileInputStream(_newsFile);
    StringBuilder buf=new StringBuilder(128);
    while (DataHelper.readLine(in,buf)) {
      int index=buf.indexOf(VERSION_PREFIX);
      if (index >= 0) {
        int end=buf.indexOf("\"",index + VERSION_PREFIX.length());
        if (end > index) {
          String ver=buf.substring(index + VERSION_PREFIX.length(),end);
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Found version: [" + ver + "]");
          if (TrustedUpdate.needsUpdate(RouterVersion.VERSION,ver)) {
            if (_log.shouldLog(Log.DEBUG))             _log.debug("Our version is out of date, update!");
            _mgr.notifyVersionAvailable(this,_currentURI,ROUTER_SIGNED,"",HTTP,_mgr.getUpdateURLs(ROUTER_SIGNED,"",HTTP),ver,"");
          }
 else {
            if (_log.shouldLog(Log.DEBUG))             _log.debug("Our version is current");
          }
          return;
        }
      }
      if (buf.indexOf(VERSION_STRING) == -1) {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("No match in " + buf.toString());
      }
      buf.setLength(0);
    }
  }
 catch (  IOException ioe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Error checking the news for an update",ioe);
    return;
  }
 finally {
    if (in != null)     try {
      in.close();
    }
 catch (    IOException ioe) {
    }
  }
  if (_log.shouldLog(Log.WARN))   _log.warn("No version found in news.xml file");
}
