{
  _updated=false;
  if (_xpi2pURL.startsWith("file://")) {
    updateStatus("<b>" + _("Attempting to install from file {0}",_xpi2pURL) + "</b>");
    String xpi2pfile=_xpi2pURL.substring(7);
    if (xpi2pfile.length() == 0) {
      statusDone("<b>" + _("No file specified {0}",_xpi2pURL) + "</b>");
    }
 else {
      long alreadyTransferred=(new File(xpi2pfile)).getAbsoluteFile().length();
      if (FileUtil.copy((new File(xpi2pfile)).getAbsolutePath(),_updateFile,true,false)) {
        transferComplete(alreadyTransferred,alreadyTransferred,0L,_xpi2pURL,_updateFile,false);
      }
 else {
        statusDone("<b>" + _("Failed to install from file {0}, copy failed.",_xpi2pURL) + "</b>");
      }
    }
  }
 else {
    updateStatus("<b>" + _("Downloading plugin from {0}",_xpi2pURL) + "</b>");
    boolean shouldProxy=_context.getProperty(ConfigUpdateHandler.PROP_SHOULD_PROXY,ConfigUpdateHandler.DEFAULT_SHOULD_PROXY);
    String proxyHost=_context.getProperty(ConfigUpdateHandler.PROP_PROXY_HOST,ConfigUpdateHandler.DEFAULT_PROXY_HOST);
    int proxyPort=ConfigUpdateHandler.proxyPort(_context);
    try {
      if (shouldProxy)       _get=new EepGet(_context,proxyHost,proxyPort,10,_updateFile,_xpi2pURL,false);
 else       _get=new EepGet(_context,1,_updateFile,_xpi2pURL,false);
      _get.addStatusListener(PluginUpdateRunner.this);
      _get.fetch(CONNECT_TIMEOUT,-1,shouldProxy ? INACTIVITY_TIMEOUT : NOPROXY_INACTIVITY_TIMEOUT);
    }
 catch (    Throwable t) {
      _log.error("Error downloading plugin",t);
    }
  }
  if (_updated)   _mgr.notifyComplete(this,_newVersion,null);
 else   _mgr.notifyTaskFailed(this,_errMsg,null);
}
