{
  StringBuilder buf=new StringBuilder(1024);
  Map<Hash,Banlist.Entry> entries=new TreeMap<Hash,Banlist.Entry>(new HashComparator());
  entries.putAll(_context.banlist().getEntries());
  if (entries.isEmpty()) {
    buf.append("<i>").append(_("none")).append("</i>");
    out.write(buf.toString());
    return;
  }
  buf.append("<ul>");
  for (  Map.Entry<Hash,Banlist.Entry> e : entries.entrySet()) {
    Hash key=e.getKey();
    Banlist.Entry entry=e.getValue();
    long expires=entry.expireOn - _context.clock().now();
    if (expires <= 0)     continue;
    buf.append("<li>").append(_context.commSystem().renderPeerHTML(key));
    buf.append(' ');
    String expireString=DataHelper.formatDuration2(expires);
    if (key.equals(Hash.FAKE_HASH))     buf.append(_("Permanently banned"));
 else     if (expires < 5l * 24 * 60* 60* 1000)     buf.append(_("Temporary ban expiring in {0}",expireString));
 else     buf.append(_("Banned until restart or in {0}",expireString));
    Set<String> transports=entry.transports;
    if ((transports != null) && (!transports.isEmpty()))     buf.append(" on the following transport: ").append(transports);
    if (entry.cause != null) {
      buf.append("<br>\n");
      if (entry.causeCode != null)       buf.append(_(entry.cause,entry.causeCode));
 else       buf.append(_(entry.cause));
    }
    if (!key.equals(Hash.FAKE_HASH)) {
      buf.append(" (<a href=\"configpeer?peer=").append(key.toBase64()).append("#unsh\">").append(_("unban now")).append("</a>)");
    }
    buf.append("</li>\n");
  }
  buf.append("</ul>\n");
  out.write(buf.toString());
  out.flush();
}
