{
  StringBuilder buf=new StringBuilder(1024);
  buf.append("<table>\n" + "<tr><th align=\"right\">").append(_("Plugin")).append("</th><th>").append(_("Run at Startup?")).append("</th><th>").append(_("Control")).append("</th><th align=\"left\">").append(_("Description")).append("</th></tr>\n");
  Properties props=PluginStarter.pluginProperties();
  Set<String> keys=new TreeSet<String>(props.stringPropertyNames());
  for (  String name : keys) {
    if (name.startsWith(PluginStarter.PREFIX) && name.endsWith(PluginStarter.ENABLED)) {
      String app=name.substring(PluginStarter.PREFIX.length(),name.lastIndexOf(PluginStarter.ENABLED));
      String val=props.getProperty(name);
      if (val.equals(PluginStarter.DELETED))       continue;
      Properties appProps=PluginStarter.pluginProperties(_context,app);
      if (appProps.isEmpty())       continue;
      StringBuilder desc=new StringBuilder(256);
      desc.append("<table border=\"0\">").append("<tr><td><b>").append(_("Version")).append("</b></td><td>").append(stripHTML(appProps,"version")).append("<tr><td><b>").append(_("Signed by")).append("</b></td><td>");
      String s=stripHTML(appProps,"signer");
      if (s != null) {
        if (s.indexOf("@") > 0)         desc.append("<a href=\"mailto:").append(s).append("\">").append(s).append("</a>");
 else         desc.append(s);
      }
      s=stripHTML(appProps,"date");
      if (s != null) {
        long ms=0;
        try {
          ms=Long.parseLong(s);
        }
 catch (        NumberFormatException nfe) {
        }
        if (ms > 0) {
          String date=(new SimpleDateFormat("yyyy-MM-dd HH:mm")).format(new Date(ms));
          desc.append("<tr><td><b>").append(_("Date")).append("</b></td><td>").append(date);
        }
      }
      s=stripHTML(appProps,"author");
      if (s != null) {
        desc.append("<tr><td><b>").append(_("Author")).append("</b></td><td>");
        if (s.indexOf("@") > 0)         desc.append("<a href=\"mailto:").append(s).append("\">").append(s).append("</a>");
 else         desc.append(s);
      }
      s=stripHTML(appProps,"description_" + Messages.getLanguage(_context));
      if (s == null)       s=stripHTML(appProps,"description");
      if (s != null) {
        desc.append("<tr><td><b>").append(_("Description")).append("</b></td><td>").append(s);
      }
      s=stripHTML(appProps,"license");
      if (s != null) {
        desc.append("<tr><td><b>").append(_("License")).append("</b></td><td>").append(s);
      }
      s=stripHTML(appProps,"websiteURL");
      if (s != null) {
        desc.append("<tr><td>").append("<a href=\"").append(s).append("\">").append(_("Website")).append("</a><td>&nbsp;");
      }
      String updateURL=stripHTML(appProps,"updateURL.su3");
      if (updateURL == null)       updateURL=stripHTML(appProps,"updateURL");
      if (updateURL != null) {
        desc.append("<tr><td>").append("<a href=\"").append(updateURL).append("\">").append(_("Update link")).append("</a><td>&nbsp;");
      }
      desc.append("</table>");
      boolean isRunning=PluginStarter.isPluginRunning(app,_context);
      boolean enableStop=isRunning && !Boolean.parseBoolean(appProps.getProperty("disableStop"));
      boolean enableStart=!isRunning;
      renderForm(buf,app,app,false,"true".equals(val),false,false,desc.toString(),false,false,updateURL != null,enableStop,true,enableStart);
    }
  }
  buf.append("</table>\n");
  return buf.toString();
}
