{
  boolean updated=false;
  if ((_inboundRate != null) && (_inboundRate.length() > 0)) {
    _context.router().setConfigSetting(ConfigNetHelper.PROP_INBOUND_KBPS,_inboundRate);
    updated=true;
  }
  if ((_outboundRate != null) && (_outboundRate.length() > 0)) {
    _context.router().setConfigSetting(ConfigNetHelper.PROP_OUTBOUND_KBPS,_outboundRate);
    updated=true;
  }
  if ((_inboundBurstRate != null) && (_inboundBurstRate.length() > 0)) {
    _context.router().setConfigSetting(ConfigNetHelper.PROP_INBOUND_BURST_KBPS,_inboundBurstRate);
    updated=true;
  }
  if ((_outboundBurstRate != null) && (_outboundBurstRate.length() > 0)) {
    _context.router().setConfigSetting(ConfigNetHelper.PROP_OUTBOUND_BURST_KBPS,_outboundBurstRate);
    updated=true;
  }
  String inBurstRate=_context.router().getConfigSetting(ConfigNetHelper.PROP_INBOUND_BURST_KBPS);
  if (_inboundBurst != null) {
    int rateKBps=0;
    int burstSeconds=0;
    try {
      rateKBps=Integer.parseInt(inBurstRate);
      burstSeconds=Integer.parseInt(_inboundBurst);
    }
 catch (    NumberFormatException nfe) {
    }
    if ((rateKBps > 0) && (burstSeconds > 0)) {
      int kb=rateKBps * burstSeconds;
      _context.router().setConfigSetting(ConfigNetHelper.PROP_INBOUND_BURST,"" + kb);
      updated=true;
    }
  }
  String outBurstRate=_context.router().getConfigSetting(ConfigNetHelper.PROP_OUTBOUND_BURST_KBPS);
  if (_outboundBurst != null) {
    int rateKBps=0;
    int burstSeconds=0;
    try {
      rateKBps=Integer.parseInt(outBurstRate);
      burstSeconds=Integer.parseInt(_outboundBurst);
    }
 catch (    NumberFormatException nfe) {
    }
    if ((rateKBps > 0) && (burstSeconds > 0)) {
      int kb=rateKBps * burstSeconds;
      _context.router().setConfigSetting(ConfigNetHelper.PROP_OUTBOUND_BURST,"" + kb);
      updated=true;
    }
  }
  if (updated && !_ratesOnly)   addFormNotice("Updated bandwidth limits");
}
