{
  if ("Save Configuration".equals(_action)) {
    _context.router().saveConfig();
    addFormNotice("Settings saved - not really!!!!!");
  }
 else   if (_action.equals(_t("Ban peer until restart"))) {
    Hash h=getHash();
    if (h != null) {
      _context.banlist().banlistRouterForever(h,_t("Manually banned via {0}"),"<a href=\"configpeer\">configpeer</a>");
      addFormNotice(_t("Peer") + " " + _peer+ " "+ _t("banned until restart"));
      return;
    }
    addFormError(_t("Invalid peer"));
  }
 else   if (_action.equals(_t("Unban peer"))) {
    Hash h=getHash();
    if (h != null) {
      if (_context.banlist().isBanlisted(h)) {
        _context.banlist().unbanlistRouter(h);
        addFormNotice(_t("Peer") + " " + _peer+ " "+ _t("unbanned"));
      }
 else       addFormNotice(_t("Peer") + " " + _peer+ " "+ _t("is not currently banned"));
      return;
    }
    addFormError(_t("Invalid peer"));
  }
 else   if (_action.equals(_t("Adjust peer bonuses"))) {
    Hash h=getHash();
    if (h != null) {
      PeerProfile prof=_context.profileOrganizer().getProfile(h);
      if (prof != null) {
        try {
          prof.setSpeedBonus(Long.parseLong(_speed));
        }
 catch (        NumberFormatException nfe) {
          addFormError(_t("Bad speed value"));
        }
        try {
          prof.setCapacityBonus(Long.parseLong(_capacity));
        }
 catch (        NumberFormatException nfe) {
          addFormError(_t("Bad capacity value"));
        }
        addFormNotice("Bonuses adjusted for " + _peer);
      }
 else       addFormError("No profile exists for " + _peer);
      return;
    }
    addFormError(_t("Invalid peer"));
  }
 else   if (_action.startsWith("Check")) {
    addFormError(_t("Unsupported"));
  }
 else {
  }
}
