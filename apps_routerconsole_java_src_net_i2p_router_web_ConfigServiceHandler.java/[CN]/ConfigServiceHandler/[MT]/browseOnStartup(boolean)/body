{
  File f=new File("clients.config");
  Properties p=new Properties();
  try {
    DataHelper.loadProps(p,f);
    int i=0;
    int launchIndex=-1;
    while (true) {
      String className=p.getProperty("clientApp." + i + ".main");
      if (className == null)       break;
      if (UrlLauncher.class.getName().equals(className)) {
        launchIndex=i;
        break;
      }
      i++;
    }
    if ((launchIndex >= 0) && shouldLaunchBrowser)     return;
    if ((launchIndex < 0) && !shouldLaunchBrowser)     return;
    if (shouldLaunchBrowser) {
      p.setProperty("clientApp." + i + ".main",UrlLauncher.class.getName());
      p.setProperty("clientApp." + i + ".name","BrowserLauncher");
      p.setProperty("clientApp." + i + ".args","http://localhost:7657/index.jsp");
      p.setProperty("clientApp." + i + ".delay","5");
    }
 else {
      p.remove("clientApp." + launchIndex + ".main");
      p.remove("clientApp." + launchIndex + ".name");
      p.remove("clientApp." + launchIndex + ".args");
      p.remove("clientApp." + launchIndex + ".onBoot");
      p.remove("clientApp." + launchIndex + ".delay");
      i=launchIndex + 1;
      while (true) {
        String main=p.getProperty("clientApp." + i + ".main");
        String name=p.getProperty("clientApp." + i + ".name");
        String args=p.getProperty("clientApp." + i + ".args");
        String boot=p.getProperty("clientApp." + i + ".onBoot");
        String delay=p.getProperty("clientApp." + i + ".delay");
        if (main == null)         break;
        p.setProperty("clientApp." + (i - 1) + ".main",main);
        p.setProperty("clientApp." + (i - 1) + ".name",name);
        p.setProperty("clientApp." + (i - 1) + ".args",args);
        if (boot != null)         p.setProperty("clientApp." + (i - 1) + ".onBoot",boot);
        if (delay != null)         p.setProperty("clientApp." + (i - 1) + ".delay",delay);
        p.remove("clientApp." + i + ".main");
        p.remove("clientApp." + i + ".name");
        p.remove("clientApp." + i + ".args");
        p.remove("clientApp." + i + ".onBoot");
        p.remove("clientApp." + i + ".delay");
        i++;
      }
    }
    TreeMap sorted=new TreeMap(p);
    FileWriter out=new FileWriter(f);
    for (Iterator iter=sorted.keySet().iterator(); iter.hasNext(); ) {
      String name=(String)iter.next();
      String val=(String)sorted.get(name);
      out.write(name + "=" + val+ NL);
    }
    out.close();
  }
 catch (  IOException ioe) {
    addFormError("Error updating the client config");
  }
}
