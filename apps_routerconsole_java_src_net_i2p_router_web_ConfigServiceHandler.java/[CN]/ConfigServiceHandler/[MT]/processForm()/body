{
  if (_action == null)   return;
  if ("Shutdown gracefully".equals(_action)) {
    _context.router().addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_GRACEFUL));
    _context.router().shutdownGracefully();
    addFormNotice("Graceful shutdown initiated");
  }
 else   if ("Shutdown immediately".equals(_action)) {
    _context.router().addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_HARD));
    _context.router().shutdown(Router.EXIT_HARD);
    addFormNotice("Shutdown immediately!  boom bye bye bad bwoy");
  }
 else   if ("Cancel graceful shutdown".equals(_action)) {
    _context.router().cancelGracefulShutdown();
    addFormNotice("Graceful shutdown cancelled");
  }
 else   if ("Graceful restart".equals(_action)) {
    _context.router().addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_GRACEFUL_RESTART));
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL_RESTART);
    addFormNotice("Graceful restart requested");
  }
 else   if ("Hard restart".equals(_action)) {
    _context.router().addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_HARD_RESTART));
    _context.router().shutdown(Router.EXIT_HARD_RESTART);
    addFormNotice("Hard restart requested");
  }
 else   if ("Rekey and Restart".equals(_action)) {
    addFormNotice("Rekeying after graceful restart");
    _context.router().addShutdownTask(new UpdateWrapperManagerAndRekeyTask(Router.EXIT_GRACEFUL_RESTART));
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL_RESTART);
  }
 else   if ("Rekey and Shutdown".equals(_action)) {
    addFormNotice("Rekeying after graceful shutdown");
    _context.router().addShutdownTask(new UpdateWrapperManagerAndRekeyTask(Router.EXIT_GRACEFUL));
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL);
  }
 else   if ("Run I2P on startup".equals(_action)) {
    installService();
  }
 else   if ("Don't run I2P on startup".equals(_action)) {
    uninstallService();
  }
 else   if ("Dump threads".equals(_action)) {
    try {
      WrapperManager.requestThreadDump();
    }
 catch (    Throwable t) {
      addFormError("Warning: unable to contact the service manager - " + t.getMessage());
    }
    addFormNotice("Threads dumped to wrapper.log");
  }
 else   if ("Show systray icon".equals(_action)) {
    try {
      SysTray tray=SysTray.getInstance();
      if (tray != null) {
        tray.show();
        addFormNotice("Systray enabled");
      }
 else {
        addFormNotice("Systray not supported on this platform");
      }
    }
 catch (    Throwable t) {
      addFormError("Warning: unable to contact the systray manager - " + t.getMessage());
    }
  }
 else   if ("Hide systray icon".equals(_action)) {
    try {
      SysTray tray=SysTray.getInstance();
      if (tray != null) {
        tray.hide();
        addFormNotice("Systray disabled");
      }
 else {
        addFormNotice("Systray not supported on this platform");
      }
    }
 catch (    Throwable t) {
      addFormError("Warning: unable to contact the systray manager - " + t.getMessage());
    }
  }
 else   if ("View console on startup".equals(_action)) {
    browseOnStartup(true);
    addFormNotice("Console is to be shown on startup");
  }
 else   if ("Do not view console on startup".equals(_action)) {
    browseOnStartup(false);
    addFormNotice("Console is not to be shown on startup");
  }
 else {
    addFormNotice("Blah blah blah.  whatever.  I'm not going to " + _action);
  }
}
