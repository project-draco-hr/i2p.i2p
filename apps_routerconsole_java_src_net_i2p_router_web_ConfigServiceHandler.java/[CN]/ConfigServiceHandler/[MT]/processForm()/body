{
  if (_action == null)   return;
  if (_t("Shutdown gracefully").equals(_action)) {
    if (_context.hasWrapper())     registerWrapperNotifier(Router.EXIT_GRACEFUL,false);
    _context.router().shutdownGracefully();
    addFormNotice(_t("Graceful shutdown initiated"));
  }
 else   if (_t("Shutdown immediately").equals(_action)) {
    if (_context.hasWrapper())     registerWrapperNotifier(Router.EXIT_HARD,false);
    _context.router().shutdown(Router.EXIT_HARD);
    addFormNotice(_t("Shutdown immediately"));
  }
 else   if (_t("Cancel graceful shutdown").equals(_action)) {
    _context.router().cancelGracefulShutdown();
    addFormNotice(_t("Graceful shutdown cancelled"));
  }
 else   if (_t("Graceful restart").equals(_action)) {
    if (_context.hasWrapper())     registerWrapperNotifier(Router.EXIT_GRACEFUL_RESTART,false);
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL_RESTART);
    addFormNotice(_t("Graceful restart requested"));
  }
 else   if (_t("Hard restart").equals(_action)) {
    if (_context.hasWrapper())     registerWrapperNotifier(Router.EXIT_HARD_RESTART,false);
    _context.router().shutdown(Router.EXIT_HARD_RESTART);
    addFormNotice(_t("Hard restart requested"));
  }
 else   if (_t("Rekey and Restart").equals(_action)) {
    addFormNotice(_t("Rekeying after graceful restart"));
    registerWrapperNotifier(Router.EXIT_GRACEFUL_RESTART,true);
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL_RESTART);
  }
 else   if (_t("Rekey and Shutdown").equals(_action)) {
    addFormNotice(_t("Rekeying after graceful shutdown"));
    registerWrapperNotifier(Router.EXIT_GRACEFUL,true);
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL);
  }
 else   if (_t("Run I2P on startup").equals(_action)) {
    installService();
  }
 else   if (_t("Don't run I2P on startup").equals(_action)) {
    uninstallService();
  }
 else   if (_t("Dump threads").equals(_action)) {
    try {
      WrapperManager.requestThreadDump();
    }
 catch (    Throwable t) {
      addFormError("Warning: unable to contact the service manager - " + t.getMessage());
    }
    File wlog=LogsHelper.wrapperLogFile(_context);
    addFormNotice(_t("Threads dumped to {0}",wlog.getAbsolutePath()));
  }
 else   if (_t("View console on startup").equals(_action)) {
    browseOnStartup(true);
    addFormNotice(_t("Console is to be shown on startup"));
  }
 else   if (_t("Do not view console on startup").equals(_action)) {
    browseOnStartup(false);
    addFormNotice(_t("Console is not to be shown on startup"));
  }
 else   if (_t("Force GC").equals(_action)) {
    Runtime.getRuntime().gc();
    addFormNotice(_t("Full garbage collection requested"));
  }
 else {
  }
}
