{
  if (_action == null)   return;
  if (_("Shutdown gracefully").equals(_action)) {
    _context.addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_GRACEFUL));
    _context.router().shutdownGracefully();
    addFormNotice(_("Graceful shutdown initiated"));
  }
 else   if (_("Shutdown immediately").equals(_action)) {
    _context.addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_HARD));
    _context.router().shutdown(Router.EXIT_HARD);
    addFormNotice(_("Shutdown immediately!  boom bye bye bad bwoy"));
  }
 else   if (_("Cancel graceful shutdown").equals(_action)) {
    _context.router().cancelGracefulShutdown();
    addFormNotice(_("Graceful shutdown cancelled"));
  }
 else   if (_("Graceful restart").equals(_action)) {
    _context.addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_GRACEFUL_RESTART));
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL_RESTART);
    addFormNotice(_("Graceful restart requested"));
  }
 else   if (_("Hard restart").equals(_action)) {
    _context.addShutdownTask(new UpdateWrapperManagerTask(Router.EXIT_HARD_RESTART));
    _context.router().shutdown(Router.EXIT_HARD_RESTART);
    addFormNotice(_("Hard restart requested"));
  }
 else   if (_("Rekey and Restart").equals(_action)) {
    addFormNotice(_("Rekeying after graceful restart"));
    _context.addShutdownTask(new UpdateWrapperManagerAndRekeyTask(Router.EXIT_GRACEFUL_RESTART));
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL_RESTART);
  }
 else   if (_("Rekey and Shutdown").equals(_action)) {
    addFormNotice(_("Rekeying after graceful shutdown"));
    _context.addShutdownTask(new UpdateWrapperManagerAndRekeyTask(Router.EXIT_GRACEFUL));
    _context.router().shutdownGracefully(Router.EXIT_GRACEFUL);
  }
 else   if (_("Run I2P on startup").equals(_action)) {
    installService();
  }
 else   if (_("Don't run I2P on startup").equals(_action)) {
    uninstallService();
  }
 else   if ("Dump threads".equals(_action)) {
    try {
      WrapperManager.requestThreadDump();
    }
 catch (    Throwable t) {
      addFormError("Warning: unable to contact the service manager - " + t.getMessage());
    }
    addFormNotice("Threads dumped to wrapper.log");
  }
 else   if (_("Show systray icon").equals(_action)) {
    try {
      SysTray tray=SysTray.getInstance();
      if (tray != null) {
        tray.show();
        addFormNotice(_("System tray icon enabled."));
      }
 else {
        addFormNotice(_("System tray icon feature not supported on this platform. Sorry!"));
      }
    }
 catch (    Throwable t) {
      addFormError(_("Warning: unable to contact the systray manager") + " - " + t.getMessage());
    }
  }
 else   if (_("Hide systray icon").equals(_action)) {
    try {
      SysTray tray=SysTray.getInstance();
      if (tray != null) {
        tray.hide();
        addFormNotice(_("System tray icon disabled."));
      }
 else {
        addFormNotice(_("System tray icon feature not supported on this platform. Sorry!"));
      }
    }
 catch (    Throwable t) {
      addFormError(_("Warning: unable to contact the systray manager") + " - " + t.getMessage());
    }
  }
 else   if (_("View console on startup").equals(_action)) {
    browseOnStartup(true);
    addFormNotice(_("Console is to be shown on startup"));
  }
 else   if (_("Do not view console on startup").equals(_action)) {
    browseOnStartup(false);
    addFormNotice(_("Console is not to be shown on startup"));
  }
 else {
  }
}
