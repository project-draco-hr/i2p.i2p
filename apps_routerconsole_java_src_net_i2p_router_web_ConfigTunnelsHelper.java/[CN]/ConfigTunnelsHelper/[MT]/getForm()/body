{
  StringBuffer buf=new StringBuffer(1024);
  buf.append("<table border=\"1\">\n");
  TunnelPoolSettings exploratoryIn=_context.tunnelManager().getInboundSettings();
  TunnelPoolSettings exploratoryOut=_context.tunnelManager().getOutboundSettings();
  buf.append("<input type=\"hidden\" name=\"pool.0\" value=\"exploratory\" >");
  renderForm(buf,0,"exploratory","Exploratory tunnels",exploratoryIn,exploratoryOut);
  int cur=1;
  Set clients=_context.clientManager().listClients();
  for (Iterator iter=clients.iterator(); iter.hasNext(); ) {
    Destination dest=(Destination)iter.next();
    TunnelPoolSettings in=_context.tunnelManager().getInboundSettings(dest.calculateHash());
    TunnelPoolSettings out=_context.tunnelManager().getOutboundSettings(dest.calculateHash());
    String name=(in != null ? in.getDestinationNickname() : null);
    if (name == null)     name=(out != null ? out.getDestinationNickname() : null);
    if (name == null)     name=dest.calculateHash().toBase64().substring(0,6);
    String prefix=dest.calculateHash().toBase64().substring(0,4);
    buf.append("<input type=\"hidden\" name=\"pool.").append(cur).append("\" value=\"");
    buf.append(dest.calculateHash().toBase64()).append("\" >");
    renderForm(buf,cur,prefix,"Client tunnels for " + name,in,out);
    cur++;
  }
  buf.append("</table>\n");
  return buf.toString();
}
