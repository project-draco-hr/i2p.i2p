{
  EventLog ev=_context.router().eventLog();
  Map<Long,String> events;
  boolean isAll=ALL.equals(_event);
  if (isAll)   events=ev.getEvents(_from);
 else   events=ev.getEvents(_event,_from);
  String xev=_xevents.get(_event);
  if (xev == null)   xev=_event;
  xev=DataHelper.escapeHTML(xev);
  if (events.isEmpty()) {
    if (isAll) {
      if (_age == 0)       return _t("No events found");
      return _t("No events found in previous {0}",DataHelper.formatDuration2(_age));
    }
    if (_age == 0)     return _t("No \"{0}\" events found",xev);
    return _t("No \"{0}\" events found in previous {1}",xev,DataHelper.formatDuration2(_age));
  }
  StringBuilder buf=new StringBuilder(2048);
  buf.append("<table><tr><th>");
  buf.append(_t("Time"));
  buf.append("</th><th>");
  if (isAll) {
    buf.append(_t("Event"));
    buf.append("</th><th>");
    buf.append(_t("Details"));
  }
 else {
    buf.append(xev);
  }
  buf.append("</th></tr>");
  SimpleDateFormat fmt=(SimpleDateFormat)DateFormat.getDateTimeInstance(DateFormat.SHORT,DateFormat.MEDIUM);
  fmt.setTimeZone(SystemVersion.getSystemTimeZone(_context));
  List<Map.Entry<Long,String>> entries=new ArrayList<Map.Entry<Long,String>>(events.entrySet());
  Collections.reverse(entries);
  for (  Map.Entry<Long,String> e : entries) {
    long time=e.getKey().longValue();
    String event=e.getValue();
    buf.append("<tr><td>");
    buf.append(fmt.format(new Date(time)));
    buf.append("</td><td>");
    if (isAll) {
      String[] s=DataHelper.split(event," ",2);
      String xs=_xevents.get(s[0]);
      if (xs == null)       xs=s[0];
      buf.append(xs);
      buf.append("</td><td>");
      if (s.length > 1)       buf.append(s[1]);
    }
 else {
      buf.append(event);
    }
    buf.append("</td></tr>");
  }
  buf.append("</table>");
  return buf.toString();
}
