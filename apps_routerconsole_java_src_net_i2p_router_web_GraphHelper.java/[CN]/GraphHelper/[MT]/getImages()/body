{
  if (StatSummarizer.isDisabled())   return "";
  try {
    List<SummaryListener> listeners=StatSummarizer.instance().getListeners();
    TreeSet<SummaryListener> ordered=new TreeSet<SummaryListener>(new AlphaComparator());
    ordered.addAll(listeners);
    boolean hasTx=false;
    boolean hasRx=false;
    for (Iterator<SummaryListener> iter=ordered.iterator(); iter.hasNext(); ) {
      SummaryListener lsnr=iter.next();
      String title=lsnr.getRate().getRateStat().getName();
      if (title.equals("bw.sendRate"))       hasTx=true;
 else       if (title.equals("bw.recvRate"))       hasRx=true;
    }
    if (hasTx && hasRx && !_showEvents) {
      _out.write("<a href=\"graph?stat=bw.combined" + "&amp;c=" + (3 * _periodCount) + "&amp;w="+ (3 * _width)+ "&amp;h="+ (3 * _height)+ "\">");
      String title=_("Combined bandwidth graph");
      _out.write("<img class=\"statimage\"" + " src=\"viewstat.jsp?stat=bw.combined" + "&amp;periodCount=" + _periodCount + "&amp;width="+ _width+ "&amp;height="+ (_height - 13)+ "\" alt=\""+ title+ "\" title=\""+ title+ "\"></a>\n");
    }
    for (Iterator<SummaryListener> iter=ordered.iterator(); iter.hasNext(); ) {
      SummaryListener lsnr=iter.next();
      Rate r=lsnr.getRate();
      String title=_("{0} for {1}",r.getRateStat().getName(),DataHelper.formatDuration2(_periodCount * r.getPeriod()));
      _out.write("<a href=\"graph?stat=" + r.getRateStat().getName() + '.'+ r.getPeriod()+ "&amp;c="+ (3 * _periodCount)+ "&amp;w="+ (3 * _width)+ "&amp;h="+ (3 * _height)+ (_showEvents ? "&amp;showEvents=1" : "")+ "\">");
      _out.write("<img class=\"statimage\" border=\"0\"" + " src=\"viewstat.jsp?stat=" + r.getRateStat().getName() + "&amp;showEvents="+ _showEvents+ "&amp;period="+ r.getPeriod()+ "&amp;periodCount="+ _periodCount+ "&amp;width="+ _width+ "&amp;height="+ _height+ "\" alt=\""+ title+ "\" title=\""+ title+ "\"></a>\n");
    }
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
  return "";
}
