{
  List<Job> readyJobs=new ArrayList(8);
  List<Job> timedJobs=new ArrayList(128);
  List<Job> activeJobs=new ArrayList(8);
  List<Job> justFinishedJobs=new ArrayList(8);
  int numRunners=_context.jobQueue().getJobs(readyJobs,timedJobs,activeJobs,justFinishedJobs);
  StringBuilder buf=new StringBuilder(32 * 1024);
  buf.append("<b><div class=\"joblog\"><h3>I2P Job Queue</h3><div class=\"wideload\">Job runners: ").append(numRunners);
  buf.append("</b><br>\n");
  long now=_context.clock().now();
  buf.append("<hr><b>Active jobs: ").append(activeJobs.size()).append("</b><ol>\n");
  for (int i=0; i < activeJobs.size(); i++) {
    Job j=activeJobs.get(i);
    buf.append("<li>[started ").append(DataHelper.formatDuration2(now - j.getTiming().getStartAfter())).append(" ago]: ");
    buf.append(j.toString()).append("</li>\n");
  }
  buf.append("</ol>\n");
  buf.append("<hr><b>Just finished jobs: ").append(justFinishedJobs.size()).append("</b><ol>\n");
  for (int i=0; i < justFinishedJobs.size(); i++) {
    Job j=justFinishedJobs.get(i);
    buf.append("<li>[finished ").append(DataHelper.formatDuration2(now - j.getTiming().getActualEnd())).append(" ago]: ");
    buf.append(j.toString()).append("</li>\n");
  }
  buf.append("</ol>\n");
  buf.append("<hr><b>Ready/waiting jobs: ").append(readyJobs.size()).append("</b><ol>\n");
  for (int i=0; i < readyJobs.size(); i++) {
    Job j=readyJobs.get(i);
    buf.append("<li>[waiting ");
    buf.append(DataHelper.formatDuration2(now - j.getTiming().getStartAfter()));
    buf.append("]: ");
    buf.append(j.toString()).append("</li>\n");
  }
  buf.append("</ol>\n");
  out.flush();
  buf.append("<hr><b>Scheduled jobs: ").append(timedJobs.size()).append("</b><ol>\n");
  long prev=Long.MIN_VALUE;
  for (  Job j : timedJobs) {
    long time=j.getTiming().getStartAfter() - now;
    buf.append("<li>").append(j.getName()).append(" in ");
    buf.append(DataHelper.formatDuration2(time));
    if (time < 0)     buf.append(" <b>DELAYED</b>");
    if (time < prev)     buf.append(" <b>** OUT OF ORDER **</b>");
    prev=time;
    buf.append("</li>\n");
  }
  buf.append("</ol></div>\n");
  out.flush();
  getJobStats(buf);
  out.flush();
  out.write(buf.toString());
}
