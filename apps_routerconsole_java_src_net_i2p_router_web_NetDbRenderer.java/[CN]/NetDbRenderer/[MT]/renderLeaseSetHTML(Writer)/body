{
  StringBuilder buf=new StringBuilder(4 * 1024);
  buf.append("<h2>" + _("Network Database Contents") + "</h2>\n");
  buf.append("<a href=\"netdb.jsp\">" + _("View") + " RouterInfo</a>");
  buf.append("<h3>LeaseSets</h3>\n");
  Set leases=new TreeSet(new LeaseSetComparator());
  leases.addAll(_context.netDb().getLeases());
  long now=_context.clock().now();
  for (Iterator iter=leases.iterator(); iter.hasNext(); ) {
    LeaseSet ls=(LeaseSet)iter.next();
    Destination dest=ls.getDestination();
    Hash key=dest.calculateHash();
    buf.append("<b>").append(_("LeaseSet")).append(": ").append(key.toBase64());
    if (_context.clientManager().isLocal(dest)) {
      buf.append(" (<a href=\"tunnels.jsp#" + key.toBase64().substring(0,4) + "\">"+ _("Local")+ "</a> ");
      if (!_context.clientManager().shouldPublishLeaseSet(key))       buf.append(_("Unpublished") + ' ');
      buf.append(_("Destination") + ' ');
      TunnelPoolSettings in=_context.tunnelManager().getInboundSettings(key);
      if (in != null && in.getDestinationNickname() != null)       buf.append(in.getDestinationNickname());
 else       buf.append(dest.toBase64().substring(0,6));
    }
 else {
      buf.append(" (" + _("Destination") + ' ');
      String host=_context.namingService().reverseLookup(dest);
      if (host != null)       buf.append(host);
 else       buf.append(dest.toBase64().substring(0,6));
    }
    buf.append(")</b><br>\n");
    long exp=ls.getEarliestLeaseDate() - now;
    if (exp > 0)     buf.append(_("Expires in {0}",DataHelper.formatDuration(exp))).append("<br>\n");
 else     buf.append(_("Expired {0} ago",DataHelper.formatDuration(0 - exp))).append("<br>\n");
    for (int i=0; i < ls.getLeaseCount(); i++) {
      buf.append(_("Lease")).append(' ').append(i + 1).append(": " + _("Gateway") + ' ');
      buf.append(_context.commSystem().renderPeerHTML(ls.getLease(i).getGateway()));
      buf.append(' ' + _("Tunnel") + ' ').append(ls.getLease(i).getTunnelId().getTunnelId()).append("<br>\n");
    }
    buf.append("<hr>\n");
    out.write(buf.toString());
    buf.setLength(0);
  }
  out.write(buf.toString());
  out.flush();
}
