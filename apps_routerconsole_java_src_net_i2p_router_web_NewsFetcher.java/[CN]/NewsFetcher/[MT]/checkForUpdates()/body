{
  File news=new File(NEWS_FILE);
  if (!news.exists())   return;
  FileInputStream in=null;
  try {
    in=new FileInputStream(news);
    StringBuffer buf=new StringBuffer(128);
    while (DataHelper.readLine(in,buf)) {
      int index=buf.indexOf(VERSION_PREFIX);
      if (index == -1) {
      }
 else {
        int end=buf.indexOf("\"",index + VERSION_PREFIX.length());
        if (end > index) {
          String ver=buf.substring(index + VERSION_PREFIX.length(),end);
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Found version: [" + ver + "]");
          if (needsUpdate(ver)) {
            if (_log.shouldLog(Log.DEBUG))             _log.debug("Our version is out of date, update!");
            break;
          }
 else {
            if (_log.shouldLog(Log.DEBUG))             _log.debug("Our version is current");
            return;
          }
        }
      }
      if (buf.indexOf(VERSION_STRING) != -1) {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Our version found, no need to update: " + buf.toString());
        return;
      }
 else {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("No match in " + buf.toString());
      }
      buf.setLength(0);
    }
  }
 catch (  IOException ioe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Error checking the news for an update",ioe);
    return;
  }
 finally {
    if (in != null)     try {
      in.close();
    }
 catch (    IOException ioe) {
    }
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Our version was NOT found (" + RouterVersion.VERSION + "), update needed");
  _updateAvailable=true;
  if (shouldInstall()) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Policy requests update, so we update");
    UpdateHandler handler=null;
    if (_context instanceof RouterContext) {
      handler=new UpdateHandler((RouterContext)_context);
    }
 else {
      List contexts=RouterContext.listContexts();
      if (contexts.size() > 0)       handler=new UpdateHandler((RouterContext)contexts.get(0));
 else       _log.log(Log.CRIT,"No router context to update with?");
    }
    if (handler != null)     handler.update();
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Policy requests manual update, so we do nothing");
  }
}
