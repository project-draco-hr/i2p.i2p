{
  String url=_context.getProperty(ConfigUpdateHandler.PROP_ZIP_URL);
  if (url == null || url.length() <= 0)   return;
  String proxyHost=_context.getProperty(ConfigUpdateHandler.PROP_PROXY_HOST,ConfigUpdateHandler.DEFAULT_PROXY_HOST);
  int proxyPort=_context.getProperty(ConfigUpdateHandler.PROP_PROXY_PORT,ConfigUpdateHandler.DEFAULT_PROXY_PORT_INT);
  try {
    EepHead get=new EepHead(_context,proxyHost,proxyPort,0,url);
    if (get.fetch()) {
      String lastmod=get.getLastModified();
      if (lastmod != null) {
        if (!(_context.isRouterContext()))         return;
        long modtime=RFC822Date.parse822Date(lastmod);
        if (modtime <= 0)         return;
        String lastUpdate=_context.getProperty(UpdateHandler.PROP_LAST_UPDATE_TIME);
        if (lastUpdate == null) {
          ((RouterContext)_context).router().setConfigSetting(UpdateHandler.PROP_LAST_UPDATE_TIME,"" + _context.clock().now());
          ((RouterContext)_context).router().saveConfig();
          return;
        }
        long ms=0;
        try {
          ms=Long.parseLong(lastUpdate);
        }
 catch (        NumberFormatException nfe) {
        }
        if (ms <= 0)         return;
        if (modtime > ms) {
          _unsignedUpdateAvailable=true;
          _unsignedUpdateVersion=(new SimpleDateFormat("dd-MMM HH:mm")).format(new Date(modtime)) + " UTC";
          if (shouldInstall())           fetchUnsigned();
        }
      }
    }
  }
 catch (  Throwable t) {
    _log.error("Error fetching the unsigned update",t);
  }
}
