{
  File pluginDir=new File(ctx.getAppDir(),PluginUpdateHandler.PLUGIN_DIR + '/' + appName);
  if ((!pluginDir.exists()) || (!pluginDir.isDirectory())) {
    System.err.println("Cannot start nonexistent plugin: " + appName);
    return false;
  }
  File clientConfig=new File(pluginDir,"clients.config");
  if (clientConfig.exists()) {
    Properties props=new Properties();
    DataHelper.loadProps(props,clientConfig);
    List<ClientAppConfig> clients=ClientAppConfig.getClientApps(clientConfig);
    runClientApps(ctx,pluginDir,clients);
  }
  Server server=getConsoleServer();
  if (server != null) {
    File consoleDir=new File(pluginDir,"console");
    Properties props=RouterConsoleRunner.webAppProperties(consoleDir.getAbsolutePath());
    File webappDir=new File(pluginDir,"webapps");
    String fileNames[]=webappDir.list(RouterConsoleRunner.WarFilenameFilter.instance());
    if (fileNames != null) {
      for (int i=0; i < fileNames.length; i++) {
        try {
          String warName=fileNames[i].substring(0,fileNames[i].lastIndexOf(".war"));
          String enabled=props.getProperty(PREFIX + warName + ENABLED);
          if (!"false".equals(enabled)) {
            String path=new File(webappDir,fileNames[i]).getCanonicalPath();
            WebAppStarter.startWebApp(ctx,server,warName,path);
          }
        }
 catch (        IOException ioe) {
          System.err.println("Error resolving '" + fileNames[i] + "' in '"+ webappDir);
        }
      }
    }
  }
  return true;
}
