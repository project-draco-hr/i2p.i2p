{
  List<String> plugins=getPlugins();
  Map<String,String> toUpdate=new HashMap();
  for (  String appName : plugins) {
    Properties props=pluginProperties(ctx,appName);
    String url=props.getProperty("updateURL");
    if (url != null)     toUpdate.put(appName,url);
  }
  if (toUpdate.isEmpty())   return;
  PluginUpdateChecker puc=PluginUpdateChecker.getInstance(ctx);
  if (puc.isRunning())   return;
  if (delay) {
    System.setProperty(UpdateHandler.PROP_UPDATE_IN_PROGRESS,"true");
    puc.setAppStatus(Messages.getString("Checking for plugin updates",ctx));
    try {
      Thread.sleep(3 * 60 * 1000);
    }
 catch (    InterruptedException ie) {
    }
    System.setProperty(UpdateHandler.PROP_UPDATE_IN_PROGRESS,"false");
  }
  Log log=ctx.logManager().getLog(PluginStarter.class);
  for (  Map.Entry<String,String> entry : toUpdate.entrySet()) {
    String appName=entry.getKey();
    if (log.shouldLog(Log.WARN))     log.warn("Checking for update plugin: " + appName);
    puc.update(appName);
    do {
      try {
        Thread.sleep(5 * 1000);
      }
 catch (      InterruptedException ie) {
      }
    }
 while (puc.isRunning());
    if (!puc.isNewerAvailable()) {
      if (log.shouldLog(Log.WARN))       log.warn("No update available for plugin: " + appName);
      continue;
    }
    PluginUpdateHandler puh=PluginUpdateHandler.getInstance(ctx);
    String url=entry.getValue();
    if (log.shouldLog(Log.WARN))     log.warn("Updating plugin: " + appName);
    puh.update(url);
    do {
      try {
        Thread.sleep(5 * 1000);
      }
 catch (      InterruptedException ie) {
      }
    }
 while (puh.isRunning());
  }
}
