{
  _updated=false;
  updateStatus("<b>" + _("Downloading plugin from {0}",_xpi2pURL) + "</b>");
  if (_xpi2pURL.startsWith("file://")) {
    String xpi2pfile=_xpi2pURL.substring(7);
    if (xpi2pfile.isEmpty()) {
      statusDone("<b>" + _("No file specified {0}",_xpi2pURL) + "</b>");
    }
 else {
      try {
        long alreadyTransferred=(new File(xpi2pfile)).getCanonicalFile().length();
        if (FileUtil.copy((new File(xpi2pfile)).getCanonicalPath(),_updateFile,true,false)) {
          transferComplete(alreadyTransferred,alreadyTransferred,0L,_xpi2pURL,_updateFile,false);
        }
 else {
          statusDone("<b>" + _("File copy failed {0}",_xpi2pURL) + "</b>");
        }
      }
 catch (      Throwable t) {
        _log.error("Error copying plugin {0}",t);
      }
    }
  }
 else {
    boolean shouldProxy=Boolean.valueOf(_context.getProperty(ConfigUpdateHandler.PROP_SHOULD_PROXY,ConfigUpdateHandler.DEFAULT_SHOULD_PROXY)).booleanValue();
    String proxyHost=_context.getProperty(ConfigUpdateHandler.PROP_PROXY_HOST,ConfigUpdateHandler.DEFAULT_PROXY_HOST);
    int proxyPort=ConfigUpdateHandler.proxyPort(_context);
    try {
      if (shouldProxy)       _get=new EepGet(_context,proxyHost,proxyPort,10,_updateFile,_xpi2pURL,false);
 else       _get=new EepGet(_context,1,_updateFile,_xpi2pURL,false);
      _get.addStatusListener(PluginUpdateRunner.this);
      _get.fetch();
    }
 catch (    Throwable t) {
      _log.error("Error downloading plugin",t);
    }
  }
}
