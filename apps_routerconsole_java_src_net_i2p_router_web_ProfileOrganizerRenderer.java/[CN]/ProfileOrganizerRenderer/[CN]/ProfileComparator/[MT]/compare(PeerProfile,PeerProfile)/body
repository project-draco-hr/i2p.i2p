{
  if (_context.profileOrganizer().isFast(left.getPeer())) {
    if (_context.profileOrganizer().isFast(right.getPeer())) {
      return compareHashes(left,right);
    }
 else {
      return -1;
    }
  }
 else   if (_context.profileOrganizer().isHighCapacity(left.getPeer())) {
    if (_context.profileOrganizer().isFast(right.getPeer())) {
      return 1;
    }
 else     if (_context.profileOrganizer().isHighCapacity(right.getPeer())) {
      return compareHashes(left,right);
    }
 else {
      return -1;
    }
  }
 else   if (_context.profileOrganizer().isFailing(left.getPeer())) {
    if (_context.profileOrganizer().isFailing(right.getPeer())) {
      return compareHashes(left,right);
    }
 else {
      return 1;
    }
  }
 else {
    if (_context.profileOrganizer().isFast(right.getPeer())) {
      return 1;
    }
 else     if (_context.profileOrganizer().isHighCapacity(right.getPeer())) {
      return 1;
    }
 else     if (_context.profileOrganizer().isFailing(right.getPeer())) {
      return -1;
    }
 else {
      return compareHashes(left,right);
    }
  }
}
