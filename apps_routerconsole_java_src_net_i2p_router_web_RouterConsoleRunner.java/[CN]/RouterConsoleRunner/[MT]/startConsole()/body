{
  File workDir=new File("work");
  boolean workDirRemoved=FileUtil.rmdir(workDir,false);
  if (!workDirRemoved)   System.err.println("ERROR: Unable to remove Jetty temporary work directory");
  boolean workDirCreated=workDir.mkdirs();
  if (!workDirCreated)   System.err.println("ERROR: Unable to create Jetty temporary work directory");
  _server=new Server();
  boolean rewrite=false;
  Properties props=webAppProperties();
  if (props.size() <= 0) {
    props.setProperty(PREFIX + ROUTERCONSOLE + ENABLED,"true");
    rewrite=true;
  }
  try {
    _server.addListener(_listenHost + ':' + _listenPort);
    _server.setRootWebApp(ROUTERCONSOLE);
    WebApplicationContext wac=_server.addWebApplication("/",_webAppsDir + ROUTERCONSOLE + ".war");
    initialize(wac);
    File dir=new File(_webAppsDir);
    String fileNames[]=dir.list(WarFilenameFilter.instance());
    if (fileNames != null) {
      for (int i=0; i < fileNames.length; i++) {
        try {
          String appName=fileNames[i].substring(0,fileNames[i].lastIndexOf(".war"));
          String enabled=props.getProperty(PREFIX + appName + ENABLED);
          if (!"false".equals(enabled)) {
            String path=new File(dir,fileNames[i]).getCanonicalPath();
            wac=_server.addWebApplication("/" + appName,path);
            initialize(wac);
            if (enabled == null) {
              props.setProperty(PREFIX + appName + ENABLED,"true");
              rewrite=true;
            }
          }
        }
 catch (        IOException ioe) {
          System.err.println("Error resolving '" + fileNames[i] + "' in '"+ dir);
        }
      }
    }
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
  if (rewrite)   storeWebAppProperties(props);
  try {
    _server.start();
  }
 catch (  Exception me) {
    me.printStackTrace();
  }
  try {
    SysTray tray=SysTray.getInstance();
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
  File noReseedFile=new File(new File(System.getProperty("user.home")),".i2pnoreseed");
  File noReseedFileAlt1=new File(new File(System.getProperty("user.home")),"noreseed.i2p");
  File noReseedFileAlt2=new File(".i2pnoreseed");
  File noReseedFileAlt3=new File("noreseed.i2p");
  if (!noReseedFile.exists() && !noReseedFileAlt1.exists() && !noReseedFileAlt2.exists()&& !noReseedFileAlt3.exists()) {
    File netDb=new File("netDb");
    String names[]=(netDb.exists() ? netDb.list() : null);
    if ((names == null) || (names.length < 15)) {
      ReseedHandler reseedHandler=new ReseedHandler();
      reseedHandler.requestReseed();
    }
  }
  NewsFetcher fetcher=NewsFetcher.getInstance(I2PAppContext.getGlobalContext());
  I2PThread t=new I2PThread(fetcher,"NewsFetcher");
  t.setDaemon(true);
  t.start();
  I2PThread st=new I2PThread(new StatSummarizer(),"StatSummarizer");
  st.setDaemon(true);
  st.start();
}
