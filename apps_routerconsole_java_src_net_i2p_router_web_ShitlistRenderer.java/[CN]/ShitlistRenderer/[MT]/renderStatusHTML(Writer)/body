{
  StringBuilder buf=new StringBuilder(1024);
  Map<Hash,Shitlist.Entry> entries=new TreeMap(new HashComparator());
  entries.putAll(_context.shitlist().getEntries());
  buf.append("<ul>");
  for (  Map.Entry<Hash,Shitlist.Entry> e : entries.entrySet()) {
    Hash key=e.getKey();
    Shitlist.Entry entry=e.getValue();
    buf.append("<li>").append(_context.commSystem().renderPeerHTML(key));
    buf.append(' ');
    long expires=entry.expireOn - _context.clock().now();
    String expireString=DataHelper.formatDuration(expires);
    if (expires < 5l * 24 * 60* 60* 1000)     buf.append(_("Temporary ban expiring in {0}",expireString));
 else     buf.append(_("Banned until restart or in {0}",expireString));
    Set transports=entry.transports;
    if ((transports != null) && (transports.size() > 0))     buf.append(" on the following transport: ").append(transports);
    if (entry.cause != null) {
      buf.append("<br>\n");
      if (entry.causeCode != null)       buf.append(_(entry.cause,entry.causeCode));
 else       buf.append(_(entry.cause));
    }
    buf.append(" (<a href=\"configpeer.jsp?peer=").append(key.toBase64()).append("#unsh\">").append(_("unban now")).append("</a>)");
    buf.append("</li>\n");
  }
  buf.append("</ul>\n");
  out.write(buf.toString());
  out.flush();
}
