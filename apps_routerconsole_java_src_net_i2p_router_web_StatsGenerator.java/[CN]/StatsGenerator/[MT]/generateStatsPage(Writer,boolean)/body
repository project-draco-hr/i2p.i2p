{
  StringBuilder buf=new StringBuilder(16 * 1024);
  buf.append("<div class=\"joblog\"><form action=\"\">");
  buf.append("<select name=\"go\" onChange='location.href=this.value'>");
  out.write(buf.toString());
  buf.setLength(0);
  Map<String,SortedSet<String>> unsorted=_context.statManager().getStatsByGroup();
  Map<String,Set<String>> groups=new TreeMap<String,Set<String>>(new AlphaComparator());
  groups.putAll(unsorted);
  for (  String group : groups.keySet()) {
    buf.append("<option value=\"#").append(group).append("\">");
    buf.append(_(group)).append("</option>\n");
  }
  buf.append("</select> <input type=\"submit\" value=\"").append(_("GO")).append("\" />");
  buf.append("</form>");
  buf.append(_("Statistics gathered during this router's uptime")).append(" (");
  long uptime=_context.router().getUptime();
  buf.append(DataHelper.formatDuration2(uptime));
  buf.append(").  ").append(_("The data gathered is quantized over a 1 minute period, so should just be used as an estimate."));
  buf.append(' ').append(_("These statistics are primarily used for development and debugging."));
  out.write(buf.toString());
  buf.setLength(0);
  for (  Map.Entry<String,Set<String>> entry : groups.entrySet()) {
    String group=entry.getKey();
    Set<String> stats=entry.getValue();
    buf.append("<h3><a name=\"");
    buf.append(group);
    buf.append("\">");
    buf.append(_(group));
    buf.append("</a></h3>");
    buf.append("<ul>");
    out.write(buf.toString());
    buf.setLength(0);
    for (    String stat : stats) {
      buf.append("<li><b><a name=\"");
      buf.append(stat);
      buf.append("\">");
      buf.append(stat);
      buf.append("</a></b><br>");
      if (_context.statManager().isFrequency(stat))       renderFrequency(stat,buf);
 else       renderRate(stat,buf,showAll);
      out.write(buf.toString());
      buf.setLength(0);
    }
    out.write("</ul><br>\n");
  }
  out.write("</div>");
  out.flush();
}
