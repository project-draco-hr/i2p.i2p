{
  FrequencyStat freq=_context.statManager().getFrequency(name);
  buf.append("<i>");
  buf.append(freq.getDescription());
  buf.append("</i><br>");
  long uptime=_context.router().getUptime();
  long periods[]=freq.getPeriods();
  Arrays.sort(periods);
  for (int i=0; i < periods.length; i++) {
    if (periods[i] > uptime)     break;
    renderPeriod(buf,periods[i],"frequency");
    Frequency curFreq=freq.getFrequency(periods[i]);
    buf.append(" <i>avg per period:</i> (");
    buf.append(num(curFreq.getAverageEventsPerPeriod()));
    buf.append(", max ");
    buf.append(num(curFreq.getMaxAverageEventsPerPeriod()));
    if ((curFreq.getMaxAverageEventsPerPeriod() > 0) && (curFreq.getAverageEventsPerPeriod() > 0)) {
      buf.append(", current is ");
      buf.append(pct(curFreq.getAverageEventsPerPeriod() / curFreq.getMaxAverageEventsPerPeriod()));
      buf.append(" of max");
    }
    buf.append(")");
    buf.append(" <i>strict average per period:</i> ");
    buf.append(num(curFreq.getStrictAverageEventsPerPeriod()));
    buf.append(" events (averaged ");
    buf.append(" using the lifetime of ");
    buf.append(curFreq.getEventCount());
    buf.append(" events)");
    buf.append("<br>");
  }
  buf.append("<br>");
}
