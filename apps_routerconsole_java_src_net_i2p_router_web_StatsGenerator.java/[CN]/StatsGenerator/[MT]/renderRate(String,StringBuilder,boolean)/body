{
  RateStat rate=_context.statManager().getRate(name);
  String d=rate.getDescription();
  if (!"".equals(d)) {
    buf.append("<i>");
    buf.append(d);
    buf.append("</i><br>");
  }
  if (rate.getLifetimeEventCount() <= 0) {
    buf.append(_("No lifetime events")).append("<br>\n");
    return;
  }
  long now=_context.clock().now();
  long periods[]=rate.getPeriods();
  Arrays.sort(periods);
  buf.append("<ul>");
  for (int i=0; i < periods.length; i++) {
    Rate curRate=rate.getRate(periods[i]);
    if (curRate.getLastCoalesceDate() <= curRate.getCreationDate())     break;
    buf.append("<li>");
    renderPeriod(buf,periods[i],_("rate"));
    if (curRate.getLastEventCount() > 0) {
      buf.append(_("Average")).append(": ");
      buf.append(num(curRate.getAverageValue()));
      buf.append("; ");
      buf.append(_("Highest average"));
      buf.append(": ");
      buf.append(num(curRate.getExtremeAverageValue()));
      buf.append("; ");
      if (showAll) {
        buf.append("Highest total in a period: ");
        buf.append(num(curRate.getExtremeTotalValue()));
        buf.append("; ");
      }
      if (showAll && curRate.getLifetimeTotalEventTime() > 0) {
        buf.append("Saturation: ");
        buf.append(pct(curRate.getLastEventSaturation()));
        buf.append("; Saturated limit: ");
        buf.append(num(curRate.getLastSaturationLimit()));
        buf.append("; Peak saturation: ");
        buf.append(pct(curRate.getExtremeEventSaturation()));
        buf.append("; Peak saturated limit: ");
        buf.append(num(curRate.getExtremeSaturationLimit()));
        buf.append("; ");
      }
      buf.append(ngettext((int)curRate.getLastEventCount(),"There was 1 event in this period.","There were {0} events in this period."));
      buf.append(' ');
      buf.append(_("The period ended {0} ago.",DataHelper.formatDuration2(now - curRate.getLastCoalesceDate())));
    }
 else {
      buf.append(" <i>").append(_("No events")).append("</i> ");
    }
    long numPeriods=curRate.getLifetimePeriods();
    if (numPeriods > 0) {
      double avgFrequency=curRate.getLifetimeEventCount() / (double)numPeriods;
      double peakFrequency=curRate.getExtremeEventCount();
      buf.append(" (").append(_("Average event count")).append(": ");
      buf.append(num(avgFrequency));
      buf.append("; ").append(_("Events in peak period")).append(": ");
      buf.append(curRate.getExtremeEventCount());
      buf.append(")");
    }
    if (curRate.getSummaryListener() != null) {
      buf.append(" <a href=\"viewstat.jsp?stat=").append(name);
      buf.append("&amp;period=").append(periods[i]);
      buf.append("\">").append(_("Graph Data")).append("</a> - ");
      buf.append(" <a href=\"viewstat.jsp?stat=").append(name);
      buf.append("&amp;period=").append(periods[i]).append("&amp;showEvents=true\">").append(_("Graph Event Count")).append("</a> - ");
      buf.append("<a href=\"viewstat.jsp?stat=").append(name);
      buf.append("&amp;period=").append(periods[i]);
      buf.append("&amp;format=xml\">").append(_("Export Data as XML")).append("</a>");
    }
    buf.append("</li>\n");
  }
  buf.append("<li><b>").append(_("Lifetime average value")).append(":</b> ");
  buf.append(num(rate.getLifetimeAverageValue()));
  buf.append(" (");
  buf.append(ngettext((int)rate.getLifetimeEventCount(),"1 event","{0} events"));
  buf.append(")<br></li>" + "</ul>" + "<br>\n");
}
