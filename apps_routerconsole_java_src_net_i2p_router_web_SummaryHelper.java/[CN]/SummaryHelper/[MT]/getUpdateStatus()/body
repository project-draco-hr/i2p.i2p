{
  StringBuilder buf=new StringBuilder(512);
  String status=NewsHelper.getUpdateStatus();
  boolean needSpace=false;
  if (status.length() > 0) {
    buf.append("<h4>").append(status).append("</h4>\n");
    needSpace=true;
  }
  String dver=NewsHelper.updateVersionDownloaded();
  if (dver == null) {
    dver=NewsHelper.devSU3VersionDownloaded();
    if (dver == null)     dver=NewsHelper.unsignedVersionDownloaded();
  }
  if (dver != null && !NewsHelper.isUpdateInProgress() && !_context.router().gracefulShutdownInProgress()) {
    if (needSpace)     buf.append("<hr>");
 else     needSpace=true;
    buf.append("<h4><b>").append(_t("Update downloaded")).append("<br>");
    if (_context.hasWrapper())     buf.append(_t("Click Restart to install"));
 else     buf.append(_t("Click Shutdown and restart to install"));
    buf.append(' ').append(_t("Version {0}",DataHelper.escapeHTML(dver)));
    buf.append("</b></h4>");
  }
  boolean avail=updateAvailable();
  boolean unsignedAvail=unsignedUpdateAvailable();
  boolean devSU3Avail=devSU3UpdateAvailable();
  String constraint=avail ? NewsHelper.updateConstraint() : null;
  String unsignedConstraint=unsignedAvail ? NewsHelper.unsignedUpdateConstraint() : null;
  String devSU3Constraint=devSU3Avail ? NewsHelper.devSU3UpdateConstraint() : null;
  if (avail && constraint != null && !NewsHelper.isUpdateInProgress() && !_context.router().gracefulShutdownInProgress()) {
    if (needSpace)     buf.append("<hr>");
 else     needSpace=true;
    buf.append("<h4><b>").append(_t("Update available")).append(":<br>");
    buf.append(_t("Version {0}",getUpdateVersion())).append("<br>");
    buf.append(constraint).append("</b></h4>");
    avail=false;
  }
  if (unsignedAvail && unsignedConstraint != null && !NewsHelper.isUpdateInProgress() && !_context.router().gracefulShutdownInProgress()) {
    if (needSpace)     buf.append("<hr>");
 else     needSpace=true;
    buf.append("<h4><b>").append(_t("Update available")).append(":<br>");
    buf.append(_t("Version {0}",getUnsignedUpdateVersion())).append("<br>");
    buf.append(unsignedConstraint).append("</b></h4>");
    unsignedAvail=false;
  }
  if (devSU3Avail && devSU3Constraint != null && !NewsHelper.isUpdateInProgress() && !_context.router().gracefulShutdownInProgress()) {
    if (needSpace)     buf.append("<hr>");
 else     needSpace=true;
    buf.append("<h4><b>").append(_t("Update available")).append(":<br>");
    buf.append(_t("Version {0}",getDevSU3UpdateVersion())).append("<br>");
    buf.append(devSU3Constraint).append("</b></h4>");
    devSU3Avail=false;
  }
  if ((avail || unsignedAvail || devSU3Avail) && !NewsHelper.isUpdateInProgress() && !_context.router().gracefulShutdownInProgress()&& _context.portMapper().getPort(PortMapper.SVC_HTTP_PROXY) > 0 && getAction() == null && getUpdateNonce() == null) {
    if (needSpace)     buf.append("<hr>");
    long nonce=_context.random().nextLong();
    String prev=System.getProperty("net.i2p.router.web.UpdateHandler.nonce");
    if (prev != null)     System.setProperty("net.i2p.router.web.UpdateHandler.noncePrev",prev);
    System.setProperty("net.i2p.router.web.UpdateHandler.nonce",nonce + "");
    String uri=getRequestURI();
    buf.append("<form action=\"").append(uri).append("\" method=\"POST\">\n");
    buf.append("<input type=\"hidden\" name=\"updateNonce\" value=\"").append(nonce).append("\" >\n");
    if (avail) {
      buf.append("<button type=\"submit\" class=\"download\" name=\"updateAction\" value=\"signed\" >").append(_t("Download {0} Update",getUpdateVersion())).append("</button><br>\n");
    }
    if (devSU3Avail) {
      buf.append("<button type=\"submit\" class=\"download\" name=\"updateAction\" value=\"DevSU3\" >").append(_t("Download Signed<br>Development Update<br>{0}",getDevSU3UpdateVersion())).append("</button><br>\n");
    }
    if (unsignedAvail) {
      buf.append("<button type=\"submit\" class=\"download\" name=\"updateAction\" value=\"Unsigned\" >").append(_t("Download Unsigned<br>Update {0}",getUnsignedUpdateVersion())).append("</button><br>\n");
    }
    buf.append("</form>\n");
  }
  return buf.toString();
}
