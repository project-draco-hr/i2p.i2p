{
  RateStat rs=_rate.getRateStat();
  long period=_rate.getPeriod();
  String baseName=rs.getName() + "." + period;
  _name=createName(_context,baseName);
  _eventName=createName(_context,baseName + ".events");
  try {
    RrdBackendFactory factory=RrdBackendFactory.getFactory(getBackendName());
    String rrdDefName;
    if (_isPersistent) {
      File rrdDir=new SecureFile(_context.getRouterDir(),RRD_DIR);
      File rrdFile=new File(rrdDir,RRD_PREFIX + _name + RRD_SUFFIX);
      rrdDefName=rrdFile.getAbsolutePath();
      if (rrdFile.exists()) {
        _db=new RrdDb(rrdDefName,factory);
        if (_log.shouldLog(Log.INFO))         _log.info("Existing RRD " + baseName + " ("+ rrdDefName+ ") consuming "+ _db.getRrdBackend().getLength()+ " bytes");
      }
 else {
        rrdDir.mkdir();
      }
    }
 else {
      rrdDefName=_name;
    }
    if (_db == null) {
      RrdDef def=new RrdDef(rrdDefName,now() / 1000,period / 1000);
      long heartbeat=period * 10 / 1000;
      def.addDatasource(_name,"GAUGE",heartbeat,Double.NaN,Double.NaN);
      def.addDatasource(_eventName,"GAUGE",heartbeat,0,Double.NaN);
      double xff=0.9;
      int steps=1;
      int rows=PERIODS;
      def.addArchive("AVERAGE",xff,steps,rows);
      _db=new RrdDb(def,factory);
      if (_isPersistent)       SecureFileOutputStream.setPerms(new File(rrdDefName));
      if (_log.shouldLog(Log.INFO))       _log.info("New RRD " + baseName + " ("+ rrdDefName+ ") consuming "+ _db.getRrdBackend().getLength()+ " bytes");
    }
    _sample=_db.createSample();
    _renderer=new SummaryRenderer(_context,this);
    _rate.setSummaryListener(this);
  }
 catch (  RrdException re) {
    _log.error("Error starting",re);
  }
catch (  IOException ioe) {
    _log.error("Error starting",ioe);
  }
}
