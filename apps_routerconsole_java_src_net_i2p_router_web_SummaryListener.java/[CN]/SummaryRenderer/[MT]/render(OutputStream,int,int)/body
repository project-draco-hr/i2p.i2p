{
  long end=_listener.now();
  long start=end - _listener.getRate().getPeriod() * SummaryListener.PERIODS;
  long begin=System.currentTimeMillis();
  try {
    RrdGraphDef def=new RrdGraphDef();
    def.setTimePeriod(start / 1000,end / 1000);
    String title=_listener.getRate().getRateStat().getName() + " averaged for " + DataHelper.formatDuration(_listener.getRate().getPeriod());
    def.setTitle(title);
    String path=_listener.getData().getPath();
    String dsNames[]=_listener.getData().getDsNames();
    def.datasource(_listener.getName(),path,dsNames[0],"AVERAGE","MEMORY");
    def.area(dsNames[0],Color.BLUE,_listener.getRate().getRateStat().getDescription());
    def.setAntiAliasing(false);
    RrdGraph graph=new RrdGraph(def);
    byte data[]=null;
    if ((width <= 0) || (height <= 0))     data=graph.getPNGBytes();
 else     data=graph.getPNGBytes(width,height);
    long timeToPlot=System.currentTimeMillis() - begin;
    out.write(data);
  }
 catch (  RrdException re) {
    _log.error("Error rendering",re);
    throw new IOException("Error plotting: " + re.getMessage());
  }
catch (  IOException ioe) {
    _log.error("Error rendering",ioe);
    throw ioe;
  }
}
