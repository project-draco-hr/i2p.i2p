{
  ObjectCounter<Hash> lc=new ObjectCounter();
  int tunnelCount=countTunnelsPerPeer(lc);
  ObjectCounter<Hash> pc=new ObjectCounter();
  int partCount=countParticipatingPerPeer(pc);
  Set<Hash> peers=new HashSet(lc.objects());
  peers.addAll(pc.objects());
  List<Hash> peerList=new ArrayList(peers);
  Collections.sort(peerList,new HashComparator());
  out.write("<h2><a name=\"peers\"></a>" + _("Tunnel Counts By Peer") + "</h2>\n");
  out.write("<table><tr><th>" + _("Peer") + "</th><th>"+ _("Expl. + Client")+ "</th><th>"+ _("% of total")+ "</th><th>"+ _("Part. from + to")+ "</th><th>"+ _("% of total")+ "</th></tr>\n");
  for (  Hash h : peerList) {
    out.write("<tr> <td class=\"cells\" align=\"center\">");
    out.write(netDbLink(h));
    out.write(" <td class=\"cells\" align=\"center\">" + lc.count(h));
    out.write(" <td class=\"cells\" align=\"center\">");
    if (tunnelCount > 0)     out.write("" + (lc.count(h) * 100 / tunnelCount));
 else     out.write('0');
    out.write(" <td class=\"cells\" align=\"center\">" + pc.count(h));
    out.write(" <td class=\"cells\" align=\"center\">");
    if (partCount > 0)     out.write("" + (pc.count(h) * 100 / partCount));
 else     out.write('0');
    out.write('\n');
  }
  out.write("<tr class=\"tablefooter\"> <td align=\"center\"><b>" + _("Tunnels") + "</b> <td align=\"center\"><b>"+ tunnelCount);
  out.write("</b> <td>&nbsp;</td> <td align=\"center\"><b>" + partCount);
  out.write("</b> <td>&nbsp;</td></tr></table></div>\n");
}
