{
  List<TunnelInfo> tunnels=null;
  if (in == null)   tunnels=new ArrayList<TunnelInfo>();
 else   tunnels=in.listTunnels();
  if (outPool != null)   tunnels.addAll(outPool.listTunnels());
  long processedIn=(in != null ? in.getLifetimeProcessed() : 0);
  long processedOut=(outPool != null ? outPool.getLifetimeProcessed() : 0);
  int live=0;
  int maxLength=1;
  for (int i=0; i < tunnels.size(); i++) {
    TunnelInfo info=tunnels.get(i);
    if (info.getLength() > maxLength)     maxLength=info.getLength();
  }
  out.write("<table><tr><th>" + _t("In/Out") + "</th><th>"+ _t("Expiry")+ "</th><th>"+ _t("Usage")+ "</th><th>"+ _t("Gateway")+ "</th>");
  if (maxLength > 3) {
    out.write("<th align=\"center\" colspan=\"" + (maxLength - 2));
    out.write("\">" + _t("Participants") + "</th>");
  }
 else   if (maxLength == 3) {
    out.write("<th>" + _t("Participant") + "</th>");
  }
  if (maxLength > 1) {
    out.write("<th>" + _t("Endpoint") + "</th>");
  }
  out.write("</tr>\n");
  for (int i=0; i < tunnels.size(); i++) {
    TunnelInfo info=tunnels.get(i);
    long timeLeft=info.getExpiration() - _context.clock().now();
    if (timeLeft <= 0)     continue;
    live++;
    if (info.isInbound())     out.write("<tr> <td class=\"cells\" align=\"center\"><img src=\"/themes/console/images/inbound.png\" alt=\"Inbound\" title=\"Inbound\"></td>");
 else     out.write("<tr> <td class=\"cells\" align=\"center\"><img src=\"/themes/console/images/outbound.png\" alt=\"Outbound\" title=\"Outbound\"></td>");
    out.write(" <td class=\"cells\" align=\"center\">" + DataHelper.formatDuration2(timeLeft) + "</td>\n");
    int count=info.getProcessedMessagesCount();
    out.write(" <td class=\"cells\" align=\"center\">" + count + " KB</td>\n");
    for (int j=0; j < info.getLength(); j++) {
      Hash peer=info.getPeer(j);
      TunnelId id=(info.isInbound() ? info.getReceiveTunnelId(j) : info.getSendTunnelId(j));
      if (_context.routerHash().equals(peer)) {
        out.write(" <td class=\"cells\" align=\"center\">" + (id == null ? "" : "" + id) + "</td>");
      }
 else {
        String cap=getCapacity(peer);
        out.write(" <td class=\"cells\" align=\"center\">" + netDbLink(peer) + (id == null ? "" : " " + id)+ cap+ "</td>");
      }
      if (info.getLength() < maxLength && (info.getLength() == 1 || j == info.getLength() - 2)) {
        for (int k=info.getLength(); k < maxLength; k++)         out.write(" <td class=\"cells\" align=\"center\">&nbsp;</td>");
      }
    }
    out.write("</tr>\n");
    if (info.isInbound())     processedIn+=count;
 else     processedOut+=count;
  }
  out.write("</table>\n");
  if (in != null) {
    List<?> pending=in.listPending();
    if (!pending.isEmpty()) {
      out.write("<div class=\"statusnotes\"><center><b>" + _t("Build in progress") + ": "+ pending.size()+ " "+ _t("inbound")+ "</b></center></div>\n");
      live+=pending.size();
    }
  }
  if (outPool != null) {
    List<?> pending=outPool.listPending();
    if (!pending.isEmpty()) {
      out.write("<div class=\"statusnotes\"><center><b>" + _t("Build in progress") + ": "+ pending.size()+ " "+ _t("outbound")+ "</b></center></div>\n");
      live+=pending.size();
    }
  }
  if (live <= 0)   out.write("<div class=\"statusnotes\"><center><b>" + _t("No tunnels; waiting for the grace period to end.") + "</b></center></div>\n");
  out.write("<div class=\"statusnotes\"><center><b>" + _t("Lifetime bandwidth usage") + ": "+ DataHelper.formatSize2(processedIn * 1024)+ "B "+ _t("in")+ ", "+ DataHelper.formatSize2(processedOut * 1024)+ "B "+ _t("out")+ "</b></center></div>");
}
