{
  out.write("<div class=\"wideload\"><h2><a name=\"exploratory\" ></a>" + _t("Exploratory tunnels") + " (<a href=\"/configtunnels#exploratory\">"+ _t("configure")+ "</a>)</h2>\n");
  renderPool(out,_context.tunnelManager().getInboundExploratoryPool(),_context.tunnelManager().getOutboundExploratoryPool());
  List<Hash> destinations=null;
  Map<Hash,TunnelPool> clientInboundPools=_context.tunnelManager().getInboundClientPools();
  Map<Hash,TunnelPool> clientOutboundPools=_context.tunnelManager().getOutboundClientPools();
  destinations=new ArrayList<Hash>(clientInboundPools.keySet());
  boolean debug=_context.getBooleanProperty(HelperBase.PROP_ADVANCED);
  for (int i=0; i < destinations.size(); i++) {
    Hash client=destinations.get(i);
    boolean isLocal=_context.clientManager().isLocal(client);
    if ((!isLocal) && (!debug))     continue;
    TunnelPool in=null;
    TunnelPool outPool=null;
    in=clientInboundPools.get(client);
    outPool=clientOutboundPools.get(client);
    String name=(in != null ? in.getSettings().getDestinationNickname() : null);
    if ((name == null) && (outPool != null))     name=outPool.getSettings().getDestinationNickname();
    if (name == null)     name=client.toBase64().substring(0,4);
    out.write("<h2><a name=\"" + client.toBase64().substring(0,4) + "\" ></a>"+ _t("Client tunnels for")+ ' '+ DataHelper.escapeHTML(_t(name)));
    if (isLocal)     out.write(" (<a href=\"/configtunnels#" + client.toBase64().substring(0,4) + "\">"+ _t("configure")+ "</a>)</h2>\n");
 else     out.write(" (" + _t("dead") + ")</h2>\n");
    renderPool(out,in,outPool);
  }
  List<HopConfig> participating=_context.tunnelDispatcher().listParticipatingTunnels();
  Collections.sort(participating,new TunnelComparator());
  out.write("<h2><a name=\"participating\"></a>" + _t("Participating tunnels") + "</h2><table>\n");
  out.write("<tr><th>" + _t("Receive on") + "</th><th>"+ _t("From")+ "</th><th>"+ _t("Send on")+ "</th><th>"+ _t("To")+ "</th><th>"+ _t("Expiration")+ "</th>"+ "<th>"+ _t("Usage")+ "</th><th>"+ _t("Rate")+ "</th><th>"+ _t("Role")+ "</th></tr>\n");
  long processed=0;
  RateStat rs=_context.statManager().getRate("tunnel.participatingMessageCount");
  if (rs != null)   processed=(long)rs.getRate(10 * 60 * 1000).getLifetimeTotalValue();
  int inactive=0;
  int displayed=0;
  for (int i=0; i < participating.size(); i++) {
    HopConfig cfg=participating.get(i);
    long count=cfg.getProcessedMessagesCount();
    if (count <= 0) {
      inactive++;
      continue;
    }
    processed+=count;
    if (++displayed > DISPLAY_LIMIT)     continue;
    out.write("<tr>");
    if (cfg.getReceiveTunnel() != null)     out.write("<td class=\"cells\" align=\"center\">" + cfg.getReceiveTunnel().getTunnelId() + "</td>");
 else     out.write("<td class=\"cells\" align=\"center\">n/a</td>");
    if (cfg.getReceiveFrom() != null)     out.write("<td class=\"cells\" align=\"center\">" + netDbLink(cfg.getReceiveFrom()) + "</td>");
 else     out.write("<td class=\"cells\">&nbsp;</td>");
    if (cfg.getSendTunnel() != null)     out.write("<td class=\"cells\" align=\"center\">" + cfg.getSendTunnel().getTunnelId() + "</td>");
 else     out.write("<td class=\"cells\">&nbsp;</td>");
    if (cfg.getSendTo() != null)     out.write("<td class=\"cells\" align=\"center\">" + netDbLink(cfg.getSendTo()) + "</td>");
 else     out.write("<td class=\"cells\">&nbsp;</td>");
    long timeLeft=cfg.getExpiration() - _context.clock().now();
    if (timeLeft > 0)     out.write("<td class=\"cells\" align=\"center\">" + DataHelper.formatDuration2(timeLeft) + "</td>");
 else     out.write("<td class=\"cells\" align=\"center\">(" + _t("grace period") + ")</td>");
    out.write("<td class=\"cells\" align=\"center\">" + cfg.getProcessedMessagesCount() + " KB</td>");
    int lifetime=(int)((_context.clock().now() - cfg.getCreation()) / 1000);
    if (lifetime <= 0)     lifetime=1;
    if (lifetime > 10 * 60)     lifetime=10 * 60;
    int bps=1024 * cfg.getProcessedMessagesCount() / lifetime;
    out.write("<td class=\"cells\" align=\"center\">" + bps + " Bps</td>");
    if (cfg.getSendTo() == null)     out.write("<td class=\"cells\" align=\"center\">" + _t("Outbound Endpoint") + "</td>");
 else     if (cfg.getReceiveFrom() == null)     out.write("<td class=\"cells\" align=\"center\">" + _t("Inbound Gateway") + "</td>");
 else     out.write("<td class=\"cells\" align=\"center\">" + _t("Participant") + "</td>");
    out.write("</tr>\n");
  }
  out.write("</table>\n");
  if (displayed > DISPLAY_LIMIT)   out.write("<div class=\"statusnotes\"><b>" + _t("Limited display to the {0} tunnels with the highest usage",DISPLAY_LIMIT) + "</b></div>\n");
  out.write("<div class=\"statusnotes\"><b>" + _t("Inactive participating tunnels") + ": "+ inactive+ "</b></div>\n");
  out.write("<div class=\"statusnotes\"><b>" + _t("Lifetime bandwidth usage") + ": "+ DataHelper.formatSize2(processed * 1024)+ "B</b></div>\n");
  out.write("</div>");
}
