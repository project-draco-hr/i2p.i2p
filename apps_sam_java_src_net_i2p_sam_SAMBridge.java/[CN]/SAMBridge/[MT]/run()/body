{
  try {
    while (acceptConnections) {
      Socket s=serverSocket.accept();
      if (_log.shouldLog(Log.DEBUG))       _log.debug("New connection from " + s.getInetAddress().toString() + ":"+ s.getPort());
      try {
        SAMHandler handler=SAMHandlerFactory.createSAMHandler(s,i2cpProps);
        if (handler == null) {
          if (_log.shouldLog(Log.DEBUG))           _log.debug("SAM handler has not been instantiated");
          try {
            s.close();
          }
 catch (          IOException e) {
          }
          continue;
        }
        handler.setBridge(this);
        handler.startHandling();
      }
 catch (      SAMException e) {
        if (_log.shouldLog(Log.ERROR))         _log.error("SAM error: " + e.getMessage(),e);
        try {
          String reply="HELLO REPLY RESULT=I2P_ERROR MESSAGE=\"" + e.getMessage() + "\"\n";
          s.getOutputStream().write(reply.getBytes("ISO-8859-1"));
        }
 catch (        IOException ioe) {
          if (_log.shouldLog(Log.ERROR))           _log.error("SAM Error sending error reply",ioe);
        }
        try {
          s.close();
        }
 catch (        IOException ioe) {
        }
      }
catch (      Exception ee) {
        try {
          s.close();
        }
 catch (        IOException ioe) {
        }
        _log.log(Log.CRIT,"Unexpected error handling SAM connection",ee);
      }
    }
  }
 catch (  Exception e) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Unexpected error while listening for connections",e);
  }
 finally {
    try {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Shutting down, closing server socket");
      serverSocket.close();
    }
 catch (    IOException e) {
    }
  }
}
