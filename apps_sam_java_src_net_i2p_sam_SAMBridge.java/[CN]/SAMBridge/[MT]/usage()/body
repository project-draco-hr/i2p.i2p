{
  System.err.println("Usage: SAMBridge [keyfile [listenHost] listenPortNum[ name=val]*]");
  System.err.println("or:");
  System.err.println("       SAMBridge [ name=val ]*");
  System.err.println(" keyfile: location to persist private keys (default sam.keys)");
  System.err.println(" listenHost: interface to listen on (0.0.0.0 for all interfaces)");
  System.err.println(" listenPort: port to listen for SAM connections on (default 7656)");
  System.err.println(" name=val: options to pass when connecting via I2CP, such as ");
  System.err.println("           i2cp.host=localhost and i2cp.port=7654");
  System.err.println("");
  System.err.println("Host and ports of the SAM bridge can be specified with the alternate");
  System.err.println("form by specifying options " + SAMBridge.PROP_TCP_HOST + " and/or "+ SAMBridge.PROP_TCP_PORT);
  System.err.println("");
  System.err.println("Options " + SAMBridge.PROP_DATAGRAM_HOST + " and "+ SAMBridge.PROP_DATAGRAM_PORT+ " specify the listening ip");
  System.err.println("range and the port of SAM datagram server. This server is");
  System.err.println("only launched after a client creates the first SAM datagram");
  System.err.println("or raw session, after a handshake with SAM version >= 3.0.");
  System.err.println("");
  System.err.println("The option loglevel=[DEBUG|WARN|ERROR|CRIT] can be used");
  System.err.println("for tuning the log verbosity.\n");
}
