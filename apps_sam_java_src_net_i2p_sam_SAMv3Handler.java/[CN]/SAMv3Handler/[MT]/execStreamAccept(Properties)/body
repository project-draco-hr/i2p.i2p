{
  boolean verbose=props.getProperty("SILENT","false").equals("false");
  try {
    try {
      streamSession.accept(this,verbose);
      return true;
    }
 catch (    InterruptedIOException e) {
      _log.debug("STREAM ACCEPT failed: " + e.getMessage());
      if (verbose)       notifyStreamAccept("TIMEOUT");
    }
catch (    I2PException e) {
      _log.debug("STREAM ACCEPT failed: " + e.getMessage());
      if (verbose)       notifyStreamAccept("I2P_ERROR");
    }
catch (    SAMException e) {
      _log.debug("STREAM ACCEPT failed: " + e.getMessage());
      if (verbose)       notifyStreamAccept("ALREADY_ACCEPTING");
    }
  }
 catch (  IOException e) {
  }
  return false;
}
