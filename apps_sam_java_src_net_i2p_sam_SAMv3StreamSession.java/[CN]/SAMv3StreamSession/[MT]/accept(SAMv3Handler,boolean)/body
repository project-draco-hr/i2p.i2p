{
synchronized (this.socketServerLock) {
    if (this.socketServer != null) {
      if (_log.shouldWarn())       _log.warn("a forwarding server is already defined for this destination");
      throw new SAMException("a forwarding server is already defined for this destination");
    }
  }
  I2PSocket i2ps;
  _acceptors.incrementAndGet();
  try {
    i2ps=socketMgr.getServerSocket().accept();
  }
  finally {
    _acceptors.decrementAndGet();
  }
  SAMv3Handler.SessionRecord rec=SAMv3Handler.sSessionsHash.get(nick);
  if (rec == null || i2ps == null)   throw new InterruptedIOException();
  if (verbose) {
    handler.notifyStreamIncomingConnection(i2ps.getPeerDestination(),i2ps.getPort(),i2ps.getLocalPort());
  }
  handler.stealSocket();
  ReadableByteChannel fromClient=handler.getClientSocket();
  ReadableByteChannel fromI2P=Channels.newChannel(i2ps.getInputStream());
  WritableByteChannel toClient=handler.getClientSocket();
  WritableByteChannel toI2P=Channels.newChannel(i2ps.getOutputStream());
  SAMBridge bridge=handler.getBridge();
  (new Thread(rec.getThreadGroup(),new Pipe(fromClient,toI2P,bridge),"AcceptV3 SAMPipeClientToI2P")).start();
  (new Thread(rec.getThreadGroup(),new Pipe(fromI2P,toClient,bridge),"AcceptV3 SAMPipeI2PToClient")).start();
}
