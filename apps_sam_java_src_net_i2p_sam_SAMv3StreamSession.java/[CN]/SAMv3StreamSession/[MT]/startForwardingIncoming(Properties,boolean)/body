{
  SAMv3Handler.SessionRecord rec=SAMv3Handler.sSessionsHash.get(nick);
  boolean verbose=!Boolean.parseBoolean(props.getProperty("SILENT"));
  if (rec == null)   throw new InterruptedIOException();
  String portStr=props.getProperty("PORT");
  if (portStr == null) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("receiver port not specified");
    throw new SAMException("receiver port not specified");
  }
  int port=Integer.parseInt(portStr);
  String host=props.getProperty("HOST");
  if (host == null) {
    host=rec.getHandler().getClientIP();
    if (_log.shouldLog(Log.DEBUG))     _log.debug("no host specified. Taken from the client socket : " + host + ':'+ port);
  }
  boolean isSSL=Boolean.parseBoolean(props.getProperty("SSL"));
  if (_acceptors.get() > 0) {
    if (_log.shouldWarn())     _log.warn("an accepting server is already defined for this destination");
    throw new SAMException("an accepting server is already defined for this destination");
  }
synchronized (this.socketServerLock) {
    if (this.socketServer != null) {
      if (_log.shouldWarn())       _log.warn("a forwarding server is already defined for this destination");
      throw new SAMException("a forwarding server is already defined for this destination");
    }
    this.socketServer=this.socketMgr.getServerSocket();
  }
  SocketForwarder forwarder=new SocketForwarder(host,port,isSSL,this,verbose,sendPorts);
  (new Thread(rec.getThreadGroup(),forwarder,"SAMV3StreamForwarder")).start();
}
