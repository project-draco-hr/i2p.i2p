{
  int b=_in.read();
  if (b < 0)   return b;
  if ((b & 0x80) == 0)   return b;
  if (_bb == null) {
    _bb=ByteBuffer.allocate(6);
    _cb=CharBuffer.allocate(1);
    _dc=Charset.forName("UTF-8").newDecoder();
  }
 else {
    _bb.clear();
    _cb.clear();
  }
  _bb.put((byte)b);
  int end;
  if ((b & 0xe0) == 0xc0)   end=1;
 else   if ((b & 0xf0) == 0xe0)   end=2;
 else   if ((b & 0xf8) == 0xf0)   end=3;
 else   if ((b & 0xfc) == 0xf8)   end=4;
 else   if ((b & 0xfe) == 0xfc)   end=5;
 else   return REPLACEMENT;
  for (int i=0; i < end; i++) {
    b=_in.read();
    if (b < 0)     return REPLACEMENT;
    if ((b & 0x80) == 0)     return REPLACEMENT;
    _bb.put((byte)b);
  }
  _dc.reset();
  _bb.flip();
  CoderResult result=_dc.decode(_bb,_cb,true);
  _cb.flip();
  if (result.isError() || !_cb.hasRemaining())   return REPLACEMENT;
  return _cb.get() & 0xffff;
}
