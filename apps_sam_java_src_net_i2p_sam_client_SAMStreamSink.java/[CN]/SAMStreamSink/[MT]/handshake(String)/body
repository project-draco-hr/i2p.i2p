{
synchronized (_samOut) {
    try {
      _samOut.write(("HELLO VERSION MIN=1.0 MAX=" + version + '\n').getBytes());
      _samOut.flush();
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Hello sent");
      String hisVersion=_eventHandler.waitForHelloReply();
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Hello reply found: " + hisVersion);
      if (hisVersion == null)       throw new IOException("Hello failed");
      boolean isV3=VersionComparator.comp(hisVersion,"3") >= 0;
      String dest;
      if (isV3) {
        File keys=new File("sam.keys");
        if (keys.exists()) {
          Properties opts=new Properties();
          DataHelper.loadProps(opts,keys);
          String s=opts.getProperty(_destFile);
          if (s != null) {
            dest=s;
          }
 else {
            dest="TRANSIENT";
            (new File(_destFile)).delete();
            if (_log.shouldLog(Log.DEBUG))             _log.debug("Requesting new transient destination");
          }
        }
 else {
          dest="TRANSIENT";
          (new File(_destFile)).delete();
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Requesting new transient destination");
        }
        byte[] id=new byte[5];
        _context.random().nextBytes(id);
        _conOptions="ID=" + Base32.encode(id);
      }
 else {
        dest=_destFile;
      }
      String req="SESSION CREATE STYLE=STREAM DESTINATION=" + dest + " "+ _conOptions+ "\n";
      _samOut.write(req.getBytes());
      _samOut.flush();
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Session create sent");
      boolean ok=_eventHandler.waitForSessionCreateReply();
      if (!ok)       throw new IOException("Session create failed");
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Session create reply found: " + ok);
      req="NAMING LOOKUP NAME=ME\n";
      _samOut.write(req.getBytes());
      _samOut.flush();
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Naming lookup sent");
      String destination=_eventHandler.waitForNamingReply("ME");
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Naming lookup reply found: " + destination);
      if (destination == null) {
        _log.error("No naming lookup reply found!");
        return null;
      }
 else {
        if (_log.shouldInfo())         _log.info(_destFile + " is located at " + destination);
      }
      return destination;
    }
 catch (    Exception e) {
      _log.error("Error handshaking",e);
      return null;
    }
  }
}
