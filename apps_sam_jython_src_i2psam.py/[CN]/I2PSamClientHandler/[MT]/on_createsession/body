def on_createsession(self, flds):
    log(4, 'entered')
    server = self.server
    client = server.i2pclient
    globalsessions = server.sessions
    sessionsLock = server.sessionsLock
    read = self.rfile.read
    readline = self.rfile.readline
    write = self.wfile.write
    flush = self.wfile.flush
    sessionsLock.acquire()
    try:
        b64priv = flds[1]
        if (b64priv in globalsessions.keys()):
            write('error dest in use\n')
        elif (b64priv in self.localsessions.keys()):
            write('ok\n')
        else:
            dest = I2PDestination(base64private=b64priv)
            log(4, ("Creating session on dest '%s'" % b64priv[:40]))
            session = client.createSession(dest)
            log(4, ("Connecting session on dest '%s'" % b64priv[:40]))
            session.connect()
            log(4, ("Session on dest '%s' now live" % b64priv[:40]))
            self.localsessions[b64priv] = session
            globalsessions[b64priv] = session
            write('ok\n')
    except:
        logException(4, 'createsession fail')
        write('error exception\n')
    sessionsLock.release()
