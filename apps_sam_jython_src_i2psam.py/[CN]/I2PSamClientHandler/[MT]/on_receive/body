def on_receive(self, flds):
    log(4, 'entered')
    server = self.server
    client = server.i2pclient
    globalsessions = server.sessions
    sessionsLock = server.sessionsLock
    read = self.rfile.read
    readline = self.rfile.readline
    write = self.wfile.write
    flush = self.wfile.flush
    sessionsLock.acquire()
    session = None
    try:
        b64priv = flds[1]
        if (not globalsessions.has_key(b64priv)):
            write('error nosuchsession\n')
        elif (not self.localsessions.has_key(b64priv)):
            write('error notyoursession\n')
        else:
            session = self.localsessions[b64priv]
    except:
        logException(4, 'receive command error')
        write('error exception on receive command\n')
    sessionsLock.release()
    if (not session):
        log(4, ('no session matching privdest %s' % b64priv[:30]))
        return
    if (session.numMessages() > 0):
        msg = session.getMessage()
        write(('ok %s\n%s' % (len(msg), msg)))
    else:
        write('ok 0\n')
    log(4, 'done')
    return
