def __init__(self, i2pclient=None, **kw):
    "\n        Create the client listener object\n        \n        Arguments:\n            - i2pclient - an I2PClient object - optional - if not\n              given, one will be created\n        \n        Keywords:\n            - host - host to listen on for client conns (default self.host ('127.0.0.1')\n            - port - port to listen on for client conns (default self.port (7656)\n            - i2cphost - host to talk to i2cp on (default self.i2cphost ('127.0.0.1'))\n            - i2cpport - port to talk to i2cp on (default self.i2cphost ('127.0.0.1'))\n        "
    if (i2pclient is None):
        i2pclient = I2PClient()
    self.i2pclient = i2pclient
    self.host = kw.get('host', self.host)
    self.port = int(kw.get('port', self.port))
    self.i2cphost = kw.get('i2cphost', self.i2cphost)
    self.i2cpport = int(kw.get('i2cpport', self.i2cpport))
    self.sessions = {}
    self.sessionsLock = threading.Lock()
    self.streams = {}
    self.streamsLock = threading.Lock()
    self.samNextId = 1
    self.samNextIdLock = threading.Lock()
    try:
        ThreadingTCPServer.__init__(self, (self.host, self.port), I2PSamClientHandler)
    except:
        log(4, ('crashed with host=%s, port=%s' % (self.host, self.port)))
        raise
