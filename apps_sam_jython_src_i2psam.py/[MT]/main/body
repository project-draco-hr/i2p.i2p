def main():
    argv = sys.argv
    argc = len(argv)
    try:
        (opts, args) = getopt.getopt(sys.argv[1:], 'h?vV:H:P:', ['help', 'version', 'verbosity=', 'listenhost=', 'listenport=', 'i2cphost=', 'i2cpport='])
    except:
        traceback.print_exc(file=sys.stdout)
        usage('You entered an invalid option')
    serveropts = {}
    for (opt, val) in opts:
        if (opt in ['-h', '-?', '--help']):
            usage(1)
        elif (opt in ['-v', '--version']):
            print ('I2P SAM version %s' % version)
            sys.exit(0)
        elif (opt in ['-V', '--verbosity']):
            serveropts['verbosity'] = int(val)
        elif (opt in ['-H', '--listenhost']):
            serveropts['host'] = val
        elif (opt in ['-P', '--listenport']):
            serveropts['port'] = int(val)
        elif (opt in ['--i2cphost']):
            serveropts['i2cphost'] = val
        elif (opt in ['--i2cpport']):
            serveropts['i2cpport'] = int(val)
        else:
            usage(0)
    if (len(args) == 0):
        cmd = 'samserver'
    else:
        cmd = args[0]
    if (cmd == 'samserver'):
        log(2, 'Running I2P SAM Server...')
        server = I2PSamServer(**serveropts)
        server.run()
    elif (cmd == 'test'):
        print 'RUNNING full I2PSAM Jython TEST SUITE'
        testsigs()
        testdests()
        testsession()
        testsocket()
    elif (cmd == 'testsocket'):
        print 'RUNNING SOCKET TEST'
        testsocket(0)
    elif (cmd == 'testbidirsocket'):
        print 'RUNNING BIDIRECTIONAL SOCKET TEST'
        testsocket(1)
    else:
        usage(0)
