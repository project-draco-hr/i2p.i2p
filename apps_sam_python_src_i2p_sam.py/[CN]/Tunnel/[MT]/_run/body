def _run(self):
    'Manage the tunnel in a separate thread.'
    tunnels = []
    while True:
        if ((self.nconnect < 0) or (len(tunnels) < self.nconnect)):
            (A, B) = (None, None)
            try:
                (A, ignoredest) = self.receive.accept()
                A.setblocking(False)
                B = self.make_send()
                B.setblocking(False)
                if (self.timeout != None):
                    t = (time.time() + self.timeout)
                else:
                    t = None
                tunnels.append((A, B, t))
            except Exception as e:
                try:
                    if (A != None):
                        A.setblocking(False)
                        A.close()
                except Exception as e:
                    pass
                try:
                    if (B != None):
                        B.setblocking(False)
                        B.close()
                except Exception as e:
                    pass
        new_tunnels = []
        for (A, B, t) in tunnels:
            try:
                if (t != None):
                    assert (time.time() <= t)
                _test_connected(B)
                _exchange_data(A, B)
                if (self.timeout != None):
                    t = (time.time() + self.timeout)
                else:
                    t = None
                new_tunnels.append((A, B, t))
            except Exception as e:
                time_ok = True
                if (self.timeout != None):
                    if (time.time() > t):
                        time_ok = False
                if (time_ok and (not isinstance(e, ClosedError))):
                    new_tunnels.append((A, B, t))
                else:
                    try:
                        A.setblocking(False)
                        A.close()
                    except Exception as e:
                        pass
                    try:
                        B.setblocking(False)
                        B.close()
                    except Exception as e:
                        pass
        tunnels = new_tunnels
        time.sleep(0.01)
        if (not self.alive):
            for (A, B, t) in tunnels:
                try:
                    A.setblocking(False)
                    A.close()
                except:
                    pass
                try:
                    B.setblocking(False)
                    B.close()
                except:
                    pass
            break
