def _make_session(session, type, samaddr, **kwargs):
    'Make a session object (eg samclasses.StreamSession).  Same\n     arguments as socket().  Return an existing session object\n     if one has been previously created under the given name.\n  '
    _session_lock.acquire()
    try:
        if (type == SOCK_STREAM):
            C = samclasses.StreamSession
        elif (type == SOCK_DGRAM):
            C = samclasses.DatagramSession
        elif (type == SOCK_RAW):
            C = samclasses.RawSession
        else:
            raise ValueError('bad socket type')
        if ((session != '') and _sessions.has_key(session)):
            if (_sessions[session].__class__ != C):
                raise ValueError(((('session ' + repr(session)) + ' was ') + 'created with a different session type.'))
            return _sessions[session]
        if (type == SOCK_STREAM):
            ans = C(session, samaddr, **kwargs)
        elif (type == SOCK_DGRAM):
            ans = C(session, samaddr, **kwargs)
        elif (type == SOCK_RAW):
            ans = C(session, samaddr, **kwargs)
        if (session != ''):
            _sessions[session] = ans
        return ans
    finally:
        _session_lock.release()
