'\nLower-level SAM API, interfaces with SAM Bridge.\n\nFor internal use only.\n\nUse the higher level i2p.socket module for your own programs.\n\nFor details on SAM, see "Simple Anonymous Messaging (SAM) v1.0,"\nas published by jrandom.\n\nClass Overview:\n\n - SAMTerminal:     Message sender/reader, talks to SAM Bridge.\n - StringBuffer:    Queue for character data.\n - BaseSession:     SAM session classes are derived from this.\n - StreamSession:   SAM stream session class, threadsafe, high level.\n - DatagramSession: SAM datagram session, threadsafe, high level.\n - RawSession:      SAM raw session, threadsafe, high level.\n\nNote that a \'None\' timeout is an infinite timeout: it\nblocks forever if necessary.\n\nTodo:\n  - Error handling is a huge mess.  Neaten it up.\n    Subclass a ErrorMixin class, then use set_error(e),\n    check_error(), get_error().\n  - Streams are a huge mess.  Neaten them up.\n  - This whole interface is a tad confusing.  Neaten it up.\n'
import Queue, traceback, random, sys, shlex
import thread, threading, time, string
import i2p
import i2p.socket
from i2p.pylib import socket as pysocket
log = False
