def select(readlist, writelist, errlist, timeout=None):
    'Performs a select call.  Works on SAM sockets and Python\n     sockets.  See select.select() in the Python library for more\n     information.'
    Rans = []
    Wans = []
    Eans = []
    if (timeout != None):
        end = (time.clock() + timeout)
    while True:
        for R in readlist:
            if (isinstance(R, int) or hasattr(R, 'fileno')):
                if (len(pyselect.select([R], [], [], 0.0)[0]) > 0):
                    Rans.append(R)
            elif (R.type == i2p.socket.SOCK_STREAM):
                try:
                    R._verify_connected()
                    Rans.append(R)
                except:
                    pass
            elif (len(R) > 0):
                Rans.append(R)
        for W in writelist:
            if (isinstance(W, int) or hasattr(W, 'fileno')):
                if (len(pyselect.select([], [W], [], 0.0)[1]) > 0):
                    Wans.append(W)
            elif (W.type == i2p.socket.SOCK_STREAM):
                try:
                    W._verify_connected()
                    Wans.append(W)
                except:
                    pass
            else:
                Wans.append(W)
        for E in errlist:
            if (isinstance(E, int) or hasattr(E, 'fileno')):
                if (len(pyselect.select([], [], [E], 0.0)[2]) > 0):
                    Eans.append(E)
            elif (E.type == i2p.socket.SOCK_STREAM):
                try:
                    E._verify_connected()
                    if (E.sessobj.err != None):
                        Eans.append(E)
                except:
                    pass
        if ((timeout != None) and (time.clock() >= end)):
            break
        if ((len(Rans) != 0) or (len(Wans) != 0) or (len(Eans) != 0)):
            break
        time.sleep(0.01)
    return (Rans, Wans, Eans)
