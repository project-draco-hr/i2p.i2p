def recvfrom(self, bufsize, flags=0):
    'Like recv(), but returns a tuple (data, remoteaddr), where\n       data is the string data received, and remoteaddr is the\n       remote Destination.'
    timeout = self.timeout
    (peek, waitall, dontwait) = ((flags & MSG_PEEK), (flags & MSG_WAITALL), (flags & MSG_DONTWAIT))
    if dontwait:
        timeout = 0.0
    if (self.type == SOCK_STREAM):
        self._verify_connected()
        if (bufsize < 0):
            raise ValueError('bufsize must be >= 0 for streams')
        return (self.sessobj.recv(bufsize, timeout, peek, waitall), self.remotedest)
    else:
        if (bufsize < (-1)):
            raise ValueError('bufsize must be >= -1 for packets')
        (data, addr) = self.sessobj.recv(timeout, peek)
        return (data[:bufsize], addr)
