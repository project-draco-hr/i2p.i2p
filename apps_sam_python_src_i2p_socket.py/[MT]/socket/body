def socket(session, type, samaddr=samaddr, **kwargs):
    "Create a new socket.  Argument session should be a session\n     name -- if the name has not yet been used, an I2P\n     Destination will be created for it, otherwise, the\n     existing Destination will be re-used.  An empty session\n     string causes a transient session to be created.  Argument\n     type is one of SOCK_STREAM, SOCK_DGRAM, or SOCK_RAW.\n\n     I2P configuration keyword arguments:\n\n       - in_depth  - depth of incoming tunnel (default 2)\n       - out_depth - depth of outgoing tunnel (default 2)\n\n     A single session may be shared by more than one socket, if\n     the sockets are the same type, and if the sockets are\n     created within the same Python process.  The socket\n     objects are multithread-safe.\n\n     Examples:\n       >>> a = i2p.socket('Alice', i2p.SOCK_STREAM)\n       >>> b = i2p.socket('Bob',   i2p.SOCK_DGRAM,\n                          in_depth=2, out_depth=5)\n\n     The created object behaves identically to a socket from\n     module socket, with the following exceptions:\n\n       - I2P Destinations are used as address arguments [1].\n       - bind is a no-op: sockets are always bound.\n       - send* methods send all data and are non-blocking.\n\n     A given session name can only be open in a single Python\n     program at a time.  If you need to overcome this\n     limitation, consider patching I2P.\n\n     [1].\n     Alternatively, a host name can be used as an address.\n     It will be resolved using hosts.txt.\n\n     For details on how to use socket objects, see\n     http://www.python.org/doc/current/lib/socket-objects.html\n\n     See the examples directory for code examples.\n  "
    return Socket(session, type, samaddr, **kwargs)
