def addref(self, peer, doPing=False):
    "\n        Given a peer node's destination, add it to our\n        buckets and internal data store\n        \n        Arguments:\n            - peer - one of:\n                - the I2P destination of the peer node, as\n                  a base64 string\n                - a KNode object\n                - a KPeer object\n            - doPing - ping this node automatically (default False)\n        "
    peer = self._normalisePeer(peer)
    if (peer.dest == self.dest):
        self.log(3, ('node %s, trying to add ref to ourself???' % self.name))
        return peer
    elif (not self._findPeer(peer.dest)):
        self.peers.append(peer)
        self.storage.putRefs(peer)
    else:
        self.log(4, ('node %s, trying to add duplicate noderef %s' % (self.name, peer)))
        return peer
    dist = self.id.distance(peer.id)
    self.buckets[dist].justSeenPeer(peer)
    if doPing:
        self.log(4, ('doing initial ping\n%s\n%s' % (self, peer)))
        KRpcPing(self, peer=peer)
    return peer
