def demoSTREAM():
    '\n    Runs a demo of SAM STREAM messaging\n    '
    print 'Starting SAM STREAM demo...'
    print 
    print 'Instantiating client c6...'
    c6 = I2PSamClient()
    print 'Creating dest for c6'
    (pub6, priv6) = c6.samDestGenerate()
    print 'Creating SAM STREAM SESSION on connection c6...'
    res = c6.samSessionCreate('STREAM', priv6, direction='RECEIVE')
    if (res != 'OK'):
        print ('Failed to create STREAM session on connection c6: %s' % repr(res))
        return
    print 'STREAM Session on connection c6 created successfully'
    print 'Launching acceptor thread...'
    thread.start_new_thread(demoSTREAM_thread, (c6,))
    print '----------------------------------------'
    print 'Instantiating client c5...'
    c5 = I2PSamClient()
    print 'Creating dest for c5'
    (pub5, priv5) = c5.samDestGenerate()
    print 'Creating SAM STREAM SESSION on connection c5...'
    res = c5.samSessionCreate('STREAM', priv5, direction='CREATE')
    if (res != 'OK'):
        print ('Failed to create STREAM session on connection c5: %s' % repr(res))
        return
    print 'STREAM Session on connection c5 created successfully'
    print '----------------------------------------'
    print 'Making connection from c5 to c6...'
    try:
        conn_c5 = c5.samStreamConnect(pub6)
    except:
        print 'Stream Connection failed'
        return
    print 'Stream connect succeeded'
    print 'Receiving from c5...'
    buf = conn_c5.readline()
    print ('Got %s' % repr(buf))
    print 
    print '--------------------------------------'
    print 'DATAGRAM data transfer tests succeeded'
    print '--------------------------------------'
    print 
