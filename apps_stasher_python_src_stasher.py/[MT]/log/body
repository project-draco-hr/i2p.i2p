def log(verbosity, msg, nPrev=0, clsname=None):
    global logToSocket, logFile
    if (logFile == None):
        logFile = os.path.join(userI2PDir(), 'stasher.log')
    caller = traceback.extract_stack()[(- (2 + nPrev))]
    (path, line, func) = caller[:3]
    path = os.path.split(path)[1]
    if clsname:
        func = ((clsname + '.') + func)
    msg = ('%s():%s:  %s' % (func, line, msg.replace('\n', '\n   + ')))
    if (verbosity > logVerbosity):
        return
    if logToSocket:
        try:
            if isinstance(logToSocket, int):
                portnum = logToSocket
                logToSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                connected = 0
                while 1:
                    try:
                        logToSocket.connect(('localhost', portnum))
                        break
                    except socket.error:
                        print ('Please open an xterm/nc listening on %s' % logToSocket)
                        time.sleep(1)
            logToSocket.send((msg + '\n'))
        except:
            traceback.print_exc()
    else:
        print msg
    logLock.acquire()
    file(logFile, 'a+').write((msg + '\n'))
    logLock.release()
