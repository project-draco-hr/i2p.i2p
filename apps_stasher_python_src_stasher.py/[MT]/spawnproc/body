def spawnproc(*args, **kw):
    '\n    Spawns a process and returns its PID\n    \n    VOMIT!\n    \n    I have to do a pile of odious for the win32 side\n    \n    Returns a usable PID\n    \n    Keywords:\n        - priority - priority at which to spawn - default 20 (highest)\n    '
    priority = (20 - kw.get('priority', 20))
    if (sys.platform != 'win32'):
        args = (['/usr/bin/nice', '-n', str(priority)] + list(args))
        return os.spawnv(os.P_NOWAIT, args[0], args)
    else:
        args = list(args)
        args.insert(0, sys.executable)
        cmd = ' '.join(args)
        if 0:
            try:
                c = _winreg.ConnectRegistry(None, _winreg.HKEY_LOCAL_MACHINE)
                c1 = _winreg.OpenKey(c, 'SOFTWARE')
                c2 = _winreg.OpenKey(c1, 'Microsoft')
                c3 = _winreg.OpenKey(c2, 'Windows NT')
                c4 = _winreg.OpenKey(c3, 'CurrentVersion')
                supportsBelowNormalPriority = 1
            except:
                supportsBelowNormalPriority = 0
        elif (sys.getwindowsversion()[3] != 2):
            supportsBelowNormalPriority = 0
        else:
            supportsBelowNormalPriority = 1
        if supportsBelowNormalPriority:
            if (priority < 7):
                pri = win32process.IDLE_PRIORITY_CLASS
            elif (priority < 14):
                pri = 16384
            else:
                pri = win32process.NORMAL_PRIORITY_CLASS
        elif (priority < 11):
            pri = win32process.IDLE_PRIORITY_CLASS
        else:
            pri = win32process.NORMAL_PRIORITY_CLASS
        print ('spawnproc: launching %s' % repr(args))
        si = win32process.STARTUPINFO()
        hdl = win32process.CreateProcess(sys.executable, cmd, None, None, 0, 0, None, None, si)
        pid = hdl[2]
        return pid
