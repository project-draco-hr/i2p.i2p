def usage(detailed=False, ret=0):
    print ('Usage: %s <options> [<command> [<ars>...]]' % sys.argv[0])
    if (not detailed):
        print ('Type %s -h for help' % sys.argv[0])
        sys.exit(ret)
    print 'This is stasher, distributed file storage network that runs'
    print 'atop the anonymising I2P network (http://www.i2p.net)'
    print 'Written by aum - August 2004'
    print 
    print 'Options:'
    print '  -h, --help              - display this help'
    print '  -v, --version           - print program version'
    print '  -V, --verbosity=n       - verbosity, default 1, 1=quiet ... 4=noisy'
    print '  -S, --samaddr=host:port - host:port of I2P SAM port, '
    print ('                            default %s' % i2p.socket.samaddr)
    print '  -C, --clientaddr=host:port - host:port for socket interface to listen on'
    print ('                            for clients, default %s' % clientAddr)
    print '  -d, --datadir=dir       - directory in which stasher files get written'
    print '                            default is ~/.stasher'
    print "  -f, --foreground        - only valid for 'start' cmd - runs the node"
    print '                            in foreground without spawning - for debugging'
    print '  -l, --localonly         - only valid for get/put - restricts the get/put'
    print '                            operation to the local node only'
    print 
    print 'Commands:'
    print '  start [<nodename>]'
    print '    - launches a single node, which forks off and runs in background'
    print ("      nodename is a short unique nodename, default is '%s'" % defaultNodename)
    print '  stop [<nodename>]'
    print '    - terminates running node <nodename>'
    print '  get <keyname> [<file>]'
    print '    - attempts to retrieve key <keyname> from the network, saving'
    print '      to file <file> if given, or to stdout if not'
    print '  put <keyname> [<file>]'
    print '    - inserts key <keyname> into the network, taking its content'
    print '      from file <file> if given, otherwise reads content from stdin'
    print '  addref <file>'
    print '    - adds a new noderef to the node, taking the base64 noderef'
    print '      from file <file> if given, or from stdin'
    print "      (if you don't have any refs, visit http://stasher.i2p, or use"
    print '      the dest in the file aum.stasher in cvs)'
    print '  getref <file>'
    print "    - uplifts the running node's dest as base64, writing it to file"
    print '      <file> if given, or to stdout'
    print '  hello'
    print '    - checks that local node is running'
    print '  pingall'
    print '    - diagnostic tool - pings all peers, waits for replies or timeouts,'
    print '      reports results'
    print '  help'
    print '    - display this help'
    print 
    sys.exit(0)
