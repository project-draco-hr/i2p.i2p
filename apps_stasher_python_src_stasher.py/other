"\nIndroduction:\n    - A simple implementation of the\n      U{Kademlia<http://www.infoanarchy.org/wiki/wiki.pl?Kademlia>}\n      P2P distributed storage and retrieval protocol, designed to\n      utilise the U{I2P<http://www.i2p.net>} stealth network as its transport.\n\nI strongly recommend that when editing this file, you use the Leo\noutlining and literate programming editor - http://leo.sf.net\n\nIf Leo doesn't agree with your religion, please try to leave the markups intact\n"
import sys, os, types, sha, random, threading, thread, traceback, Queue
import time, math, random, pickle, getopt, re
import signal
if (sys.platform == 'win32'):
    try:
        import win32api
        import win32process
        import _winreg
    except:
        print 'Python win32 extensions not installed.'
        print 'Please go to http://sourceforge.net/project/showfiles.php?group_id=78018'
        print ('and download/install the file pywin32-202.win32-py%s.%s.exe' % sys.version_info[:2])
        sys.exit(1)
from StringIO import StringIO
from pdb import set_trace
import bencode
import i2p.socket
import i2p.select
import i2p.pylib
SocketServer = i2p.pylib.SocketServer
socket = i2p.pylib.socket
samAddr = i2p.socket.samaddr
clientAddr = '127.0.0.1:7659'
defaultNodename = '0'
maxValueSize = 30000
maxBucketSize = 20
numSearchPeers = 3
maxConcurrentQueries = 10
numStorePeers = 10
logFile = None
logVerbosity = 2
dataDir = None
greetPeersOnStartup = False
testing = False
tunnelDepth = 0
runCore = True
timeout = {'ping': 120, 'findNode': 30, 'findData': 30, 'store': 120, }
logToSocket = None
desperatelyDebugging = False
if desperatelyDebugging:
    runCoreInBackground = False
else:
    runCoreInBackground = True
_nodes = {}
version = '0.0'
core = KCore()
logLock = threading.Lock()
if (__name__ == '__main__'):
    main()
