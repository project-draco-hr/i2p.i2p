{
  _connected=false;
  if (_socket != null)   _socket.destroy();
  _socket=null;
  _inputStream=null;
  if (_outputStream != null)   _outputStream.destroy();
  _outputStream=null;
  _outboundQueue=null;
  _handler=null;
  if (_receiver != null)   _receiver.destroy();
  _receiver=null;
  if (_activityTimer != null)   SimpleTimer.getInstance().addEvent(_activityTimer,1);
  _activityTimer=null;
  if (!_disconnectScheduled) {
    _disconnectScheduled=true;
    if (_log.shouldLog(Log.INFO))     _log.info("Connection disconnect complete from dead, drop the con " + toString());
    _connectionManager.removeConnection(this);
  }
  boolean tagsCancelled=false;
synchronized (_outboundPackets) {
    for (Iterator iter=_outboundPackets.values().iterator(); iter.hasNext(); ) {
      PacketLocal pl=(PacketLocal)iter.next();
      if ((pl.getTagsSent() != null) && (pl.getTagsSent().size() > 0))       tagsCancelled=true;
      pl.cancelled();
    }
    _outboundPackets.clear();
    _outboundPackets.notifyAll();
  }
  if (tagsCancelled)   _context.sessionKeyManager().failTags(_remotePeer.getPublicKey());
}
