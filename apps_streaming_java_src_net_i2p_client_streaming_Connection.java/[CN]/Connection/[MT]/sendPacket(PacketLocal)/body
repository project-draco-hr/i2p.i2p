{
  setNextSendTime(-1);
  _unackedPacketsReceived=0;
  if (_options.getRequireFullySigned()) {
    packet.setFlag(Packet.FLAG_SIGNATURE_INCLUDED);
    packet.setFlag(Packet.FLAG_SIGNATURE_REQUESTED);
  }
  boolean ackOnly=false;
  if ((packet.getSequenceNum() == 0) && (!packet.isFlagSet(Packet.FLAG_SYNCHRONIZE))) {
    ackOnly=true;
  }
 else {
synchronized (_outboundPackets) {
      _outboundPackets.put(new Long(packet.getSequenceNum()),packet);
    }
    SimpleTimer.getInstance().addEvent(new ResendPacketEvent(packet),_options.getResendDelay());
  }
  _lastSendTime=_context.clock().now();
  _outboundQueue.enqueue(packet);
  if (ackOnly) {
    if (packet.getTagsSent().size() > 0) {
      _log.error("Sending a ping since the ACK we just sent has " + packet.getTagsSent().size() + " tags");
      _connectionManager.ping(_remotePeer,_options.getRTT() * 2,false,packet.getKeyUsed(),packet.getTagsSent());
    }
  }
}
