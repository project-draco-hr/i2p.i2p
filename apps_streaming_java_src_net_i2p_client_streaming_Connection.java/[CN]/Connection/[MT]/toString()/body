{
  StringBuffer buf=new StringBuffer(128);
  buf.append("[Connection ");
  if (_receiveStreamId != null)   buf.append(Base64.encode(_receiveStreamId));
 else   buf.append("unknown");
  buf.append("<-->");
  if (_sendStreamId != null)   buf.append(Base64.encode(_sendStreamId));
 else   buf.append("unknown");
  buf.append(" wsize: ").append(_options.getWindowSize());
  buf.append(" cwin: ").append(_congestionWindowEnd - _highestAckedThrough);
  buf.append(" rtt: ").append(_options.getRTT());
  buf.append(" unacked outbound: ");
synchronized (_outboundPackets) {
    buf.append(_outboundPackets.size()).append(" [");
    for (Iterator iter=_outboundPackets.keySet().iterator(); iter.hasNext(); ) {
      buf.append(((Long)iter.next()).longValue()).append(" ");
    }
    buf.append("] ");
  }
  buf.append("unacked inbound? ").append(getUnackedPacketsReceived());
  buf.append(" [high ").append(_inputStream.getHighestBlockId());
  long nacks[]=_inputStream.getNacks();
  if (nacks != null)   for (int i=0; i < nacks.length; i++)   buf.append(" ").append(nacks[i]);
  buf.append("]");
  buf.append("]");
  return buf.toString();
}
