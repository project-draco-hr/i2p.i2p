{
  StringBuffer buf=new StringBuffer(128);
  buf.append("[Connection ");
  if (_receiveStreamId > 0)   buf.append(Packet.toId(_receiveStreamId));
 else   buf.append("unknown");
  buf.append('/');
  if (_sendStreamId > 0)   buf.append(Packet.toId(_sendStreamId));
 else   buf.append("unknown");
  if (_isInbound)   buf.append(" from ");
 else   buf.append(" to ");
  if (_remotePeerSet)   buf.append(_remotePeer.calculateHash().toBase64().substring(0,4));
 else   buf.append("unknown");
  buf.append(" up ").append(DataHelper.formatDuration(_context.clock().now() - _createdOn));
  buf.append(" wsize: ").append(_options.getWindowSize());
  buf.append(" cwin: ").append(_congestionWindowEnd - _highestAckedThrough);
  buf.append(" rtt: ").append(_options.getRTT());
  buf.append(" rto: ").append(_options.getRTO());
  buf.append(" unacked out: ").append(_outboundPackets.size()).append(" ");
  buf.append("unacked in: ").append(getUnackedPacketsReceived());
  int missing=0;
  if (_inputStream != null) {
    long nacks[]=_inputStream.getNacks();
    if (nacks != null) {
      missing=nacks.length;
      buf.append(" [").append(missing).append(" missing]");
    }
  }
  if (getResetSent())   buf.append(" reset sent");
  if (getResetReceived())   buf.append(" reset received");
  if (getCloseSentOn() > 0) {
    buf.append(" close sent ");
    long timeSinceClose=_context.clock().now() - getCloseSentOn();
    buf.append(DataHelper.formatDuration(timeSinceClose));
    buf.append(" ago");
  }
  if (getCloseReceivedOn() > 0)   buf.append(" close received");
  buf.append(" sent: ").append(1 + _lastSendId);
  if (_inputStream != null)   buf.append(" rcvd: ").append(1 + _inputStream.getHighestBlockId() - missing);
  buf.append(" maxWin ").append(getOptions().getMaxWindowSize());
  buf.append(" MTU ").append(getOptions().getMaxMessageSize());
  buf.append("]");
  return buf.toString();
}
