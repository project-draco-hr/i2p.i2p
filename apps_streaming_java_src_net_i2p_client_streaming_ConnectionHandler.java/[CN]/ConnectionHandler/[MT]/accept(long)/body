{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Accept(" + timeoutMs + ") called");
  long expiration=timeoutMs + _context.clock().now();
  while (true) {
    if ((timeoutMs > 0) && (expiration < _context.clock().now()))     return null;
    if (!_active) {
      while (true) {
        Packet packet=_synQueue.poll();
        if (packet == null || packet.getOptionalDelay() == PoisonPacket.POISON_MAX_DELAY_REQUEST)         break;
        sendReset(packet);
      }
      return null;
    }
    Packet syn=null;
    while (_active && syn == null) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Accept(" + timeoutMs + "): active="+ _active+ " queue: "+ _synQueue.size());
      if (timeoutMs <= 0) {
        try {
          syn=_synQueue.take();
        }
 catch (        InterruptedException ie) {
        }
      }
 else {
        long remaining=expiration - _context.clock().now();
        if (remaining < 1)         break;
        try {
          syn=_synQueue.poll(remaining,TimeUnit.MILLISECONDS);
        }
 catch (        InterruptedException ie) {
        }
        break;
      }
    }
    if (syn != null) {
      if (syn.getOptionalDelay() == PoisonPacket.POISON_MAX_DELAY_REQUEST)       return null;
      if (syn.isFlagSet(Packet.FLAG_SYNCHRONIZE)) {
        Destination from=syn.getOptionalFrom();
        if (from == null) {
          if (_log.shouldLog(Log.WARN))           _log.warn("Dropping SYN packet with no FROM: " + syn);
          continue;
        }
        Connection oldcon=_manager.getConnectionByOutboundId(syn.getReceiveStreamId());
        if (oldcon != null) {
          if (from.equals(oldcon.getRemotePeer())) {
            if (_log.shouldLog(Log.WARN))             _log.warn("Dropping dup SYN: " + syn);
            continue;
          }
        }
        Connection con=_manager.receiveConnection(syn);
        if (con != null)         return con;
      }
 else {
        reReceivePacket(syn);
      }
    }
  }
}
