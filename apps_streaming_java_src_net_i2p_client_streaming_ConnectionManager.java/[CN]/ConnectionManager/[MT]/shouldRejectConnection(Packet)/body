{
  Destination from=syn.getOptionalFrom();
  if (from == null)   return "null";
  Hash h=from.calculateHash();
  String throttled=null;
  if (_minuteThrottler != null && _minuteThrottler.shouldThrottle(h)) {
    _context.statManager().addRateData("stream.con.throttledMinute",1,0);
    if (_defaultOptions.getMaxConnsPerMinute() <= 0)     throttled="throttled by" + " total limit of " + _defaultOptions.getMaxTotalConnsPerMinute() + " per minute";
 else     if (_defaultOptions.getMaxTotalConnsPerMinute() <= 0)     throttled="throttled by per-peer limit of " + _defaultOptions.getMaxConnsPerMinute() + " per minute";
 else     throttled="throttled by per-peer limit of " + _defaultOptions.getMaxConnsPerMinute() + " or total limit of "+ _defaultOptions.getMaxTotalConnsPerMinute()+ " per minute";
  }
  if (_hourThrottler != null && _hourThrottler.shouldThrottle(h)) {
    _context.statManager().addRateData("stream.con.throttledHour",1,0);
    if (_defaultOptions.getMaxConnsPerHour() <= 0)     throttled="throttled by" + " total limit of " + _defaultOptions.getMaxTotalConnsPerHour() + " per hour";
 else     if (_defaultOptions.getMaxTotalConnsPerHour() <= 0)     throttled="throttled by per-peer limit of " + _defaultOptions.getMaxConnsPerHour() + " per hour";
 else     throttled="throttled by per-peer limit of " + _defaultOptions.getMaxConnsPerHour() + " or total limit of "+ _defaultOptions.getMaxTotalConnsPerHour()+ " per hour";
  }
  if (_dayThrottler != null && _dayThrottler.shouldThrottle(h)) {
    _context.statManager().addRateData("stream.con.throttledDay",1,0);
    if (_defaultOptions.getMaxConnsPerDay() <= 0)     throttled="throttled by" + " total limit of " + _defaultOptions.getMaxTotalConnsPerDay() + " per day";
 else     if (_defaultOptions.getMaxTotalConnsPerDay() <= 0)     throttled="throttled by per-peer limit of " + _defaultOptions.getMaxConnsPerDay() + " per day";
 else     throttled="throttled by per-peer limit of " + _defaultOptions.getMaxConnsPerDay() + " or total limit of "+ _defaultOptions.getMaxTotalConnsPerDay()+ " per day";
  }
  if (throttled != null)   return throttled;
  if (_defaultOptions.isAccessListEnabled() && !_defaultOptions.getAccessList().contains(h))   return "not whitelisted";
  if (_defaultOptions.isBlacklistEnabled() && _defaultOptions.getBlacklist().contains(h))   return "blacklisted";
  String hashes=_context.getProperty(PROP_BLACKLIST,"");
  if (!_currentBlacklist.equals(hashes)) {
synchronized (_globalBlacklist) {
      if (hashes != null) {
        Set<Hash> newSet=new HashSet();
        StringTokenizer tok=new StringTokenizer(hashes,",; ");
        while (tok.hasMoreTokens()) {
          String hashstr=tok.nextToken();
          Hash hh=ConvertToHash.getHash(hashstr);
          if (hh != null)           newSet.add(hh);
 else           _log.error("Bad blacklist entry: " + hashstr);
        }
        _globalBlacklist.addAll(newSet);
        _globalBlacklist.retainAll(newSet);
        _currentBlacklist=hashes;
      }
 else {
        _globalBlacklist.clear();
        _currentBlacklist="";
      }
    }
  }
  if (hashes.length() > 0 && _globalBlacklist.contains(h))   return "blacklisted globally";
  return null;
}
