{
  if (ackThrough < 0)   return false;
  int numResends=0;
  List acked=null;
  if ((packet != null) && (packet.getSendStreamId() > 0) && (packet.getReceiveStreamId() > 0)&& (con != null)&& (con.getSendStreamId() > 0)&& (con.getReceiveStreamId() > 0)&& (!DataHelper.eq(packet.getSendStreamId(),Packet.STREAM_ID_UNKNOWN))&& (!DataHelper.eq(packet.getReceiveStreamId(),Packet.STREAM_ID_UNKNOWN))&& (!DataHelper.eq(con.getSendStreamId(),Packet.STREAM_ID_UNKNOWN))&& (!DataHelper.eq(con.getReceiveStreamId(),Packet.STREAM_ID_UNKNOWN)))   acked=con.ackPackets(ackThrough,nacks);
 else   return false;
  if ((acked != null) && (acked.size() > 0)) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug(acked.size() + " of our packets acked with " + packet);
    int highestRTT=-1;
    for (int i=0; i < acked.size(); i++) {
      PacketLocal p=(PacketLocal)acked.get(i);
      if (p.getAckTime() > highestRTT) {
        highestRTT=p.getAckTime();
      }
      _context.statManager().addRateData("stream.sendsBeforeAck",p.getNumSends(),p.getAckTime());
      if (p.getNumSends() > 1)       numResends++;
      if ((p.getKeyUsed() != null) && (p.getTagsSent() != null) && (p.getTagsSent().size() > 0)) {
        _context.sessionKeyManager().tagsDelivered(p.getTo().getPublicKey(),p.getKeyUsed(),p.getTagsSent());
      }
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Packet acked after " + p.getAckTime() + "ms: "+ p);
    }
    if (highestRTT > 0) {
      con.getOptions().updateRTT(highestRTT);
    }
    _context.statManager().addRateData("stream.con.packetsAckedPerMessageReceived",acked.size(),highestRTT);
  }
  if (packet != null)   return adjustWindow(con,isNew,packet.getSequenceNum(),numResends,(acked != null ? acked.size() : 0),choke);
 else   return adjustWindow(con,false,-1,numResends,(acked != null ? acked.size() : 0),choke);
}
