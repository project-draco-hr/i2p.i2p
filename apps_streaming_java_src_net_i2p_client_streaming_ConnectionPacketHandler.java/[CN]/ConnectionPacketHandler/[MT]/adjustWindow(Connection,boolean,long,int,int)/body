{
  boolean congested=false;
  if ((!isNew) && (sequenceNum > 0)) {
    int oldSize=con.getOptions().getWindowSize();
    con.congestionOccurred();
    oldSize>>>=1;
    if (oldSize <= 0)     oldSize=1;
    con.getOptions().setWindowSize(oldSize);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Congestion occurred - new windowSize " + oldSize + " congestionSeenAt: "+ con.getLastCongestionSeenAt()+ " (#resends: "+ numResends+ ") for "+ con);
    congested=true;
  }
  long lowest=con.getHighestAckedThrough();
  if (lowest >= con.getCongestionWindowEnd()) {
    int newWindowSize=con.getOptions().getWindowSize();
    if ((!congested) && (acked > 0) && (numResends <= 0)) {
      if (newWindowSize > con.getLastCongestionSeenAt() / 2) {
        int shouldIncrement=_context.random().nextInt(newWindowSize);
        if (shouldIncrement <= 0)         newWindowSize+=1;
      }
 else {
        newWindowSize+=1;
      }
    }
    if (_log.shouldLog(Log.DEBUG))     _log.debug("New window size " + newWindowSize + " congestionSeenAt: "+ con.getLastCongestionSeenAt()+ " (#resends: "+ numResends+ ") for "+ con);
    con.getOptions().setWindowSize(newWindowSize);
    con.setCongestionWindowEnd(newWindowSize + lowest);
  }
  return congested;
}
