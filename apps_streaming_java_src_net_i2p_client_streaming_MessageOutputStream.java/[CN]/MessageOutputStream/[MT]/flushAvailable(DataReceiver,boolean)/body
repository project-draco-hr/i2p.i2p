{
  WriteStatus ws=null;
  long before=System.currentTimeMillis();
  if (_log.shouldLog(Log.INFO) && _valid > 0)   _log.info("flushAvailable() valid = " + _valid);
synchronized (_dataLock) {
    ws=target.writeData(_buf,0,_valid);
    _written+=_valid;
    _valid=0;
    locked_updateBufferSize();
    _dataLock.notifyAll();
    _lastFlushed=_context.clock().now();
  }
  long afterBuild=System.currentTimeMillis();
  if ((afterBuild - before > 1000) && (_log.shouldLog(Log.DEBUG)))   _log.debug("Took " + (afterBuild - before) + "ms to build a packet?  "+ ws);
  if (blocking && ws != null) {
    ws.waitForAccept(_writeTimeout);
    if (ws.writeFailed())     throw new IOException("Flush available failed");
 else     if (!ws.writeAccepted())     throw new InterruptedIOException("Flush available timed out");
  }
  long afterAccept=System.currentTimeMillis();
  if ((afterAccept - afterBuild > 1000) && (_log.shouldLog(Log.DEBUG)))   _log.debug("Took " + (afterAccept - afterBuild) + "ms to accept a packet? "+ ws);
  return;
}
