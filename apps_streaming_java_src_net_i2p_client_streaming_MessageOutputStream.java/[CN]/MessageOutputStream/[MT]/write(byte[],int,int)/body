{
  int cur=off;
  int remaining=len;
  while (remaining > 0) {
    WriteStatus ws=null;
synchronized (_dataLock) {
      if (_buf == null)       throw new IOException("closed (buffer went away)");
      if (_valid + remaining < _buf.length) {
        System.arraycopy(b,cur,_buf,_valid,remaining);
        _valid+=remaining;
        cur+=remaining;
        _written+=remaining;
        remaining=0;
      }
 else {
        int toWrite=_buf.length - _valid;
        System.arraycopy(b,cur,_buf,_valid,toWrite);
        remaining-=toWrite;
        cur+=toWrite;
        _valid=_buf.length;
        if (_dataReceiver == null) {
          throwAnyError();
          return;
        }
        ws=_dataReceiver.writeData(_buf,0,_valid);
        _written+=_valid;
        _valid=0;
        throwAnyError();
      }
    }
    if (ws != null) {
      ws.waitForAccept(_writeTimeout);
      if (!ws.writeAccepted()) {
        if (_writeTimeout > 0)         throw new InterruptedIOException("Write not accepted within timeout");
 else         throw new IOException("Write not accepted into the queue");
      }
    }
  }
  throwAnyError();
}
