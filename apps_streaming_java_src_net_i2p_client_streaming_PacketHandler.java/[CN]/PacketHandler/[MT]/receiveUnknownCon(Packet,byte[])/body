{
  if (packet.isFlagSet(Packet.FLAG_ECHO)) {
    if (packet.getSendStreamId() != null) {
      receivePing(packet);
    }
 else     if (packet.getReceiveStreamId() != null) {
      receivePong(packet);
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Echo packet received with no stream IDs: " + packet);
    }
  }
 else   if (packet.isFlagSet(Packet.FLAG_SYNCHRONIZE)) {
    if (sendId == null) {
      _manager.getConnectionHandler().receiveNewSyn(packet);
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Syn packet reply on a stream we don't know about: " + packet);
    }
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Packet received on an unknown stream (and not a SYN): " + packet);
    if (packet.getSendStreamId() == null) {
      for (Iterator iter=_manager.listConnections().iterator(); iter.hasNext(); ) {
        Connection con=(Connection)iter.next();
        if (DataHelper.eq(con.getSendStreamId(),packet.getReceiveStreamId()) && con.getAckedPackets() <= 0) {
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Received additional packets before the syn on " + con + ": "+ packet);
          receiveKnownCon(con,packet);
          return;
        }
      }
    }
    if (_log.shouldLog(Log.WARN)) {
      StringBuffer buf=new StringBuffer(128);
      Set cons=_manager.listConnections();
      for (Iterator iter=cons.iterator(); iter.hasNext(); ) {
        Connection con=(Connection)iter.next();
        buf.append(Base64.encode(con.getReceiveStreamId())).append(" ");
      }
      _log.warn("Packet belongs to know other cons: " + packet + " connections: "+ buf.toString());
    }
  }
}
