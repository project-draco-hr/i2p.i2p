{
  Connection con=_connection;
  if (size > Packet.MAX_PAYLOAD_SIZE)   throw new IllegalArgumentException("size is too large (" + size + ")");
  boolean ackOnly=isAckOnly(con,size);
  boolean isFirst=(con.getAckedPackets() <= 0) && (con.getUnackedPacketsSent() <= 0);
  PacketLocal packet=new PacketLocal(_context,con.getRemotePeer(),con);
  ByteArray data=new ByteArray(new byte[size]);
  if (size > 0)   System.arraycopy(buf,off,data.getData(),0,size);
  data.setValid(size);
  data.setOffset(0);
  packet.setPayload(data);
  if ((ackOnly && !forceIncrement) && (!isFirst))   packet.setSequenceNum(0);
 else   packet.setSequenceNum(con.getNextOutboundPacketNum());
  packet.setSendStreamId(con.getSendStreamId());
  packet.setReceiveStreamId(con.getReceiveStreamId());
  int choke=con.getOptions().getChoke();
  packet.setOptionalDelay(choke);
  if (choke > 0)   packet.setFlag(Packet.FLAG_DELAY_REQUESTED);
  packet.setResendDelay(con.getOptions().getResendDelay() / 1000);
  if (con.getOptions().getProfile() == ConnectionOptions.PROFILE_INTERACTIVE)   packet.setFlag(Packet.FLAG_PROFILE_INTERACTIVE,true);
 else   packet.setFlag(Packet.FLAG_PROFILE_INTERACTIVE,false);
  packet.setFlag(Packet.FLAG_SIGNATURE_REQUESTED,con.getOptions().getRequireFullySigned());
  if (isFirst) {
    packet.setFlag(Packet.FLAG_SYNCHRONIZE);
    packet.setOptionalFrom(con.getSession().getMyDestination());
    packet.setOptionalMaxSize(con.getOptions().getMaxMessageSize());
  }
  packet.setLocalPort(con.getLocalPort());
  packet.setRemotePort(con.getPort());
  if (con.getSendStreamId() == Packet.STREAM_ID_UNKNOWN) {
    packet.setFlag(Packet.FLAG_NO_ACK);
  }
  if (con.getOutputStream().getClosed() && ((size > 0) || (con.getUnackedPacketsSent() <= 0) || (packet.getSequenceNum() > 0))) {
    packet.setFlag(Packet.FLAG_CLOSE);
    con.notifyCloseSent();
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("New OB pkt (acks not yet filled in): " + packet + " on "+ _connection);
  return packet;
}
