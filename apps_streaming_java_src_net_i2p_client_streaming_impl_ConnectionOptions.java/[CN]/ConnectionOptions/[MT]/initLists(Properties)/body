{
  boolean accessListEnabled=getBool(opts,PROP_ENABLE_ACCESS_LIST,false);
  boolean blackListEnabled=getBool(opts,PROP_ENABLE_BLACKLIST,false);
  Set<Hash> accessList, blackList;
  if (accessListEnabled)   accessList=new HashSet<Hash>();
 else   accessList=Collections.emptySet();
  if (blackListEnabled)   blackList=new HashSet<Hash>();
 else   blackList=Collections.emptySet();
  if (accessListEnabled || blackListEnabled) {
    String hashes=opts.getProperty(PROP_ACCESS_LIST);
    if (hashes == null)     return;
    StringTokenizer tok=new StringTokenizer(hashes,",; ");
    while (tok.hasMoreTokens()) {
      String hashstr=tok.nextToken();
      Hash h=ConvertToHash.getHash(hashstr);
      if (h == null)       error("bad list hash: " + hashstr);
 else       if (blackListEnabled)       blackList.add(h);
 else       accessList.add(h);
    }
  }
  _accessList=accessList;
  _blackList=blackList;
  _accessListEnabled=accessListEnabled;
  _blackListEnabled=blackListEnabled;
  if (_accessListEnabled && _accessList.isEmpty())   error("Connection access list enabled but no valid entries; no peers can connect");
 else   if (_blackListEnabled && _blackList.isEmpty())   error("Connection blacklist enabled but no valid entries; all peers can connect");
}
