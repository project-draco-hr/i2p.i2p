{
  boolean congested=false;
  if ((!isNew) && (sequenceNum > 0)) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Congestion occurred on the sending side. Not adjusting window " + con);
    congested=true;
  }
  long lowest=con.getHighestAckedThrough();
  if (lowest >= con.getCongestionWindowEnd() || acked > 1 || con.getUnackedPacketsSent() > 0) {
    int oldWindow=con.getOptions().getWindowSize();
    int newWindowSize=oldWindow;
    int trend=con.getOptions().getRTTTrend();
    _context.statManager().addRateData("stream.trend",trend,newWindowSize);
    if ((!congested) && (acked > 0) && (numResends <= 0)) {
      if (newWindowSize < con.getLastCongestionSeenAt() / 2) {
        int factor=con.getOptions().getSlowStartGrowthRateFactor();
        if (factor <= 1) {
          if (newWindowSize >= MAX_SLOW_START_WINDOW)           newWindowSize++;
 else           newWindowSize=Math.min(MAX_SLOW_START_WINDOW,newWindowSize + acked);
        }
 else         if (acked < factor)         newWindowSize++;
 else         newWindowSize+=acked / factor;
        if (_log.shouldLog(Log.DEBUG))         _log.debug("slow start acks = " + acked + " for "+ con);
      }
 else {
        int shouldIncrement=_context.random().nextInt(con.getOptions().getCongestionAvoidanceGrowthRateFactor() * newWindowSize);
        if (shouldIncrement < acked)         newWindowSize++;
        if (_log.shouldLog(Log.DEBUG))         _log.debug("cong. avoid acks = " + acked + " for "+ con);
      }
    }
 else {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("No change to window: " + con.getOptions().getWindowSize() + " congested? "+ congested+ " acked: "+ acked+ " resends: "+ numResends);
    }
    if (newWindowSize <= 0)     newWindowSize=1;
    con.getOptions().setWindowSize(newWindowSize);
    con.setCongestionWindowEnd(newWindowSize + lowest);
    if (_log.shouldLog(Log.INFO))     _log.info("New window size " + newWindowSize + "/"+ oldWindow+ "/"+ con.getOptions().getWindowSize()+ " congestionSeenAt: "+ con.getLastCongestionSeenAt()+ " (#resends: "+ numResends+ ") for "+ con);
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("No change to window: " + con.getOptions().getWindowSize() + " highestAckedThrough: "+ lowest+ " congestionWindowEnd: "+ con.getCongestionWindowEnd()+ " acked: "+ acked+ " unacked: "+ con.getUnackedPacketsSent());
  }
  con.windowAdjusted();
  return congested;
}
