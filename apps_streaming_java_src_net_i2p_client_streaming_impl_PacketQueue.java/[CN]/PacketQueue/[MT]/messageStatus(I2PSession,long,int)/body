{
  if (_dead)   return;
  Long id=Long.valueOf(msgId);
  Connection con=_messageStatusMap.get(id);
  if (con == null) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Rcvd status " + status + " for msg "+ msgId+ " on unknown connection");
    return;
  }
switch (status) {
case MessageStatusMessage.STATUS_SEND_BEST_EFFORT_FAILURE:
case MessageStatusMessage.STATUS_SEND_GUARANTEED_FAILURE:
case MessageStatusMessage.STATUS_SEND_FAILURE_NO_TUNNELS:
    if (_log.shouldLog(Log.WARN))     _log.warn("Rcvd soft failure status " + status + " for msg "+ msgId+ " on "+ con);
  _messageStatusMap.remove(id);
break;
case MessageStatusMessage.STATUS_SEND_FAILURE_LOCAL:
case MessageStatusMessage.STATUS_SEND_FAILURE_ROUTER:
case MessageStatusMessage.STATUS_SEND_FAILURE_NETWORK:
case MessageStatusMessage.STATUS_SEND_FAILURE_BAD_SESSION:
case MessageStatusMessage.STATUS_SEND_FAILURE_BAD_MESSAGE:
case MessageStatusMessage.STATUS_SEND_FAILURE_BAD_OPTIONS:
case MessageStatusMessage.STATUS_SEND_FAILURE_OVERFLOW:
case MessageStatusMessage.STATUS_SEND_FAILURE_EXPIRED:
case MessageStatusMessage.STATUS_SEND_FAILURE_LOCAL_LEASESET:
case MessageStatusMessage.STATUS_SEND_FAILURE_UNSUPPORTED_ENCRYPTION:
case MessageStatusMessage.STATUS_SEND_FAILURE_DESTINATION:
case MessageStatusMessage.STATUS_SEND_FAILURE_BAD_LEASESET:
case MessageStatusMessage.STATUS_SEND_FAILURE_EXPIRED_LEASESET:
case MessageStatusMessage.STATUS_SEND_FAILURE_NO_LEASESET:
case SendMessageStatusListener.STATUS_CANCELLED:
if (con.getHighestAckedThrough() >= 0) {
if (_log.shouldLog(Log.WARN)) _log.warn("Rcvd hard failure but already connected, status " + status + " for msg "+ msgId+ " on "+ con);
}
 else if (!con.getIsConnected()) {
if (_log.shouldLog(Log.WARN)) _log.warn("Rcvd hard failure but already closed, status " + status + " for msg "+ msgId+ " on "+ con);
}
 else {
if (_log.shouldLog(Log.WARN)) _log.warn("Rcvd hard failure status " + status + " for msg "+ msgId+ " on "+ con);
_messageStatusMap.remove(id);
IOException ioe=new I2PSocketException(status);
con.getOutputStream().streamErrorOccurred(ioe);
con.getInputStream().streamErrorOccurred(ioe);
con.setConnectionError("failure code " + status);
con.disconnect(false);
}
break;
case MessageStatusMessage.STATUS_SEND_BEST_EFFORT_SUCCESS:
case MessageStatusMessage.STATUS_SEND_GUARANTEED_SUCCESS:
case MessageStatusMessage.STATUS_SEND_SUCCESS_LOCAL:
if (_log.shouldLog(Log.INFO)) _log.info("Rcvd success status " + status + " for msg "+ msgId+ " on "+ con);
_messageStatusMap.remove(id);
break;
case MessageStatusMessage.STATUS_SEND_ACCEPTED:
if (_log.shouldLog(Log.INFO)) _log.info("Rcvd accept status " + status + " for msg "+ msgId+ " on "+ con);
break;
default :
if (_log.shouldLog(Log.WARN)) _log.warn("Rcvd unknown status " + status + " for msg "+ msgId+ " on "+ con);
_messageStatusMap.remove(id);
break;
}
}
