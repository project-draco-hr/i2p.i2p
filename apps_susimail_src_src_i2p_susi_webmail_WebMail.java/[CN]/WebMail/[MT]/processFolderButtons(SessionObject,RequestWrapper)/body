{
  String str=request.getParameter(PAGESIZE);
  if (str != null && str.length() > 0) {
    try {
      int pageSize=Math.min(100,Math.max(5,Integer.parseInt(str)));
      int oldPageSize=sessionObject.folder.getPageSize();
      if (pageSize != oldPageSize)       sessionObject.folder.setPageSize(pageSize);
    }
 catch (    NumberFormatException nfe) {
      sessionObject.error+=_("Invalid pagesize number, resetting to default value.") + "<br>";
    }
  }
  if (buttonPressed(request,PREVPAGE)) {
    sessionObject.pageChanged=true;
    sessionObject.folder.previousPage();
  }
 else   if (buttonPressed(request,NEXTPAGE)) {
    sessionObject.pageChanged=true;
    sessionObject.folder.nextPage();
  }
 else   if (buttonPressed(request,FIRSTPAGE)) {
    sessionObject.pageChanged=true;
    sessionObject.folder.firstPage();
  }
 else   if (buttonPressed(request,LASTPAGE)) {
    sessionObject.pageChanged=true;
    sessionObject.folder.lastPage();
  }
 else   if (buttonPressed(request,DELETE)) {
    int m=getCheckedMessage(request);
    if (m != -1)     sessionObject.reallyDelete=true;
 else     sessionObject.error+=_("No messages marked for deletion.") + "<br>";
  }
 else {
    if (buttonPressed(request,REALLYDELETE)) {
      List<String> toDelete=new ArrayList<String>();
      for (Enumeration<String> e=request.getParameterNames(); e.hasMoreElements(); ) {
        String parameter=e.nextElement();
        if (parameter.startsWith("check") && request.getParameter(parameter).equals("1")) {
          String number=parameter.substring(5);
          try {
            int n=Integer.parseInt(number);
            String uidl=sessionObject.folder.getElementAtPosXonCurrentPage(n);
            if (uidl != null)             toDelete.add(uidl);
          }
 catch (          NumberFormatException nfe) {
          }
        }
      }
      int numberDeleted=toDelete.size();
      if (numberDeleted > 0) {
        sessionObject.mailCache.delete(toDelete);
        sessionObject.folder.removeElements(toDelete);
        sessionObject.pageChanged=true;
        sessionObject.info+=ngettext("1 message deleted.","{0} messages deleted.",numberDeleted);
      }
    }
    sessionObject.reallyDelete=false;
  }
  sessionObject.markAll=buttonPressed(request,MARKALL);
  sessionObject.clear=buttonPressed(request,CLEAR);
  sessionObject.invert=buttonPressed(request,INVERT);
  processSortingButton(sessionObject,request,SORT_ID);
  processSortingButton(sessionObject,request,SORT_SENDER);
  processSortingButton(sessionObject,request,SORT_SUBJECT);
  processSortingButton(sessionObject,request,SORT_DATE);
  processSortingButton(sessionObject,request,SORT_SIZE);
}
