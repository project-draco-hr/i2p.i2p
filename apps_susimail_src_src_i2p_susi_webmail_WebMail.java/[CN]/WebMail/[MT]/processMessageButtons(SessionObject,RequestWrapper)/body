{
  if (buttonPressed(request,PREV)) {
    String uidl=(String)sessionObject.folder.getPreviousElement(sessionObject.showUIDL);
    if (uidl != null)     sessionObject.showUIDL=uidl;
  }
  if (buttonPressed(request,NEXT)) {
    String uidl=(String)sessionObject.folder.getNextElement(sessionObject.showUIDL);
    if (uidl != null)     sessionObject.showUIDL=uidl;
  }
  sessionObject.reallyDelete=buttonPressed(request,DELETE);
  if (buttonPressed(request,REALLYDELETE)) {
    String nextUIDL=(String)sessionObject.folder.getNextElement(sessionObject.showUIDL);
    if (nextUIDL == null) {
      nextUIDL=(String)sessionObject.folder.getPreviousElement(sessionObject.showUIDL);
      if (nextUIDL == null)       sessionObject.state=STATE_LIST;
    }
    sessionObject.mailbox.delete(sessionObject.showUIDL);
    sessionObject.mailbox.performDelete();
    sessionObject.folder.setElements(sessionObject.mailbox.getUIDLs());
    sessionObject.showUIDL=nextUIDL;
  }
  String str=request.getParameter(DOWNLOAD);
  if (str != null) {
    try {
      int hashCode=Integer.parseInt(str);
      Mail mail=sessionObject.mailCache.getMail(sessionObject.showUIDL,MailCache.FETCH_ALL);
      MailPart part=getMailPartFromHashCode(mail.part,hashCode);
      if (part != null)       sessionObject.showAttachment=part;
    }
 catch (    NumberFormatException nfe) {
      sessionObject.error+=_("Error parsing download parameter.");
    }
  }
}
