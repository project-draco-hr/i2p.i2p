{
  String theme=Config.getProperty(CONFIG_THEME,DEFAULT_THEME);
  I2PAppContext ctx=I2PAppContext.getGlobalContext();
  boolean universalTheming=ctx.getBooleanProperty(RC_PROP_UNIVERSAL_THEMING);
  if (universalTheming) {
    theme=ctx.getProperty(RC_PROP_THEME,DEFAULT_THEME);
    String[] themes=getThemes();
    boolean themeExists=false;
    for (int i=0; i < themes.length; i++) {
      if (themes[i].equals(theme))       themeExists=true;
    }
    if (!themeExists) {
      theme=DEFAULT_THEME;
    }
  }
  boolean forceMobileConsole=ctx.getBooleanProperty(RC_PROP_FORCE_MOBILE_CONSOLE);
  boolean isMobile=(forceMobileConsole || isMobile(httpRequest.getHeader("User-Agent")));
  httpRequest.setCharacterEncoding("UTF-8");
  response.setCharacterEncoding("UTF-8");
  response.setHeader("X-Frame-Options","SAMEORIGIN");
  response.setHeader("Content-Security-Policy","default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'");
  response.setHeader("X-XSS-Protection","1; mode=block");
  response.setHeader("X-Content-Type-Options","nosniff");
  RequestWrapper request=new RequestWrapper(httpRequest);
  SessionObject sessionObject=null;
  String subtitle="";
  HttpSession httpSession=request.getSession(true);
  sessionObject=getSessionObject(httpSession);
synchronized (sessionObject) {
    sessionObject.error="";
    sessionObject.info="";
    sessionObject.pageChanged=false;
    sessionObject.themePath="/themes/susimail/" + theme + '/';
    sessionObject.imgPath=sessionObject.themePath + "images/";
    sessionObject.isMobile=isMobile;
    if (sessionObject.state == STATE_NEW)     processComposeButtons(sessionObject,request);
    int oldState=sessionObject.state;
    processStateChangeButtons(sessionObject,request,isPOST);
    if (isPOST)     processConfigButtons(sessionObject,request);
    int newState=sessionObject.state;
    if (oldState != newState)     Debug.debug(Debug.DEBUG,"STATE CHANGE from " + oldState + " to "+ newState);
    if (sessionObject.state != STATE_AUTH) {
      if (isPOST)       processGenericButtons(sessionObject,request);
    }
    if (sessionObject.state == STATE_LIST) {
      if (isPOST)       processFolderButtons(sessionObject,request);
      processSortingButtons(sessionObject,request);
      for (Iterator<String> it=sessionObject.folder.currentPageIterator(); it != null && it.hasNext(); ) {
        String uidl=it.next();
        Mail mail=sessionObject.mailCache.getMail(uidl,MailCache.FetchMode.HEADER);
        if (mail != null && mail.error.length() > 0) {
          sessionObject.error+=mail.error;
          mail.error="";
        }
      }
    }
    if (sessionObject.state == STATE_SHOW) {
      if (isPOST)       processMessageButtons(sessionObject,request);
      if (processDownloadLink(sessionObject,request,response)) {
        return;
      }
      if (processSaveAsLink(sessionObject,request,response)) {
        return;
      }
      if (sessionObject.showUIDL != null) {
        Mail mail=sessionObject.mailCache.getMail(sessionObject.showUIDL,MailCache.FetchMode.ALL);
        if (mail != null && mail.error.length() > 0) {
          sessionObject.error+=mail.error;
          mail.error="";
        }
      }
    }
    if (sessionObject.state == STATE_LIST) {
      String[] uidls=sessionObject.mailCache.getUIDLs();
      if (uidls != null) {
        sessionObject.folder.setElements(uidls);
      }
    }
    PrintWriter out=response.getWriter();
    if (sessionObject.state == STATE_AUTH)     subtitle=_t("Login");
 else     if (sessionObject.state == STATE_LIST) {
      subtitle=ngettext("1 Message","{0} Messages",sessionObject.folder.getSize());
    }
 else     if (sessionObject.state == STATE_SHOW) {
      Mail mail=sessionObject.mailCache.getMail(sessionObject.showUIDL,MailCache.FetchMode.HEADER);
      if (mail != null && mail.shortSubject != null)       subtitle=mail.shortSubject;
 else       subtitle=_t("Show Message");
    }
 else     if (sessionObject.state == STATE_NEW) {
      subtitle=_t("New Message");
    }
 else     if (sessionObject.state == STATE_CONFIG) {
      subtitle=_t("Configuration");
    }
    response.setContentType("text/html");
    out.println("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n" + "<head>\n" + "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n"+ "<title>" + _t("SusiMail") + " - "+ subtitle+ "</title>\n"+ "<link rel=\"stylesheet\" type=\"text/css\" href=\""+ sessionObject.themePath+ "susimail.css\">\n");
    if (sessionObject.isMobile) {
      out.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes\" />\n" + "<link rel=\"stylesheet\" type=\"text/css\" href=\"" + sessionObject.themePath + "mobile.css\" />\n");
    }
    if (sessionObject.state != STATE_AUTH)     out.println("<link rel=\"stylesheet\" href=\"/susimail/css/print.css\" type=\"text/css\" media=\"print\" />");
    if (sessionObject.state == STATE_NEW) {
      out.println("<script type=\"text/javascript\">\n" + "window.onbeforeunload = function () {" + "return \"" + _t("Message has not been sent. Do you want to discard it?") + "\";"+ "};\n"+ "</script>");
      out.println("<script src=\"/susimail/js/compose.js\" type=\"text/javascript\"></script>");
    }
 else     if (sessionObject.state == STATE_LIST) {
      out.println("<script src=\"/susimail/js/folder.js\" type=\"text/javascript\"></script>");
    }
    out.print("</head>\n<body" + (sessionObject.state == STATE_LIST ? " onload=\"deleteboxclicked()\">" : ">"));
    out.println("<div class=\"page\"><div class=\"header\"><img class=\"header\" src=\"" + sessionObject.imgPath + "susimail.png\" alt=\"Susimail\"></div>\n"+ "<form method=\"POST\" enctype=\"multipart/form-data\" action=\""+ myself+ "\" accept-charset=\"UTF-8\">");
    if (sessionObject.error != null && sessionObject.error.length() > 0) {
      out.println("<p class=\"error\">" + quoteHTML(sessionObject.error).replace("\n","<br>") + "</p>");
    }
    if (sessionObject.info != null && sessionObject.info.length() > 0) {
      out.println("<p class=\"info\"><b>" + quoteHTML(sessionObject.info).replace("\n","<br>") + "</b></p>");
    }
    if (sessionObject.state == STATE_AUTH)     showLogin(out);
 else     if (sessionObject.state == STATE_LIST)     showFolder(out,sessionObject,request);
 else     if (sessionObject.state == STATE_SHOW)     showMessage(out,sessionObject);
 else     if (sessionObject.state == STATE_NEW)     showCompose(out,sessionObject,request);
 else     if (sessionObject.state == STATE_CONFIG)     showConfig(out,sessionObject);
    out.println("</form><div class=\"footer\"><hr><p class=\"footer\">susimail &copy; 2004-2005 susi</p></div></div></body>\n</html>");
    out.flush();
  }
}
