{
  boolean shown=false;
  if (part != null) {
    ReadBuffer content=part.buffer;
    if (part.encoding != null) {
      try {
        content=part.decode(2);
      }
 catch (      DecodingException e) {
        sessionObject.error+=_t("Error decoding content: {0}",e.getMessage()) + '\n';
        content=null;
      }
    }
    if (content == null)     return false;
    if (isRaw) {
      try {
        if (part.type != null)         response.setContentType(part.type);
        response.setContentLength(content.length);
        response.getOutputStream().write(content.content,content.offset,content.length);
        shown=true;
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
 else {
      ZipOutputStream zip=null;
      try {
        zip=new ZipOutputStream(response.getOutputStream());
        String name;
        if (part.filename != null)         name=part.filename;
 else         if (part.name != null)         name=part.name;
 else         name="part" + part.hashCode();
        String name2=sanitizeFilename(name);
        response.setContentType("application/zip; name=\"" + name2 + ".zip\"");
        response.addHeader("Content-Disposition","attachment; filename=\"" + name2 + ".zip\"");
        ZipEntry entry=new ZipEntry(name);
        zip.putNextEntry(entry);
        zip.write(content.content,content.offset,content.length);
        zip.closeEntry();
        zip.finish();
        shown=true;
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
 finally {
        if (zip != null)         try {
          zip.close();
        }
 catch (        IOException ioe) {
        }
      }
    }
  }
  return shown;
}
