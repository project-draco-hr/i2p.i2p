{
  String br=html ? "<br>\r\n" : "\r\n";
  if (html) {
    out.println("<!-- ");
    out.println("Debug: Mail Part headers follow");
    for (int i=0; i < mailPart.headerLines.length; i++) {
      out.println(mailPart.headerLines[i].replace("--","&mdash;"));
    }
    out.println("-->");
  }
  if (mailPart.multipart) {
    if (mailPart.type.equals("multipart/alternative")) {
      MailPart chosen=null;
      for (      MailPart subPart : mailPart.parts) {
        if (subPart.type != null && subPart.type.equals("text/plain"))         chosen=subPart;
      }
      if (chosen != null) {
        showPart(out,chosen,level + 1,html);
        return;
      }
    }
    for (    MailPart part : mailPart.parts) {
      showPart(out,part,level + 1,html);
    }
  }
 else   if (mailPart.message) {
    for (    MailPart part : mailPart.parts) {
      showPart(out,part,level + 1,html);
    }
  }
 else {
    boolean showBody=false;
    boolean prepareAttachment=false;
    String reason="";
    StringBuilder body=null;
    String ident=quoteHTML((mailPart.description != null ? mailPart.description + ", " : "") + (mailPart.filename != null ? mailPart.filename + ", " : "") + (mailPart.name != null ? mailPart.name + ", " : "")+ (mailPart.type != null ? '(' + mailPart.type + ')' : _t("unknown")));
    if (level == 0 && mailPart.version == null) {
      showBody=true;
    }
    if (showBody == false && mailPart.type != null) {
      if (mailPart.type.equals("text/plain")) {
        showBody=true;
      }
 else       prepareAttachment=true;
    }
    if (showBody) {
      String charset=mailPart.charset;
      if (charset == null) {
        charset="US-ASCII";
        if (html)         reason+=_t("Warning: no charset found, fallback to US-ASCII.") + br;
      }
      try {
        ReadBuffer decoded=mailPart.decode(0);
        BufferedReader reader=new BufferedReader(new InputStreamReader(new ByteArrayInputStream(decoded.content,decoded.offset,decoded.length),charset));
        body=new StringBuilder();
        String line;
        while ((line=reader.readLine()) != null) {
          body.append(quoteHTML(line));
          body.append(br);
        }
      }
 catch (      UnsupportedEncodingException uee) {
        showBody=false;
        reason=_t("Charset \\''{0}\\'' not supported.",quoteHTML(mailPart.charset)) + br;
      }
catch (      IOException e1) {
        showBody=false;
        reason+=_t("Part ({0}) not shown, because of {1}",ident,e1.toString()) + br;
      }
    }
    if (html)     out.println("<tr class=\"mailbody\"><td colspan=\"2\" align=\"center\">");
    if (reason != null && reason.length() > 0) {
      if (html)       out.println("<p class=\"info\">");
      out.println(reason);
      if (html)       out.println("</p>");
    }
    if (showBody) {
      if (html)       out.println("<p class=\"mailbody\">");
      out.println(body.toString());
      if (html)       out.println("</p>");
    }
    if (prepareAttachment) {
      if (html) {
        out.println("<hr><p class=\"mailbody\">");
        String type=mailPart.type;
        if (type != null && type.startsWith("image/")) {
          out.println("<img src=\"" + myself + "?"+ RAW_ATTACHMENT+ "="+ mailPart.hashCode()+ "\">");
        }
 else         if (type != null && (type.startsWith("audio/") || type.equals("application/ogg") || type.startsWith("video/")|| type.equals("application/zip")|| type.equals("application/x-gtar")|| type.equals("application/compress")|| type.equals("application/gzip")|| type.equals("application/x-7z-compressed")|| type.equals("application/x-rar-compressed")|| type.equals("application/x-tar")|| type.equals("application/x-bzip2"))) {
          out.println("<a href=\"" + myself + "?"+ RAW_ATTACHMENT+ "="+ mailPart.hashCode()+ "\">"+ _t("Download attachment {0}",ident)+ "</a>");
        }
 else {
          out.println("<a target=\"_blank\" href=\"" + myself + "?"+ DOWNLOAD+ "="+ mailPart.hashCode()+ "\">"+ _t("Download attachment {0}",ident)+ "</a>"+ " ("+ _t("File is packed into a zipfile for security reasons.")+ ')');
        }
        out.println("</p>");
      }
 else {
        out.println(_t("Attachment ({0}).",ident));
      }
    }
    if (html)     out.println("</td></tr>");
  }
}
