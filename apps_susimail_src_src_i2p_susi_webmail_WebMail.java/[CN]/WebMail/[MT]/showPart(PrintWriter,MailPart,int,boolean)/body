{
  String br=html ? "<br>\r\n" : "\r\n";
  if (html) {
    out.println("<!-- ");
    for (int i=0; i < mailPart.headerLines.length; i++) {
      out.println(mailPart.headerLines[i].replace("--","&mdash;"));
    }
    out.println("-->");
  }
  if (mailPart.multipart) {
    if (mailPart.type.compareTo("multipart/alternative") == 0) {
      MailPart chosen=null;
      for (      MailPart subPart : mailPart.parts) {
        if (subPart.type != null && subPart.type.compareTo("text/plain") == 0)         chosen=subPart;
      }
      if (chosen != null) {
        showPart(out,chosen,level + 1,html);
        return;
      }
    }
    for (    MailPart part : mailPart.parts) {
      showPart(out,part,level + 1,html);
    }
  }
 else   if (mailPart.message) {
    for (    MailPart part : mailPart.parts) {
      showPart(out,part,level + 1,html);
    }
  }
 else {
    boolean showBody=false;
    boolean prepareAttachment=false;
    String reason="";
    StringBuilder body=null;
    String ident=quoteHTML((mailPart.description != null ? mailPart.description + ", " : "") + (mailPart.filename != null ? mailPart.filename + ", " : "") + (mailPart.name != null ? mailPart.name + ", " : "")+ (mailPart.type != null ? '(' + mailPart.type + ')' : _("unknown")));
    if (level == 0 && mailPart.version == null) {
      showBody=true;
    }
    if (showBody == false && mailPart.type != null) {
      if (mailPart.type.compareTo("text/plain") == 0) {
        showBody=true;
      }
 else       prepareAttachment=true;
    }
    if (showBody) {
      String encoding=mailPart.encoding;
      if (encoding == null) {
        encoding="7bit";
        reason+=_("Warning: no transfer encoding found, fallback to 7bit.") + br;
      }
      Encoding e=EncodingFactory.getEncoding(encoding);
      if (e == null) {
        showBody=false;
        reason+=_("No encoder found for encoding \\''{0}\\''.",quoteHTML(encoding));
      }
 else {
        String charset=mailPart.charset;
        if (charset == null) {
          charset="US-ASCII";
          reason+=_("Warning: no charset found, fallback to US-ASCII.") + br;
        }
        try {
          ReadBuffer decoded=e.decode(mailPart.buffer.content,mailPart.beginBody,mailPart.end - mailPart.beginBody);
          BufferedReader reader=new BufferedReader(new InputStreamReader(new ByteArrayInputStream(decoded.content,decoded.offset,decoded.length),charset));
          body=new StringBuilder();
          String line;
          while ((line=reader.readLine()) != null) {
            body.append(quoteHTML(line));
            body.append(br);
          }
        }
 catch (        UnsupportedEncodingException uee) {
          showBody=false;
          reason=_("Charset \\''{0}\\'' not supported.",quoteHTML(mailPart.charset)) + br;
        }
catch (        Exception e1) {
          showBody=false;
          reason+=_("Part ({0}) not shown, because of {1}",ident,e1.getClass().getName()) + br;
        }
      }
    }
    if (html)     out.println("<tr class=\"mailbody\"><td colspan=\"2\" align=\"center\">");
    if (reason != null && reason.length() > 0) {
      if (html)       out.println("<p class=\"info\">");
      out.println(reason);
      if (html)       out.println("</p>");
    }
    if (showBody) {
      if (html)       out.println("<p class=\"mailbody\">");
      out.println(body.toString());
      if (html)       out.println("</p>");
    }
    if (prepareAttachment) {
      if (html) {
        out.println("<hr><p class=\"mailbody\">");
        out.println("<a target=\"_blank\" href=\"" + myself + "?"+ DOWNLOAD+ "="+ mailPart.hashCode()+ "\">"+ _("Download attachment {0}",ident)+ "</a>"+ " ("+ _("File is packed into a zipfile for security reasons.")+ ')');
        out.println("</p>");
      }
 else {
        out.println(_("Attachment ({0}).",ident));
      }
    }
    if (html)     out.println("</td></tr>");
  }
}
