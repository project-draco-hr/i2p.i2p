{
  Debug.debug(Debug.DEBUG,"connect()");
  if (Debug.getLevel() == Debug.DEBUG)   (new Exception("I did it")).printStackTrace();
  clear();
  if (socket != null && socket.isConnected())   close();
  try {
    socket=new Socket(host,port);
  }
 catch (  UnknownHostException e) {
    lastError=e.toString();
    return;
  }
catch (  IOException e) {
    Debug.debug(Debug.DEBUG,"Error connecting: " + e);
    lastError=e.toString();
    return;
  }
  if (socket != null) {
    try {
      lastError="";
      socket.setSoTimeout(120 * 1000);
      boolean ok=doHandshake();
      if (ok) {
        List<SendRecv> cmds=new ArrayList<SendRecv>(4);
        cmds.add(new SendRecv("USER " + user,Mode.A1));
        cmds.add(new SendRecv("PASS " + pass,Mode.A1));
        socket.setSoTimeout(60 * 1000);
        ok=sendCmds(cmds);
      }
      if (ok) {
        connected=true;
        List<SendRecv> cmds=new ArrayList<SendRecv>(4);
        SendRecv stat=new SendRecv("STAT",Mode.A1);
        cmds.add(stat);
        SendRecv uidl=new SendRecv("UIDL",Mode.LS);
        cmds.add(uidl);
        SendRecv list=new SendRecv("LIST",Mode.LS);
        cmds.add(list);
        socket.setSoTimeout(120 * 1000);
        ok=sendCmds(cmds);
        if (stat.result)         updateMailCount(stat.response);
 else         Debug.debug(Debug.DEBUG,"STAT failed");
        if (uidl.result)         updateUIDLs(uidl.ls);
 else         Debug.debug(Debug.DEBUG,"UIDL failed");
        if (list.result)         updateSizes(list.ls);
 else         Debug.debug(Debug.DEBUG,"LIST failed");
        socket.setSoTimeout(300 * 1000);
        if (ok && backgroundChecker == null && Boolean.parseBoolean(Config.getProperty(WebMail.CONFIG_BACKGROUND_CHECK)))         backgroundChecker=new BackgroundChecker(this);
        if (ok && idleCloser == null)         idleCloser=new IdleCloser(this);
      }
 else {
        if (lastError.equals(""))         lastError=_t("Error connecting to server");
        close();
      }
    }
 catch (    NumberFormatException e1) {
      lastError=_t("Error opening mailbox") + ": " + e1;
    }
catch (    IOException e1) {
      lastError=_t("Error opening mailbox") + ": " + e1.getLocalizedMessage();
    }
  }
}
