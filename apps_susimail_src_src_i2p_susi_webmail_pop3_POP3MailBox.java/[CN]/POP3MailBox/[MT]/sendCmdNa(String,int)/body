{
  Debug.debug(Debug.DEBUG,"sendCmdNa(" + cmd + ")");
  ReadBuffer readBuffer=null;
  long timeOut=60000;
  byte result[]=new byte[bufSize];
  int written=0;
  if (sendCmd1a(cmd)) {
    int offset=0;
    while (offset < read - 1 && buffer[offset] != '\r' && buffer[offset + 1] != '\n')     offset++;
    offset+=2;
    if (read - offset > result.length)     result=resizeArray(result,result.length + result.length);
    if (read - offset > 0)     copy(buffer,offset,read - offset,result,0);
    written=read - offset;
    boolean doRead=true;
    if (written >= 5 && result[written - 5] == '\r' && result[written - 4] == '\n' && result[written - 3] == '.' && result[written - 2] == '\r' && result[written - 1] == '\n') {
      written-=3;
      doRead=false;
    }
    InputStream input=socket.getInputStream();
    long startTime=System.currentTimeMillis();
    while (doRead) {
      int len=input.available();
      if (len == 0) {
        if (System.currentTimeMillis() - startTime > timeOut)         throw new IOException("Timeout while waiting on server response.");
        try {
          Thread.sleep(500);
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
 else {
        while (len > 0) {
          read=socket.getInputStream().read(buffer,0,len > buffer.length ? buffer.length : len);
          if (written + read > result.length)           result=resizeArray(result,result.length + result.length);
          copy(buffer,0,read,result,written);
          written+=read;
          if (result[written - 5] == '\r' && result[written - 4] == '\n' && result[written - 3] == '.' && result[written - 2] == '\r' && result[written - 1] == '\n') {
            written-=3;
            doRead=false;
          }
          len-=read;
        }
      }
    }
    readBuffer=new ReadBuffer();
    readBuffer.content=result;
    readBuffer.offset=0;
    readBuffer.length=written;
  }
 else {
    Debug.debug(Debug.DEBUG,"sendCmd1a returned false");
  }
  return readBuffer;
}
