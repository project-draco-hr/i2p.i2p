{
  File cfg=getConfigFile();
  Writer out=null;
  try {
    out=new OutputStreamWriter(new FileOutputStream(cfg),"UTF-8");
    if (registrationPassword != null)     out.write("syndie.registrationPassword=" + Base64.encode(_context.sha().calculateHash(DataHelper.getUTF8(registrationPassword.trim())).getData()) + "\n");
    if (remotePassword != null)     out.write("syndie.remotePassword=" + Base64.encode(_context.sha().calculateHash(DataHelper.getUTF8(remotePassword.trim())).getData()) + "\n");
    if (adminPass != null)     out.write("syndie.adminPassword=" + Base64.encode(_context.sha().calculateHash(DataHelper.getUTF8(adminPass.trim())).getData()) + "\n");
    if (defaultSelector != null)     out.write("syndie.defaultSelector=" + defaultSelector.trim() + "\n");
    if (defaultProxyHost != null)     out.write("syndie.defaultProxyHost=" + defaultProxyHost.trim() + "\n");
    if (defaultProxyPort > 0)     out.write("syndie.defaultProxyPort=" + defaultProxyPort + "\n");
    out.write("syndie.singleUser=" + isSingleUser + "\n");
    if (opts != null) {
      for (Iterator iter=opts.keySet().iterator(); iter.hasNext(); ) {
        String key=(String)iter.next();
        String val=opts.getProperty(key);
        out.write(key.trim() + "=" + val.trim()+ "\n");
      }
    }
    _archive.setDefaultSelector(defaultSelector);
  }
 catch (  IOException ioe) {
    _log.error("Error writing out the config",ioe);
  }
 finally {
    if (out != null)     try {
      out.close();
    }
 catch (    IOException ioe) {
    }
    readConfig();
  }
}
