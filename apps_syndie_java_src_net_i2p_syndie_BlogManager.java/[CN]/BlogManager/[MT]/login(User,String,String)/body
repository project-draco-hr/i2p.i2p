{
  if ((login == null) || (pass == null))   return "<span class=\"b_loginMsgErr\">Login not specified</span>";
  Hash userHash=_context.sha().calculateHash(DataHelper.getUTF8(login));
  Hash passHash=_context.sha().calculateHash(DataHelper.getUTF8(pass));
  File userFile=new File(_userDir,Base64.encode(userHash.getData()));
  if (_log.shouldLog(Log.INFO))   _log.info("Attempting to login to " + login + " w/ pass = "+ pass+ ": file = "+ userFile.getAbsolutePath()+ " passHash = "+ Base64.encode(passHash.getData()));
  if (userFile.exists()) {
    try {
      Properties props=loadUserProps(userFile);
      if (props == null)       throw new IOException("Error reading " + userFile);
      String rv=user.login(login,pass,props);
      if (User.LOGIN_OK.equals(rv))       _log.info("Login successful");
 else       _log.info("Login failed: [" + rv + "]");
      return rv;
    }
 catch (    IOException ioe) {
      _log.error("Error logging in",ioe);
      return "<span class=\"b_loginMsgErr\">Error logging in - corrupt userfile</span>";
    }
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info("User does not exist");
    return "<span class=\"b_loginMsgErr\">User does not exist</span>";
  }
}
