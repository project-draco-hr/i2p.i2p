{
  System.err.println("Register [" + login + "] pass ["+ password+ "] name ["+ blogName+ "] descr ["+ blogDescription+ "] contact ["+ contactURL+ "] regPass ["+ registrationPassword+ "]");
  String hashedRegistrationPassword=getRegistrationPasswordHash();
  if ((hashedRegistrationPassword != null) && (!isSingleUser())) {
    try {
      if (!hashedRegistrationPassword.equals(Base64.encode(_context.sha().calculateHash(registrationPassword.getBytes("UTF-8")).getData())))       return "<span class=\"b_regMsgErr\">Invalid registration password</span>";
    }
 catch (    UnsupportedEncodingException uee) {
      return "<span class=\"b_regMsgErr\">Error registering</span>";
    }
  }
  String userHash=Base64.encode(_context.sha().calculateHash(DataHelper.getUTF8(login)).getData());
  File userFile=new File(_userDir,userHash);
  if (userFile.exists()) {
    return "<span class=\"b_regMsgErr\">Cannot register the login " + login + ": it already exists</span>";
  }
 else {
    BlogInfo info=createBlog(blogName,blogDescription,contactURL,null);
    String hashedPassword=Base64.encode(_context.sha().calculateHash(DataHelper.getUTF8(password)).getData());
    FileOutputStream out=null;
    try {
      out=new FileOutputStream(userFile);
      BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(out,"UTF-8"));
      bw.write("password=" + hashedPassword + "\n");
      bw.write("blog=" + Base64.encode(info.getKey().calculateHash().getData()) + "\n");
      bw.write("lastid=-1\n");
      bw.write("lastmetaedition=0\n");
      bw.write("addressbook=userhosts-" + userHash + ".txt\n");
      bw.write("showimages=false\n");
      bw.write("showexpanded=false\n");
      bw.flush();
    }
 catch (    IOException ioe) {
      _log.error("Error registering the user",ioe);
      return "<span class=\"b_regMsgErr\">Internal error registering - " + ioe.getMessage() + "</span>";
    }
 finally {
      if (out != null)       try {
        out.close();
      }
 catch (      IOException ioe) {
      }
    }
    String loginResult=login(user,login,password);
    _archive.regenerateIndex();
    return loginResult;
  }
}
