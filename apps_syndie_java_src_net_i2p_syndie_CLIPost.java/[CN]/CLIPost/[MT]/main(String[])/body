{
  String rootDir=getArg(args,"syndieDir");
  String hashStr=getArg(args,"blog");
  String smlFile=getArg(args,"sml");
  if ((rootDir == null) || (hashStr == null) || (smlFile == null)) {
    System.err.println(USAGE);
    return;
  }
  String url=getArg(args,"importurl");
  String entryIdDef=getArg(args,"entryId");
  List attachmentFilenames=new ArrayList();
  List attachmentNames=new ArrayList();
  List attachmentDescriptions=new ArrayList();
  List attachmentMimeTypes=new ArrayList();
  while (true) {
    String file=getAttachmentParam(args,attachmentFilenames.size(),0);
    String name=getAttachmentParam(args,attachmentFilenames.size(),1);
    String desc=getAttachmentParam(args,attachmentFilenames.size(),2);
    String type=getAttachmentParam(args,attachmentFilenames.size(),3);
    if ((file != null) && (name != null) && (desc != null)&& (type != null)) {
      attachmentFilenames.add(file);
      attachmentNames.add(name);
      attachmentDescriptions.add(desc);
      attachmentMimeTypes.add(type);
    }
 else {
      break;
    }
  }
  List tags=readTags(smlFile);
  String entryKeyDef=null;
  String loc=getArg(args,"storelocal");
  boolean storeLocal=false;
  if (loc != null)   storeLocal=Boolean.valueOf(loc).booleanValue();
  if (!storeLocal && "none".equalsIgnoreCase(url)) {
    System.err.println("You need to post it somewhere, so either specify \"--storelocal true\"");
    System.err.println("or don't specify \"--importurl none\"");
    return;
  }
  I2PAppContext ctx=I2PAppContext.getGlobalContext();
  BlogManager mgr=new BlogManager(ctx,rootDir,false);
  EntryContainer entry=CLI.createEntry(ctx,mgr,hashStr,tags,entryIdDef,entryKeyDef,smlFile,storeLocal,attachmentFilenames,attachmentNames,attachmentDescriptions,attachmentMimeTypes);
  if (entry != null) {
    if (storeLocal)     mgr.getArchive().regenerateIndex();
    if (!("none".equalsIgnoreCase(url))) {
      if ((url == null) || (url.trim().length() <= 0))       url="http://localhost:7657/syndie/import.jsp";
      BlogInfo info=mgr.getArchive().getBlogInfo(entry.getURI().getKeyHash());
      File fMeta=null;
      File fData=null;
      try {
        fMeta=File.createTempFile("cli",".snm",mgr.getTempDir());
        fData=File.createTempFile("cli",".snd",mgr.getTempDir());
        FileOutputStream out=new FileOutputStream(fMeta);
        info.write(out);
        out.close();
        out=new FileOutputStream(fData);
        entry.write(out,true);
        out.close();
      }
 catch (      IOException ioe) {
        System.err.println("Error writing temp files: " + ioe.getMessage());
        return;
      }
      Map uploads=new HashMap(2);
      uploads.put("blogmeta0",fMeta);
      uploads.put("blogpost0",fData);
      String proxyHost=getArg(args,"proxyhost");
      String proxyPortStr=getArg(args,"proxyport");
      int proxyPort=-1;
      if (proxyPortStr != null)       try {
        proxyPort=Integer.parseInt(proxyPortStr);
      }
 catch (      NumberFormatException nfe) {
      }
      OnCompletion job=new OnCompletion();
      EepPost post=new EepPost();
      post.postFiles(url,(proxyPort > 0 ? proxyHost : null),proxyPort,uploads,job);
      boolean posted=job.waitForCompletion(30 * 1000);
      if (posted)       System.out.println("Posted successfully: " + entry.getURI().toString());
 else       System.out.println("Posting failed");
    }
 else     if (storeLocal) {
      System.out.println("Store local successfully: " + entry.getURI().toString());
    }
 else {
    }
  }
 else {
    System.err.println("Error creating the blog entry");
  }
}
