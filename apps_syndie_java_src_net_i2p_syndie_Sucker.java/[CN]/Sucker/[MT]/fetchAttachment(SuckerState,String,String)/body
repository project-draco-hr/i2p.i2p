{
  link=link.replaceAll("&amp;","&");
  infoLog("Fetch attachment from: " + link);
  File fetched;
  if (state.pushToSyndie) {
    try {
      fetched=File.createTempFile("sucker",".attachment");
      fetched.deleteOnExit();
    }
 catch (    IOException e) {
      e.printStackTrace();
      return;
    }
    state.tempFiles.add(fetched);
  }
 else {
    String attachmentPath=state.messagePath + "." + state.attachmentCounter;
    fetched=new File(attachmentPath);
  }
  int numRetries=2;
  EepGet get=new EepGet(I2PAppContext.getGlobalContext(),state.shouldProxy,state.proxyHost,state.proxyPortNum,numRetries,fetched.getAbsolutePath(),link);
  SuckerFetchListener lsnr=new SuckerFetchListener();
  get.addStatusListener(lsnr);
  get.fetch();
  boolean ok=lsnr.waitForSuccess();
  if (!ok) {
    debugLog("Unable to retrieve the url [" + link + "] after "+ numRetries+ " tries.");
    fetched.delete();
    return;
  }
  state.tempFiles.add(fetched);
  String filename=EepGet.suggestName(link);
  String contentType=suggestedMimeType;
  if (contentType == null)   contentType=get.getContentType();
  if (contentType == null)   contentType="text/plain";
  debugLog("successful fetch of filename " + filename + " suggested mime type ["+ suggestedMimeType+ "], fetched mime type ["+ get.getContentType()+ "], final type ["+ contentType+ "]");
  if (state.fileNames == null)   state.fileNames=new ArrayList();
  if (state.fileTypes == null)   state.fileTypes=new ArrayList();
  if (state.fileStreams == null)   state.fileStreams=new ArrayList();
  state.fileNames.add(filename);
  state.fileTypes.add(contentType);
  try {
    state.fileStreams.add(new FileInputStream(fetched));
  }
 catch (  FileNotFoundException e) {
    e.printStackTrace();
  }
  state.attachmentCounter++;
}
