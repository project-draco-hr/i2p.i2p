{
  final String ignoreTags[]={"span","tr","td","th","div","input","ul"};
  htmlTag=htmlTag.replaceAll("\\[","&#91;").replaceAll("\\]","&#93;");
  String ret="";
  String htmlTagLowerCase=htmlTag.toLowerCase();
  if (htmlTagLowerCase.startsWith("<img")) {
    debugLog("Found image tag: " + htmlTag);
    int a, b;
    a=htmlTagLowerCase.indexOf("src=\"") + 5;
    b=a + 1;
    while (htmlTagLowerCase.charAt(b) != '\"')     b++;
    String imageLink=htmlTag.substring(a,b);
    if (state.pendingEndLink) {
      ret="[/link]";
      state.pendingEndLink=false;
    }
    ret+="[img attachment=\"" + "" + state.attachmentCounter + "\"]";
    a=htmlTagLowerCase.indexOf("alt=\"") + 5;
    if (a >= 5) {
      b=a;
      if (htmlTagLowerCase.charAt(b) != '\"') {
        while (htmlTagLowerCase.charAt(b) != '\"')         b++;
        String altText=htmlTag.substring(a,b);
        ret+=altText;
      }
    }
    ret+="[/img]";
    if (!imageLink.startsWith("http://"))     imageLink=state.baseUrl + "/" + imageLink;
    fetchAttachment(state,imageLink);
    debugLog("Converted to: " + ret);
    return ret;
  }
  if (htmlTagLowerCase.startsWith("<a ")) {
    debugLog("Found link tag: " + htmlTag);
    int a, b;
    a=htmlTagLowerCase.indexOf("href=\"") + 6;
    b=a + 1;
    while ((b < htmlTagLowerCase.length()) && (htmlTagLowerCase.charAt(b) != '\"'))     b++;
    if (b >= htmlTagLowerCase.length())     return null;
    String link=htmlTag.substring(a,b);
    if (!link.startsWith("http://"))     link=state.baseUrl + "/" + link;
    String schema="web";
    ret+="[link schema=\"" + schema + "\" location=\""+ link+ "\"]";
    if (htmlTagLowerCase.endsWith("/>"))     ret+="[/link]";
 else     state.pendingEndLink=true;
    debugLog("Converted to: " + ret);
    return ret;
  }
  if ("</a>".equals(htmlTagLowerCase)) {
    if (state.pendingEndLink) {
      state.pendingEndLink=false;
      return "[/link]";
    }
    return "";
  }
  if ("<b>".equals(htmlTagLowerCase))   return "[b]";
  if ("</b>".equals(htmlTagLowerCase))   return "[/b]";
  if ("<i>".equals(htmlTagLowerCase))   return "[i]";
  if ("</i>".equals(htmlTagLowerCase))   return "[/i]";
  if ("<em>".equals(htmlTagLowerCase))   return "[i]";
  if ("</em>".equals(htmlTagLowerCase))   return "[/i]";
  if ("<strong>".equals(htmlTagLowerCase))   return "[b]";
  if ("</strong>".equals(htmlTagLowerCase))   return "[/b]";
  if (htmlTagLowerCase.startsWith("<br")) {
    state.stripNewlines=true;
    return "\n";
  }
  if ("<p>".equals(htmlTagLowerCase))   return "\n\n";
  if ("</p>".equals(htmlTagLowerCase))   return "";
  if ("<li>".equals(htmlTagLowerCase))   return "\n * ";
  if ("</li>".equals(htmlTagLowerCase))   return "";
  if ("</br>".equals(htmlTagLowerCase))   return "";
  if (htmlTagLowerCase.startsWith("<hr"))   return "";
  if ("</img>".equals(htmlTagLowerCase))   return "";
  if ("</font>".equals(htmlTagLowerCase))   return "";
  if ("<blockquote>".equals(htmlTagLowerCase))   return "[quote]";
  if ("</blockquote>".equals(htmlTagLowerCase))   return "[/quote]";
  if (htmlTagLowerCase.startsWith("<table") || "</table>".equals(htmlTagLowerCase))   return "[hr][/hr]";
  if (htmlTagLowerCase.startsWith("<font"))   return "";
  for (int i=0; i < ignoreTags.length; i++) {
    String openTag="<" + ignoreTags[i];
    String closeTag="</" + ignoreTags[i];
    if (htmlTagLowerCase.startsWith(openTag))     return "";
    if (htmlTagLowerCase.startsWith(closeTag))     return "";
  }
  return null;
}
