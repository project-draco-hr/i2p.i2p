{
  String subject;
  state.stripNewlines=false;
  try {
    String sml="";
    subject=e.getTitle();
    List cats=e.getCategories();
    Iterator iter=cats.iterator();
    String tags=state.feedTag;
    while (iter.hasNext()) {
      SyndCategory c=(SyndCategory)iter.next();
      debugLog("Name: " + c.getName());
      debugLog("uri:" + c.getTaxonomyUri());
      String tag=c.getName();
      tag=tag.replaceAll("[^a-zA-z.-_:]","_");
      tags+="\t" + state.feedTag + "."+ tag;
    }
    SyndContent content;
    List l=e.getContents();
    if (l != null) {
      iter=l.iterator();
      while (iter.hasNext()) {
        content=(SyndContent)iter.next();
        String c=content.getValue();
        debugLog("Content: " + c);
        sml+=htmlToSml(state,c);
        sml+="\n";
      }
    }
    List enclosures=e.getEnclosures();
    debugLog("Enclosures: " + enclosures.size());
    for (int i=0; i < enclosures.size(); i++) {
      SyndEnclosure enc=(SyndEnclosure)enclosures.get(i);
      String enclosureURL=enc.getUrl();
      if (enclosureURL != null) {
        if (!enclosureURL.startsWith("http://")) {
          if (enclosureURL.startsWith("/") || state.baseUrl.endsWith("/"))           enclosureURL=state.baseUrl + enclosureURL;
 else           enclosureURL=state.baseUrl + '/' + enclosureURL;
        }
        fetchAttachment(state,enclosureURL,enc.getType());
      }
    }
    String source=e.getLink();
    if (!source.startsWith("http://"))     source=state.baseUrl + source;
    sml+="[link schema=\"web\" location=\"" + source + "\"]source[/link]\n";
    if (state.pushToSyndie) {
      debugLog("user.blog: " + state.user.getBlogStr());
      debugLog("user.id: " + state.bm.getNextBlogEntry(state.user));
      debugLog("subject: " + subject);
      debugLog("tags: " + tags);
      debugLog("sml: " + sml);
      debugLog("");
      BlogURI uri=state.bm.createBlogEntry(state.user,false,subject,tags,null,sml,state.fileNames,state.fileStreams,state.fileTypes);
      if (uri == null) {
        errorLog("pushToSyndie failure.");
        return false;
      }
 else {
        state.entriesPosted.add(uri);
        infoLog("pushToSyndie success, uri: " + uri.toString());
      }
    }
 else {
      FileOutputStream fos;
      fos=new FileOutputStream(state.messagePath);
      sml=subject + "\nTags: " + tags+ "\n\n"+ sml;
      fos.write(sml.getBytes());
      if (state.pushScript != null) {
        if (!execPushScript(state,"" + state.messageNumber,time)) {
          errorLog("push script failed");
        }
 else {
          infoLog("push script success: nr " + state.messageNumber);
        }
      }
    }
    state.messageNumber++;
    deleteTempFiles(state);
    return true;
  }
 catch (  FileNotFoundException e1) {
    e1.printStackTrace();
  }
catch (  IOException e2) {
    e2.printStackTrace();
  }
  deleteTempFiles(state);
  return false;
}
