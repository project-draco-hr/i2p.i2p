{
  SyndFeed feed;
  try {
    File f=new File(outputDir);
    f.mkdirs();
    historyFile=new File(historyPath);
    if (!historyFile.exists())     historyFile.createNewFile();
    int messageNumber;
    File lastIdFile=new File(historyPath + ".lastId");
    if (!lastIdFile.exists())     lastIdFile.createNewFile();
    FileInputStream fis=new FileInputStream(lastIdFile);
    String number=readLine(fis);
    try {
      messageNumber=Integer.parseInt(number);
    }
 catch (    NumberFormatException e) {
      messageNumber=0;
    }
    SyndFeedInput input=new SyndFeedInput();
    shouldProxy=false;
    proxyPortNum=-1;
    if ((proxyHost != null) && (proxyPort != null)) {
      try {
        proxyPortNum=Integer.parseInt(proxyPort);
        if (proxyPortNum > 0)         shouldProxy=true;
      }
 catch (      NumberFormatException nfe) {
        nfe.printStackTrace();
      }
    }
    int numRetries=2;
    File fetched=File.createTempFile("sucker",".fetch");
    fetched.deleteOnExit();
    EepGet get=new EepGet(I2PAppContext.getGlobalContext(),shouldProxy,proxyHost,proxyPortNum,numRetries,fetched.getAbsolutePath(),urlToLoad);
    SuckerFetchListener lsnr=new SuckerFetchListener();
    get.addStatusListener(lsnr);
    get.fetch();
    boolean ok=lsnr.waitForSuccess();
    if (!ok) {
      System.err.println("Unable to retrieve the url after " + numRetries + " tries.");
      return;
    }
    feed=input.build(new XmlReader(fetched));
    List entries=feed.getEntries();
    FileOutputStream hos=new FileOutputStream(historyFile,true);
    ListIterator iter=entries.listIterator();
    while (iter.hasNext()) {
      attachmentCounter=0;
      SyndEntry e=(SyndEntry)iter.next();
      String feedHash=sha1(urlToLoad);
      String itemHash=sha1(e.getTitle() + e.getDescription());
      Date d=e.getPublishedDate();
      String time;
      if (d != null)       time="" + d.getTime();
 else       time="" + new Date().getTime();
      String outputFileName=outputDir + "/" + messageNumber;
      String messageId=feedHash + ":" + itemHash+ ":"+ time+ ":"+ outputFileName;
      if (!existsInHistory(messageId)) {
        System.out.println("new: " + messageId);
        if (convertToSml(e,"" + messageNumber)) {
          if (pushScript != null) {
            if (!execPushScript("" + messageNumber,time)) {
              System.out.println("################## push failed");
            }
 else {
              System.out.println("push success");
              hos.write(messageId.getBytes());
              hos.write("\n".getBytes());
            }
          }
        }
        messageNumber++;
      }
    }
    FileOutputStream fos=new FileOutputStream(lastIdFile);
    fos.write(("" + messageNumber).getBytes());
  }
 catch (  MalformedURLException e) {
    e.printStackTrace();
  }
catch (  IllegalArgumentException e) {
    e.printStackTrace();
  }
catch (  FeedException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
  System.out.println("Done.");
}
