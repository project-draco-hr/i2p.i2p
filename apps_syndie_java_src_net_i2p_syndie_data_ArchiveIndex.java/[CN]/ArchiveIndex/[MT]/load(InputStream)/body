{
  _allBlogs=0;
  _allEntries=0;
  _newBlogs=0;
  _newEntries=0;
  _newSize=0;
  _totalSize=0;
  _version=null;
  _blogs=new ArrayList();
  _newestBlogs=new ArrayList();
  _newestEntries=new ArrayList();
  _headers=new Properties();
  BufferedReader in=new BufferedReader(new InputStreamReader(index,"UTF-8"));
  String line=null;
  line=in.readLine();
  if (line == null)   return;
  if (!line.startsWith("SyndieVersion:"))   throw new IOException("Index is invalid - it starts with " + line);
  _version=line.substring("SyndieVersion:".length()).trim();
  if (!_version.startsWith("1."))   throw new IOException("Index is not supported, we only handle versions 1.*, but it is " + _version);
  while ((line=in.readLine()) != null) {
    if (line.length() <= 0)     break;
    if (line.startsWith("Blog:"))     break;
    int split=line.indexOf(':');
    if (split <= 0)     continue;
    if (split >= line.length() - 1)     continue;
    _headers.setProperty(line.substring(0,split),line.substring(split + 1));
  }
  if (line != null) {
    do {
      if (!line.startsWith("Blog:"))       break;
      loadBlog(line);
    }
 while ((line=in.readLine()) != null);
  }
  while ((line=in.readLine()) != null) {
    int split=line.indexOf(':');
    if (split <= 0)     continue;
    if (split >= line.length() - 1)     continue;
    String key=line.substring(0,split);
    String val=line.substring(split + 1);
    if (key.equals("AllBlogs"))     _allBlogs=getInt(val);
 else     if (key.equals("NewBlogs"))     _newBlogs=getInt(val);
 else     if (key.equals("AllEntries"))     _allEntries=getInt(val);
 else     if (key.equals("NewEntries"))     _newEntries=getInt(val);
 else     if (key.equals("TotalSize"))     _totalSize=getInt(val);
 else     if (key.equals("NewSize"))     _newSize=getInt(val);
 else     if (key.equals("NewestBlogs"))     _newestBlogs=parseNewestBlogs(val);
 else     if (key.equals("NewestEntries"))     _newestEntries=parseNewestEntries(val);
  }
}
