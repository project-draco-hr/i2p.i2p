{
  I2PAppContext ctx=I2PAppContext.getGlobalContext();
  if (true) {
    try {
      Object keys[]=ctx.keyGenerator().generateSigningKeypair();
      SigningPublicKey pub=(SigningPublicKey)keys[0];
      SigningPrivateKey priv=(SigningPrivateKey)keys[1];
      Properties opts=new Properties();
      opts.setProperty("Name",TEST_STRING);
      opts.setProperty("Description",TEST_STRING);
      opts.setProperty("Edition","0");
      opts.setProperty("ContactURL",TEST_STRING);
      String nameOrig=opts.getProperty("Name");
      BlogInfo info=new BlogInfo(pub,null,opts);
      info.sign(ctx,priv);
      boolean ok=info.verify(ctx);
      System.err.println("sign&verify: " + ok);
      FileOutputStream o=new FileOutputStream("bloginfo-test.dat");
      info.write(o,true);
      o.close();
      FileInputStream i=new FileInputStream("bloginfo-test.dat");
      byte buf[]=new byte[4096];
      int sz=DataHelper.read(i,buf);
      BlogInfo read=new BlogInfo();
      read.load(new ByteArrayInputStream(buf,0,sz));
      ok=read.verify(ctx);
      System.err.println("write to disk, verify read: " + ok);
      System.err.println("Data: " + Base64.encode(buf,0,sz));
      System.err.println("Str : " + new String(buf,0,sz));
      System.err.println("Name ok? " + read.getProperty("Name").equals(TEST_STRING));
      System.err.println("Desc ok? " + read.getProperty("Description").equals(TEST_STRING));
      System.err.println("Name ok? " + read.getProperty("ContactURL").equals(TEST_STRING));
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
 else {
    try {
      FileInputStream in=new FileInputStream(args[0]);
      BlogInfo info=new BlogInfo();
      info.load(in);
      boolean ok=info.verify(I2PAppContext.getGlobalContext());
      System.out.println("OK? " + ok + " :"+ info);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
