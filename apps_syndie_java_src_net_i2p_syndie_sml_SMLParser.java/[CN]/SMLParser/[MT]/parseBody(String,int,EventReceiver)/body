{
  if (rawSMLBody == null)   return;
  int begin=off;
  int len=rawSMLBody.length();
  if (len <= off)   return;
  int openTagBegin=-1;
  int openTagEnd=-1;
  int closeTagBegin=-1;
  int closeTagEnd=-1;
  while (off < len) {
    char c=rawSMLBody.charAt(off);
    if ((c == NL) || (c == CR) || (c == LF)) {
      if (openTagBegin < 0) {
        if (begin < off)         receiver.receivePlain(rawSMLBody.substring(begin,off));
        receiver.receiveNewline();
        off++;
        begin=off;
        continue;
      }
 else {
      }
    }
 else     if (c == TAG_BEGIN) {
      if ((off + 1 < len) && (TAG_BEGIN == rawSMLBody.charAt(off + 1))) {
        if (begin < off)         receiver.receivePlain(rawSMLBody.substring(begin,off));
        receiver.receiveLeftBracket();
        off+=2;
        begin=off;
        continue;
      }
 else       if (openTagBegin < 0) {
        if (closeTagEnd < 0) {
          if (begin < off)           receiver.receivePlain(rawSMLBody.substring(begin,off));
        }
 else {
          if (closeTagEnd + 1 < off)           receiver.receivePlain(rawSMLBody.substring(closeTagEnd + 1,off));
        }
        openTagBegin=off;
        closeTagBegin=-1;
        begin=off + 1;
      }
 else {
        closeTagBegin=off;
        while ((c != TAG_END) && (off < len)) {
          off++;
          c=rawSMLBody.charAt(off);
        }
        parseTag(rawSMLBody,openTagBegin,openTagEnd,closeTagBegin,off,receiver);
        begin=off + 1;
        openTagBegin=-1;
        openTagEnd=-1;
        closeTagBegin=-1;
        closeTagEnd=-1;
      }
    }
 else     if (c == TAG_END) {
      if ((openTagBegin > 0) && (closeTagBegin < 0)) {
        openTagEnd=off;
      }
 else       if ((off + 1 < len) && (TAG_END == rawSMLBody.charAt(off + 1))) {
        if (begin < off)         receiver.receivePlain(rawSMLBody.substring(begin,off));
        receiver.receiveRightBracket();
        off+=2;
        begin=off;
        continue;
      }
    }
 else     if (c == LT) {
      if (begin < off)       receiver.receivePlain(rawSMLBody.substring(begin,off));
      receiver.receiveLT();
      off++;
      begin=off;
      continue;
    }
 else     if (c == GT) {
      if (begin < off)       receiver.receivePlain(rawSMLBody.substring(begin,off));
      receiver.receiveGT();
      off++;
      begin=off;
      continue;
    }
    off++;
  }
  if ((off >= len) && (openTagBegin < 0)) {
    if (closeTagEnd < 0) {
      if (begin < off)       receiver.receivePlain(rawSMLBody.substring(begin,off));
    }
 else {
      if (closeTagEnd + 1 < off)       receiver.receivePlain(rawSMLBody.substring(closeTagEnd + 1,off));
    }
  }
}
