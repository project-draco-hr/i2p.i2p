{
  EntryContainer entry=archive.getEntry(post);
  if (entry == null)   return;
  _entry=entry;
  _baseURI=baseURI;
  _user=user;
  _out=out;
  _archive=archive;
  _cutBody=false;
  _showImages=true;
  _headers=new HashMap();
  _bodyBuffer=new StringBuffer(1024);
  _postBodyBuffer=new StringBuffer(1024);
  _addresses=new ArrayList();
  _links=new ArrayList();
  _blogs=new ArrayList();
  _archives=new ArrayList();
  _parser.parse(entry.getEntry().getText(),this);
  out.write("<!-- body begin -->\n");
  out.write("<!-- body meta begin -->\n");
  out.write("<tr class=\"postMeta\" id=\"" + post.toString() + "\">\n");
  String subject=(String)_headers.get(HTMLRenderer.HEADER_SUBJECT);
  if (subject == null)   subject="";
  out.write(" <td colspan=\"3\" class=\"postMetaSubject\" id=\"bodySubject\">");
  out.write(subject);
  out.write("</td></tr>\n");
  out.write("<tr class=\"postMeta\"><td colspan=\"3\" class=\"postMetaLink\">\n");
  out.write("<a href=\"");
  out.write(getMetadataURL(post.getKeyHash()));
  out.write("\" title=\"View the author's profile\">");
  String author=null;
  PetName pn=user.getPetNameDB().getByLocation(post.getKeyHash().toBase64());
  if (pn == null) {
    BlogInfo info=archive.getBlogInfo(post.getKeyHash());
    if (info != null)     author=info.getProperty(BlogInfo.NAME);
  }
 else {
    author=pn.getName();
  }
  if ((author == null) || (author.trim().length() <= 0))   author=post.getKeyHash().toBase64().substring(0,6);
  ThreadNode node=index.getNode(post);
  out.write(author);
  out.write("</a> @ ");
  out.write(getEntryDate(post.getEntryId()));
  Collection tags=node.getTags();
  if ((tags != null) && (tags.size() > 0)) {
    out.write("\nTags: \n");
    for (Iterator tagIter=tags.iterator(); tagIter.hasNext(); ) {
      String tag=(String)tagIter.next();
      out.write("<a href=\"");
      out.write(getFilterByTagLink(baseURI,node,user,tag,filteredAuthor));
      out.write("\" title=\"Filter threads to only include posts tagged as '");
      out.write(tag);
      out.write("'\">");
      out.write(" " + tag);
      out.write("</a>\n");
    }
  }
  out.write("\n<a href=\"");
  out.write(getViewPostLink(baseURI,node,user,true,offset,requestTags,filteredAuthor));
  out.write("\" title=\"Select a shareable link directly to this post\">permalink</a>\n");
  out.write("</td>\n</tr>\n");
  out.write("<!-- body meta end -->\n");
  out.write("<!-- body post begin -->\n");
  out.write("<tr class=\"postData\">\n");
  out.write("<td colspan=\"3\">\n");
  out.write(_bodyBuffer.toString());
  out.write("</td>\n</tr>\n");
  out.write("<!-- body post end -->\n");
  out.write("<!-- body details begin -->\n");
  out.write(_postBodyBuffer.toString());
  out.write("<!-- body details end -->\n");
  if (inlineReply && user.getAuthenticated()) {
    String refuseReplies=(String)_headers.get(HTMLRenderer.HEADER_REFUSE_REPLIES);
    if ((user.getBlog().equals(post.getKeyHash())) || (refuseReplies == null) || (!Boolean.valueOf(refuseReplies).booleanValue())) {
      out.write("<!-- body reply begin -->\n");
      out.write("<form action=\"post.jsp\" method=\"POST\" enctype=\"multipart/form-data\">\n");
      out.write("<input type=\"hidden\" name=\"" + PostServlet.PARAM_PARENT + "\" value=\"");
      out.write(Base64.encode(post.toString()));
      out.write("\" />");
      out.write("<input type=\"hidden\" name=\"" + PostServlet.PARAM_SUBJECT + "\" value=\"");
      if (subject.indexOf("re: ") == -1)       out.write("re: ");
      out.write(HTMLRenderer.sanitizeTagParam(subject));
      out.write("\" />");
      out.write("<tr class=\"postReply\">\n");
      out.write("<td colspan=\"3\">Reply: (<a href=\"smlref.jsp\" title=\"SML cheatsheet\" target=\"_blank\">SML reference</a>)</td>\n</tr>\n");
      out.write("<tr class=\"postReplyText\">\n");
      out.write("<td colspan=\"3\"><textarea name=\"" + PostServlet.PARAM_TEXT + "\" rows=\"2\" cols=\"100\"></textarea></td>\n");
      out.write("</tr>\n");
      out.write("<tr class=\"postReplyOptions\">\n");
      out.write(" <td colspan=\"3\">\n");
      out.write(" <input type=\"submit\" value=\"Preview...\" name=\"Post\" />\n");
      out.write(" Tags: <input type=\"text\" size=\"10\" name=\"" + PostServlet.PARAM_TAGS + "\" />\n");
      out.write(" in a new thread? <input type=\"checkbox\" name=\"" + PostServlet.PARAM_IN_NEW_THREAD + "\" value=\"true\" />\n");
      out.write(" refuse replies? <input type=\"checkbox\" name=\"" + PostServlet.PARAM_REFUSE_REPLIES + "\" value=\"true\" />\n");
      out.write(" attachment: <input type=\"file\" name=\"entryfile0\" />\n");
      out.write(" </td>\n</tr>\n</form>\n");
      out.write("<!-- body reply end -->\n");
    }
  }
  out.write("<!-- body end -->\n");
}
