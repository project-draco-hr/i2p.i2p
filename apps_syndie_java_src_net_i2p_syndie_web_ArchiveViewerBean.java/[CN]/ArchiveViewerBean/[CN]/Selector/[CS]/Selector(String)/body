{
  entry=-1;
  blog=null;
  tag=null;
  if (selector != null) {
    if (selector.startsWith(SEL_BLOG)) {
      String blogStr=selector.substring(SEL_BLOG.length());
      byte h[]=Base64.decode(blogStr);
      if (h != null)       blog=new Hash(h);
    }
 else     if (selector.startsWith(SEL_BLOGTAG)) {
      int tagStart=selector.lastIndexOf('/');
      String blogStr=selector.substring(SEL_BLOGTAG.length(),tagStart);
      blog=new Hash(Base64.decode(blogStr));
      if (blog.getData() == null) {
        System.out.println("Blog string [" + blogStr + "] does not decode");
        blog=null;
        return;
      }
      tag=selector.substring(tagStart + 1);
      String origTag=tag;
      byte rawDecode[]=null;
      if (tag != null) {
        rawDecode=Base64.decode(tag);
        tag=DataHelper.getUTF8(rawDecode);
      }
      if (false && tag != null) {
        StringBuffer b=new StringBuffer(tag.length() * 2);
        for (int j=0; j < tag.length(); j++) {
          b.append((int)tag.charAt(j));
          if (rawDecode.length > j)           b.append('.').append((int)rawDecode[j]);
          b.append(' ');
        }
        b.append("encoded as ");
        for (int j=0; j < origTag.length(); j++) {
          b.append((int)origTag.charAt(j)).append(' ');
        }
      }
    }
 else     if (selector.startsWith(SEL_TAG)) {
      tag=selector.substring(SEL_TAG.length());
      byte rawDecode[]=null;
      if (tag != null) {
        rawDecode=Base64.decode(tag);
        tag=DataHelper.getUTF8(rawDecode);
      }
      if (false && tag != null) {
        StringBuffer b=new StringBuffer(tag.length() * 2);
        for (int j=0; j < tag.length(); j++) {
          b.append((int)tag.charAt(j));
          if (rawDecode.length > j)           b.append('.').append((int)rawDecode[j]);
          b.append(' ');
        }
      }
    }
 else     if (selector.startsWith(SEL_ENTRY)) {
      int entryStart=selector.lastIndexOf('/');
      String blogStr=blogStr=selector.substring(SEL_ENTRY.length(),entryStart);
      String entryStr=selector.substring(entryStart + 1);
      try {
        entry=Long.parseLong(entryStr);
        Hash h=new Hash(Base64.decode(blogStr));
        if (h.getData() != null)         blog=h;
      }
 catch (      NumberFormatException nfe) {
      }
    }
 else     if (selector.startsWith(SEL_GROUP)) {
      group=DataHelper.getUTF8(Base64.decode(selector.substring(SEL_GROUP.length())));
    }
  }
}
