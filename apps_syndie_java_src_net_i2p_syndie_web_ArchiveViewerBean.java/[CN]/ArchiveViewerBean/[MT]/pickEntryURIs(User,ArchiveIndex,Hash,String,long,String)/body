{
  if ((blog != null) && ((blog.getData() == null) || (blog.getData().length != Hash.HASH_LENGTH)))   blog=null;
  List rv=new ArrayList(16);
  if ((blog != null) && (entryId >= 0)) {
    rv.add(new BlogURI(blog,entryId));
    return rv;
  }
  if ((group != null) && (user != null)) {
    List selectors=(List)user.getBlogGroups().get(group);
    if (selectors != null) {
      for (int i=0; i < selectors.size(); i++) {
        String sel=(String)selectors.get(i);
        Selector s=new Selector(sel);
        if ((s.entry >= 0) && (s.blog != null) && (s.group == null)&& (s.tag == null))         rv.add(new BlogURI(s.blog,s.entry));
 else         index.selectMatchesOrderByEntryId(rv,s.blog,s.tag);
      }
    }
    PetNameDB db=user.getPetNameDB();
    for (Iterator iter=db.getNames().iterator(); iter.hasNext(); ) {
      String name=(String)iter.next();
      PetName pn=db.get(name);
      if ("syndie".equals(pn.getNetwork()) && "syndieblog".equals(pn.getProtocol()) && pn.isMember(group)) {
        byte pnLoc[]=Base64.decode(pn.getLocation());
        if (pnLoc != null) {
          Hash pnHash=new Hash(pnLoc);
          index.selectMatchesOrderByEntryId(rv,pnHash,null);
        }
      }
    }
    sort(rv);
    if (rv.size() > 0)     return rv;
  }
  index.selectMatchesOrderByEntryId(rv,blog,tag);
  filterIgnored(user,rv);
  return rv;
}
