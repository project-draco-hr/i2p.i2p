{
  String sel=getString(parameters,PARAM_SELECTOR);
  String action=getString(parameters,PARAM_SELECTOR_ACTION);
  if ((sel != null) && (action != null) && (SEL_ACTION_SET_AS_DEFAULT.equals(action))) {
    user.setDefaultSelector(HTMLRenderer.sanitizeString(sel,false));
    BlogManager.instance().saveUser(user);
  }
  out.write("<select name=\"");
  out.write(PARAM_SELECTOR);
  out.write("\">");
  out.write("<option value=\"");
  out.write(getDefaultSelector(user,parameters));
  out.write("\">Default blog filter</option>\n");
  out.write("\">");
  out.write("<option value=\"");
  out.write(SEL_ALL);
  out.write("\">All posts from all blogs</option>\n");
  List groups=null;
  if (user != null)   groups=user.getPetNameDB().getGroups();
  if (groups != null) {
    for (int i=0; i < groups.size(); i++) {
      String name=(String)groups.get(i);
      out.write("<option value=\"group://" + Base64.encode(DataHelper.getUTF8(name)) + "\">"+ "Group: "+ HTMLRenderer.sanitizeString(name)+ "</option>\n");
    }
  }
  Archive archive=BlogManager.instance().getArchive();
  ArchiveIndex index=archive.getIndex();
  for (int i=0; i < index.getNewestBlogCount(); i++) {
    Hash cur=index.getNewestBlog(i);
    String blog=Base64.encode(cur.getData());
    out.write("<option value=\"blog://" + blog + "\">");
    out.write("New blog: ");
    BlogInfo info=archive.getBlogInfo(cur);
    String name=info.getProperty(BlogInfo.NAME);
    if (name != null)     name=HTMLRenderer.sanitizeString(name);
 else     name=Base64.encode(cur.getData());
    out.write(name);
    out.write("</option>\n");
  }
  List allTags=new ArrayList();
  Set blogs=index.getUniqueBlogs();
  for (Iterator iter=blogs.iterator(); iter.hasNext(); ) {
    Hash cur=(Hash)iter.next();
    String blog=Base64.encode(cur.getData());
    out.write("<option value=\"blog://");
    out.write(blog);
    out.write("\">");
    BlogInfo info=archive.getBlogInfo(cur);
    String name=info.getProperty(BlogInfo.NAME);
    if (name != null)     name=HTMLRenderer.sanitizeString(name);
 else     name=Base64.encode(cur.getData());
    out.write(name);
    out.write("- all posts</option>\n");
    List tags=index.getBlogTags(cur);
    for (int j=0; j < tags.size(); j++) {
      String tag=(String)tags.get(j);
      if (false) {
        StringBuffer b=new StringBuffer(tag.length() * 2);
        for (int k=0; k < tag.length(); k++) {
          b.append((int)tag.charAt(k));
          b.append(' ');
        }
        System.out.println("tag in select: " + tag + ": "+ b.toString());
      }
      if (!allTags.contains(tag))       allTags.add(tag);
      out.write("<option value=\"blogtag://");
      out.write(blog);
      out.write("/");
      byte utf8tag[]=DataHelper.getUTF8(tag);
      String encoded=Base64.encode(utf8tag);
      if (false) {
        byte utf8dec[]=Base64.decode(encoded);
        String travel=DataHelper.getUTF8(utf8dec);
        StringBuffer b=new StringBuffer();
        for (int k=0; k < travel.length(); k++) {
          b.append((int)travel.charAt(k));
          b.append(' ');
        }
        b.append(" encoded into: ");
        for (int k=0; k < encoded.length(); k++) {
          b.append((int)encoded.charAt(k));
          b.append(' ');
        }
        System.out.println("UTF8(unbase64(base64(UTF8(tag)))) == tag: " + b.toString());
      }
      out.write(encoded);
      out.write("\">");
      out.write(name);
      out.write("- posts with the tag &quot;");
      out.write(tag);
      out.write("&quot;</option>\n");
    }
  }
  for (int i=0; i < allTags.size(); i++) {
    String tag=(String)allTags.get(i);
    out.write("<option value=\"tag://");
    out.write(Base64.encode(DataHelper.getUTF8(tag)));
    out.write("\">Posts in any blog with the tag &quot;");
    out.write(tag);
    out.write("&quot;</option>\n");
  }
  out.write("</select>");
  int numPerPage=getInt(parameters,PARAM_NUM_PER_PAGE,5);
  int pageNum=getInt(parameters,PARAM_PAGE_NUMBER,0);
  boolean expandEntries=getBool(parameters,PARAM_EXPAND_ENTRIES,(user != null ? user.getShowExpanded() : false));
  boolean showImages=getBool(parameters,PARAM_SHOW_IMAGES,(user != null ? user.getShowImages() : false));
  out.write("<input type=\"hidden\" name=\"" + PARAM_NUM_PER_PAGE + "\" value=\""+ numPerPage+ "\" />");
  out.write("<input type=\"hidden\" name=\"" + PARAM_PAGE_NUMBER + "\" value=\""+ pageNum+ "\" />");
  out.write("<input type=\"hidden\" name=\"" + PARAM_EXPAND_ENTRIES + "\" value=\""+ expandEntries+ "\" />");
  out.write("<input type=\"hidden\" name=\"" + PARAM_SHOW_IMAGES + "\" value=\""+ showImages+ "\" />");
}
