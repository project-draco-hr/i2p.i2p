{
  req.setCharacterEncoding("UTF-8");
  resp.setCharacterEncoding("UTF-8");
  resp.setContentType("text/html");
  User user=(User)req.getSession().getAttribute("user");
  String login=req.getParameter("login");
  String pass=req.getParameter("password");
  String action=req.getParameter("action");
  boolean forceNewIndex=false;
  if (req.getParameter("regenerateIndex") != null)   forceNewIndex=true;
  User oldUser=user;
  user=handleRegister(user,req);
  if (oldUser != user)   forceNewIndex=true;
  if (user == null) {
    if ("Login".equals(action)) {
      user=BlogManager.instance().login(login,pass);
      if (!user.getAuthenticated())       user=BlogManager.instance().getDefaultUser();
    }
 else {
      user=BlogManager.instance().getDefaultUser();
    }
    forceNewIndex=true;
  }
 else   if ("Login".equals(action)) {
    user=BlogManager.instance().login(login,pass);
    if (!user.getAuthenticated())     user=BlogManager.instance().getDefaultUser();
    forceNewIndex=true;
  }
 else   if ("Logout".equals(action)) {
    user=BlogManager.instance().getDefaultUser();
    forceNewIndex=true;
  }
  req.getSession().setAttribute("user",user);
  forceNewIndex=handleBookmarking(user,req) || forceNewIndex;
  handleUpdateProfile(user,req);
  FilteredThreadIndex index=(FilteredThreadIndex)req.getSession().getAttribute("threadIndex");
  Collection tags=getFilteredTags(req);
  Collection filteredAuthors=getFilteredAuthors(req);
  if (forceNewIndex || (index == null) || (!index.getFilteredTags().equals(tags))|| (!index.getFilteredAuthors().equals(filteredAuthors))) {
    index=new FilteredThreadIndex(user,BlogManager.instance().getArchive(),getFilteredTags(req),filteredAuthors);
    req.getSession().setAttribute("threadIndex",index);
  }
  render(user,req,resp.getWriter(),index);
}
