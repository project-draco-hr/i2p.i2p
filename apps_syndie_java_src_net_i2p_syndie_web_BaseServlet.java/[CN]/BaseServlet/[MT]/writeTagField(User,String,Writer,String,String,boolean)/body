{
  Set favoriteTags=new TreeSet(user.getFavoriteTags());
  if (favoriteTags.size() <= 0) {
    out.write("<input type=\"text\" name=\"" + ThreadedHTMLRenderer.PARAM_TAGS + "\" size=\"10\" value=\""+ selectedTags+ "\" title=\""+ title+ "\" />\n");
  }
 else {
    out.write("<select name=\"" + ThreadedHTMLRenderer.PARAM_TAGS + "\" title=\""+ title+ "\">");
    out.write("<option value=\"\">" + blankTitle + "</option>\n");
    if (includeFavoritesTag) {
      out.write("<option value=\"");
      StringBuffer combinedBuf=new StringBuffer();
      for (Iterator iter=favoriteTags.iterator(); iter.hasNext(); ) {
        String curFavTag=(String)iter.next();
        combinedBuf.append(HTMLRenderer.sanitizeTagParam(curFavTag)).append(" ");
      }
      String combined=combinedBuf.toString();
      if (selectedTags.equals(combined))       out.write(combined + "\" selected=\"true\" >All favorite tags</option>\n");
 else       out.write(combined + "\" >All favorite tags</option>\n");
    }
    boolean matchFound=false;
    for (Iterator iter=favoriteTags.iterator(); iter.hasNext(); ) {
      String curFavTag=(String)iter.next();
      if (selectedTags.equals(curFavTag)) {
        out.write("<option value=\"" + HTMLRenderer.sanitizeTagParam(curFavTag) + "\" selected=\"true\" >"+ HTMLRenderer.sanitizeString(curFavTag)+ "</option>\n");
        matchFound=true;
      }
 else {
        out.write("<option value=\"" + HTMLRenderer.sanitizeTagParam(curFavTag) + "\">"+ HTMLRenderer.sanitizeString(curFavTag)+ "</option>\n");
      }
    }
    if ((!matchFound) && (selectedTags != null) && (selectedTags.trim().length() > 0))     out.write("<option value=\"" + HTMLRenderer.sanitizeTagParam(selectedTags) + "\" selected=\"true\">"+ HTMLRenderer.sanitizeString(selectedTags)+ "</option>\n");
    out.write("</select>\n");
  }
}
