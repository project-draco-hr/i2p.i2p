{
  String meta[]=null;
  String entries[]=null;
  String type=req.getHeader("Content-Type");
  if ((type == null) || (type.indexOf("boundary") == -1)) {
    List metaList=new ArrayList();
    List entryList=new ArrayList();
    StringBuffer key=new StringBuffer();
    StringBuffer val=null;
    String lenStr=req.getHeader("Content-length");
    int len=-1;
    if (lenStr != null)     try {
      len=Integer.valueOf(lenStr).intValue();
    }
 catch (    NumberFormatException nfe) {
    }
    int read=0;
    int c=0;
    InputStream in=req.getInputStream();
    while ((len == -1) || (read < len)) {
      c=in.read();
      if ((c == '=') && (val == null)) {
        val=new StringBuffer(128);
      }
 else       if ((c == -1) || (c == '&')) {
        String k=(key == null ? "" : key.toString());
        String v=(val == null ? "" : val.toString());
        if ("meta".equals(k))         metaList.add(v.trim());
 else         if ("entry".equals(k))         entryList.add(v.trim());
        key.setLength(0);
        val=null;
        if (c == -1)         break;
      }
 else {
        if (val == null)         key.append((char)c);
 else         val.append((char)c);
      }
      read++;
    }
    if (metaList != null) {
      meta=new String[metaList.size()];
      for (int i=0; i < metaList.size(); i++)       meta[i]=(String)metaList.get(i);
    }
    if (entryList != null) {
      entries=new String[entryList.size()];
      for (int i=0; i < entryList.size(); i++)       entries[i]=(String)entryList.get(i);
    }
  }
 else {
    meta=req.getParameterValues("meta");
    entries=req.getParameterValues("entry");
  }
  resp.setContentType("application/x-syndie-zip");
  resp.setStatus(200);
  OutputStream out=resp.getOutputStream();
  if (false) {
    StringBuffer bbuf=new StringBuffer(1024);
    bbuf.append("meta: ");
    if (meta != null)     for (int i=0; i < meta.length; i++)     bbuf.append(meta[i]).append(", ");
    bbuf.append("entries: ");
    if (entries != null)     for (int i=0; i < entries.length; i++)     bbuf.append(entries[i]).append(", ");
    System.out.println(bbuf.toString());
  }
  ZipOutputStream zo=null;
  if ((meta != null) && (entries != null) && (meta.length + entries.length > 0))   zo=new ZipOutputStream(out);
  List metaFiles=getMetaFiles(meta);
  ZipEntry ze=null;
  byte buf[]=new byte[1024];
  int read=-1;
  for (int i=0; metaFiles != null && i < metaFiles.size(); i++) {
    ze=new ZipEntry("meta" + i);
    ze.setTime(0);
    zo.putNextEntry(ze);
    FileInputStream in=new FileInputStream((File)metaFiles.get(i));
    while ((read=in.read(buf)) != -1)     zo.write(buf,0,read);
    zo.closeEntry();
  }
  List entryFiles=getEntryFiles(entries);
  for (int i=0; entryFiles != null && i < entryFiles.size(); i++) {
    ze=new ZipEntry("entry" + i);
    ze.setTime(0);
    zo.putNextEntry(ze);
    FileInputStream in=new FileInputStream((File)entryFiles.get(i));
    while ((read=in.read(buf)) != -1)     zo.write(buf,0,read);
    zo.closeEntry();
  }
  if (zo != null) {
    zo.finish();
    zo.close();
  }
}
