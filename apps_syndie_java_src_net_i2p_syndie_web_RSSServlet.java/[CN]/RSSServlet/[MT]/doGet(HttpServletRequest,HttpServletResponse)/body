{
  req.setCharacterEncoding("UTF-8");
  resp.setCharacterEncoding("UTF-8");
  resp.setContentType("application/rss+xml");
  User user=(User)req.getSession().getAttribute("user");
  if (user == null) {
    String login=req.getParameter("login");
    String pass=req.getParameter("password");
    user=new User();
    BlogManager.instance().login(user,login,pass);
    if (!user.getAuthenticated())     user.invalidate();
  }
  String selector=req.getParameter("selector");
  if ((selector == null) || (selector.length() <= 0)) {
    selector=getDefaultSelector(user);
  }
  ArchiveViewerBean.Selector sel=new ArchiveViewerBean.Selector(selector);
  Archive archive=BlogManager.instance().getArchive();
  ArchiveIndex index=archive.getIndex();
  List entries=ArchiveViewerBean.pickEntryURIs(user,index,sel.blog,sel.tag,sel.entry,sel.group);
  StringBuffer cur=new StringBuffer();
  cur.append(req.getScheme());
  cur.append("://");
  cur.append(req.getServerName());
  if (req.getServerPort() != 80)   cur.append(':').append(req.getServerPort());
  cur.append(req.getContextPath()).append('/');
  String urlPrefix=cur.toString();
  Writer out=resp.getWriter();
  out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n");
  out.write("<rss version=\"2.0\">\n");
  out.write(" <channel>\n");
  out.write("  <title>Syndie feed</title>\n");
  out.write("  <link>" + urlPrefix + HTMLRenderer.sanitizeXML(HTMLRenderer.getPageURL(sel.blog,sel.tag,sel.entry,sel.group,5,0,false,false))+ "</link>\n");
  out.write("  <description>Summary of the latest Syndie posts</description>\n");
  out.write("  <generator>Syndie</generator>\n");
  int count=10;
  String wanted=req.getParameter("wanted");
  if (wanted != null) {
    try {
      count=Integer.parseInt(wanted);
    }
 catch (    NumberFormatException nfe) {
      count=10;
    }
  }
  if (count < 0)   count=10;
  if (count > 100)   count=100;
  RSSRenderer r=new RSSRenderer(I2PAppContext.getGlobalContext());
  for (int i=0; i < count && i < entries.size(); i++) {
    BlogURI uri=(BlogURI)entries.get(i);
    EntryContainer entry=archive.getEntry(uri);
    r.render(user,archive,entry,urlPrefix,out);
  }
  out.write(" </channel>\n");
  out.write("</rss>\n");
  out.close();
}
