{
  _statusMessages.add("Fetch of " + HTMLRenderer.sanitizeString(url.substring(0,url.indexOf('?'))) + " successful, importing the data");
  File file=new File(outputFile);
  ZipInputStream zi=null;
  try {
    zi=new ZipInputStream(new FileInputStream(file));
    while (true) {
      ZipEntry entry=zi.getNextEntry();
      if (entry == null)       break;
      ByteArrayOutputStream out=new ByteArrayOutputStream(1024);
      byte buf[]=new byte[1024];
      int read=-1;
      while ((read=zi.read(buf)) != -1)       out.write(buf,0,read);
      if (entry.getName().startsWith("meta")) {
        BlogInfo i=new BlogInfo();
        i.load(new ByteArrayInputStream(out.toByteArray()));
        boolean ok=BlogManager.instance().getArchive().storeBlogInfo(i);
        if (ok) {
          _statusMessages.add("Blog info for " + HTMLRenderer.sanitizeString(i.getProperty(BlogInfo.NAME)) + " imported");
        }
 else {
          _statusMessages.add("Blog info at " + HTMLRenderer.sanitizeString(url) + " was corrupt / invalid / forged");
        }
      }
 else       if (entry.getName().startsWith("entry")) {
        EntryContainer c=new EntryContainer();
        c.load(new ByteArrayInputStream(out.toByteArray()));
        BlogURI uri=c.getURI();
        if ((uri == null) || (uri.getKeyHash() == null)) {
          _statusMessages.add("Blog post " + HTMLRenderer.sanitizeString(entry.getName()) + " was corrupt - no URI");
          continue;
        }
        Archive a=BlogManager.instance().getArchive();
        BlogInfo info=a.getBlogInfo(uri);
        if (info == null) {
          _statusMessages.add("Blog post " + HTMLRenderer.sanitizeString(entry.getName()) + " cannot be imported, as we don't have their blog metadata");
          continue;
        }
        boolean ok=a.storeEntry(c);
        if (!ok) {
          _statusMessages.add("Blog post " + uri.toString() + " has an invalid signature");
          continue;
        }
 else {
          _statusMessages.add("Blog post " + uri.toString() + " imported");
        }
      }
    }
    BlogManager.instance().getArchive().regenerateIndex();
  }
 catch (  IOException ioe) {
    if (_log.shouldLog(Log.WARN))     _log.debug("Error importing",ioe);
    _statusMessages.add("Error importing from " + HTMLRenderer.sanitizeString(url) + ": "+ ioe.getMessage());
  }
 finally {
    if (zi != null)     try {
      zi.close();
    }
 catch (    IOException ioe) {
    }
    file.delete();
  }
}
