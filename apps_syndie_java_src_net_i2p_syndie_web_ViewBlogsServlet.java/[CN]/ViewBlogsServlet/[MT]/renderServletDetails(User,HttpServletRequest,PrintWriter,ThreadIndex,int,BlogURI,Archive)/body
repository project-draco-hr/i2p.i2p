{
  TreeSet orderedRoots=new TreeSet(new NewestEntryFirstComparator());
  int count=index.getRootCount();
  for (int i=0; i < count; i++) {
    ThreadNode node=index.getRoot(i);
    orderedRoots.add(node.getEntry());
  }
  TreeSet tags=new TreeSet();
  List writtenAuthors=new ArrayList();
  out.write("<tr><td colspan=\"3\" valign=\"top\" align=\"left\"><span class=\"syndieBlogFavorites\">");
  if ((user != null) && (user.getAuthenticated())) {
    out.write("<b>Favorite blogs:</b><br />\n");
    out.write("<a href=\"" + getViewBlogLink(user.getBlog(),user.getLastMetaEntry()) + "\" title=\"View your blog\">Your blog</a><br />\n");
    PetNameDB db=user.getPetNameDB();
    for (Iterator iter=orderedRoots.iterator(); iter.hasNext() && writtenAuthors.size() < MAX_AUTHORS_AT_ONCE; ) {
      BlogURI uri=(BlogURI)iter.next();
      if (writtenAuthors.contains(uri.getKeyHash())) {
      }
 else {
        PetName pn=db.getByLocation(uri.getKeyHash().toBase64());
        if (pn != null) {
          if (pn.isMember(FilteredThreadIndex.GROUP_FAVORITE)) {
            out.write("<a href=\"" + getViewBlogLink(uri.getKeyHash(),uri.getEntryId()) + "\" title=\"View "+ HTMLRenderer.sanitizeTagParam(pn.getName())+ "'s blog\">");
            out.write(HTMLRenderer.sanitizeString(pn.getName(),32));
            out.write("</a> (" + getPostDate(uri.getEntryId()) + ")<br />\n");
            writtenAuthors.add(uri.getKeyHash());
          }
 else           if (pn.isMember(FilteredThreadIndex.GROUP_IGNORE)) {
            writtenAuthors.add(uri.getKeyHash());
          }
 else {
          }
        }
 else {
        }
      }
    }
  }
  out.write("</span>\n");
  out.write("<span class=\"syndieBlogList\">");
  out.write("<b>Most recently updated blogs:</b><br />\n");
  for (Iterator iter=orderedRoots.iterator(); iter.hasNext() && writtenAuthors.size() < MAX_AUTHORS_AT_ONCE; ) {
    BlogURI uri=(BlogURI)iter.next();
    String curTags[]=archive.getEntry(uri).getTags();
    if (curTags != null)     for (int i=0; i < curTags.length && tags.size() < MAX_TAGS; i++)     tags.add(curTags[i]);
    if (writtenAuthors.contains(uri.getKeyHash())) {
    }
 else {
      BlogInfo info=archive.getBlogInfo(uri);
      if (info == null)       continue;
      String name=info.getProperty(BlogInfo.NAME);
      if ((name == null) || (name.trim().length() <= 0))       name=uri.getKeyHash().toBase64().substring(0,8);
      String desc=info.getProperty(BlogInfo.DESCRIPTION);
      if ((desc == null) || (desc.trim().length() <= 0))       desc=name + "'s blog";
      String age=null;
      long dayBegin=BlogManager.instance().getDayBegin();
      long postId=uri.getEntryId();
      if (postId >= dayBegin) {
        age="today";
      }
 else       if (postId >= dayBegin - 24 * 60 * 60* 1000) {
        age="yesterday";
      }
 else {
        int daysAgo=(int)((dayBegin - postId + 24 * 60 * 60* 1000 - 1) / (24 * 60 * 60* 1000));
        age=daysAgo + " days ago";
      }
      out.write("<a href=\"" + getViewBlogLink(uri.getKeyHash(),uri.getEntryId()) + "\" title=\"View "+ trim(HTMLRenderer.sanitizeTagParam(name),32)+ "'s blog\">");
      out.write(HTMLRenderer.sanitizeString(desc,32));
      out.write("</a> (" + getPostDate(uri.getEntryId()) + ")<br />\n");
      writtenAuthors.add(uri.getKeyHash());
    }
  }
  out.write("</span>\n");
  out.write("</td></tr>\n");
}
