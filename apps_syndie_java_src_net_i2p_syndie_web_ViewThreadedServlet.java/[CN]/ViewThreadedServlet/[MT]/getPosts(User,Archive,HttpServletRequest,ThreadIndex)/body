{
  List rv=new ArrayList(1);
  String author=req.getParameter(ThreadedHTMLRenderer.PARAM_AUTHOR);
  String tags=req.getParameter(ThreadedHTMLRenderer.PARAM_TAGS);
  String post=req.getParameter(ThreadedHTMLRenderer.PARAM_VIEW_POST);
  String thread=req.getParameter(ThreadedHTMLRenderer.PARAM_VIEW_THREAD);
  boolean threadAuthorOnly=Boolean.valueOf(req.getParameter(ThreadedHTMLRenderer.PARAM_THREAD_AUTHOR) + "").booleanValue();
  long dayBegin=BlogManager.instance().getDayBegin();
  String daysStr=req.getParameter(ThreadedHTMLRenderer.PARAM_DAYS_BACK);
  int days=1;
  try {
    if (daysStr != null)     days=Integer.parseInt(daysStr);
  }
 catch (  NumberFormatException nfe) {
    days=1;
  }
  dayBegin-=(days - 1) * 24 * 60* 60* 1000l;
  if ((author != null) && empty(post) && empty(thread)) {
    ArchiveIndex aindex=archive.getIndex();
    PetNameDB db=user.getPetNameDB();
    if ("favorites".equals(author)) {
      for (Iterator nameIter=db.getNames().iterator(); nameIter.hasNext(); ) {
        PetName pn=db.getByName((String)nameIter.next());
        if (pn.isMember(FilteredThreadIndex.GROUP_FAVORITE) && AddressesServlet.PROTO_BLOG.equals(pn.getProtocol())) {
          Hash loc=new Hash();
          byte key[]=Base64.decode(pn.getLocation());
          if ((key != null) && (key.length == Hash.HASH_LENGTH)) {
            loc.setData(key);
            aindex.selectMatchesOrderByEntryId(rv,loc,tags,dayBegin);
          }
        }
      }
      aindex.selectMatchesOrderByEntryId(rv,user.getBlog(),tags,dayBegin);
      Collections.sort(rv,BlogURI.COMPARATOR);
    }
 else {
      Hash loc=new Hash();
      byte key[]=Base64.decode(author);
      if ((key != null) && (key.length == Hash.HASH_LENGTH)) {
        loc.setData(key);
        aindex.selectMatchesOrderByEntryId(rv,loc,tags,dayBegin);
      }
 else {
      }
    }
    if (threadAuthorOnly && (rv.size() > 0)) {
      for (int i=0; i < rv.size(); i++) {
        BlogURI curURI=(BlogURI)rv.get(i);
        ThreadNode node=index.getNode(curURI);
        if ((node != null) && (node.getParent() == null)) {
        }
 else {
          rv.remove(i);
          i--;
        }
      }
    }
  }
  BlogURI uri=getAsBlogURI(post);
  if ((uri != null) && (uri.getEntryId() > 0)) {
    rv.add(uri);
  }
 else {
    uri=getAsBlogURI(thread);
    if ((uri != null) && (uri.getEntryId() > 0)) {
      ThreadNode node=index.getNode(uri);
      if (node != null) {
        if (false) {
          while (node.getParent() != null)           node=node.getParent();
          walkTree(rv,node);
        }
 else {
          rv.add(node.getEntry());
          ThreadNode cur=node;
          while (cur.getParent() != null) {
            cur=cur.getParent();
            rv.add(0,cur.getEntry());
          }
          cur=node;
          while ((cur != null) && (cur.getChildCount() > 0)) {
            cur=cur.getChild(0);
            rv.add(cur.getEntry());
          }
        }
      }
 else {
        rv.add(uri);
      }
    }
  }
  return rv;
}
