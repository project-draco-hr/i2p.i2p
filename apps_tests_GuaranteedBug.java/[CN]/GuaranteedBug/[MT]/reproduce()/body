{
  try {
    Destination d1=null;
    if (true) {
      I2PClient client=I2PClientFactory.createClient();
      ByteArrayOutputStream keyStream=new ByteArrayOutputStream(512);
      d1=client.createDestination(keyStream);
      ByteArrayInputStream in=new ByteArrayInputStream(keyStream.toByteArray());
      Properties opts=new Properties();
      opts.setProperty(I2PClient.PROP_RELIABILITY,I2PClient.PROP_RELIABILITY_GUARANTEED);
      opts.setProperty(I2PClient.PROP_TCP_HOST,"127.0.0.1");
      opts.setProperty(I2PClient.PROP_TCP_PORT,"7654");
      I2PSession session=client.createSession(in,opts);
      session.connect();
      session.setSessionListener(new PacketCounter());
    }
    I2PClient client=I2PClientFactory.createClient();
    ByteArrayOutputStream keyStream=new ByteArrayOutputStream(512);
    Destination d2=client.createDestination(keyStream);
    ByteArrayInputStream in=new ByteArrayInputStream(keyStream.toByteArray());
    Properties opts=new Properties();
    opts.setProperty(I2PClient.PROP_RELIABILITY,I2PClient.PROP_RELIABILITY_GUARANTEED);
    opts.setProperty(I2PClient.PROP_TCP_HOST,"127.0.0.1");
    opts.setProperty(I2PClient.PROP_TCP_PORT,"7654");
    I2PSession session=client.createSession(in,opts);
    session.connect();
    session.setSessionListener(new DummyListener());
    for (int i=0; i < 1000; i++) {
      byte[] msg=("" + i).getBytes("ISO-8859-1");
      session.sendMessage(d1,msg);
      System.out.println(">>" + i);
    }
  }
 catch (  IOException ex) {
    ex.printStackTrace();
  }
catch (  I2PException ex) {
    ex.printStackTrace();
  }
}
