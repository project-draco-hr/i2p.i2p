{
  String modelString=null;
  int family=CPUID.getCPUFamily();
  int model=CPUID.getCPUModel();
  if (family == 15) {
    family+=CPUID.getCPUExtendedFamily();
    model+=CPUID.getCPUExtendedModel() << 4;
  }
switch (family) {
case 4:
{
switch (model) {
case 3:
        modelString="486 DX/2";
      break;
case 7:
    modelString="486 DX/2-WB";
  break;
case 8:
modelString="486 DX/4";
break;
case 9:
modelString="486 DX/4-WB";
break;
case 14:
modelString="Am5x86-WT";
break;
case 15:
modelString="Am5x86-WB";
break;
default :
modelString="AMD 486/586 model " + model;
break;
}
}
break;
case 5:
{
isK6Compatible=true;
switch (model) {
case 0:
modelString="K5/SSA5";
break;
case 1:
case 2:
case 3:
modelString="K5";
break;
case 4:
isK6Compatible=false;
isGeodeCompatible=true;
modelString="Geode GX1/GXLV/GXm";
break;
case 5:
isK6Compatible=false;
isGeodeCompatible=true;
modelString="Geode GX2/LX";
break;
case 6:
case 7:
modelString="K6";
break;
case 8:
isK6_2_Compatible=true;
modelString="K6-2";
break;
case 9:
isK6_2_Compatible=true;
isK6_3_Compatible=true;
modelString="K6-3";
break;
case 13:
isK6_2_Compatible=true;
modelString="K6-2+ or K6-III+";
break;
default :
modelString="AMD K5/K6 model " + model;
break;
}
}
break;
case 6:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
switch (model) {
case 0:
case 1:
modelString="Athlon (250 nm)";
break;
case 2:
modelString="Athlon (180 nm)";
break;
case 3:
modelString="Duron";
break;
case 4:
modelString="Athlon (Thunderbird)";
break;
case 6:
modelString="Athlon (Palamino)";
break;
case 7:
modelString="Duron (Morgan)";
break;
case 8:
modelString="Athlon (Thoroughbred)";
break;
case 10:
modelString="Athlon (Barton)";
break;
default :
modelString="AMD Athlon/Duron model " + model;
break;
}
}
break;
case 15:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
isAthlon64Compatible=true;
isX64=true;
switch (model) {
case 4:
modelString="Athlon 64/Mobile XP-M";
break;
case 5:
modelString="Athlon 64 FX Opteron";
break;
case 7:
modelString="Athlon 64 FX (Sledgehammer S939, 130 nm)";
break;
case 8:
modelString="Mobile A64/Sempron/XP-M";
break;
case 11:
modelString="Athlon 64 (Clawhammer S939, 130 nm)";
break;
case 12:
case 14:
modelString="Athlon 64/Sempron (Newcastle S754, 130 nm)";
break;
case 15:
modelString="Athlon 64/Sempron (Clawhammer S939, 130 nm)";
break;
case 18:
modelString="Sempron (Palermo, 90 nm)";
break;
case 20:
modelString="Athlon 64 (Winchester S754, 90 nm)";
break;
case 23:
modelString="Athlon 64 (Winchester S939, 90 nm)";
break;
case 24:
modelString="Mobile A64/Sempron/XP-M (Winchester S754, 90 nm)";
break;
case 26:
modelString="Athlon 64 (Winchester S939, 90 nm)";
break;
case 27:
modelString="Athlon 64/Sempron (Winchester/Palermo 90 nm)";
break;
case 28:
modelString="Sempron (Palermo, 90 nm)";
break;
case 31:
modelString="Athlon 64/Sempron (Winchester/Palermo, 90 nm)";
break;
case 33:
modelString="Dual-Core Opteron (Italy-Egypt S940, 90 nm)";
break;
case 35:
modelString="Athlon 64 X2/A64 FX/Opteron (Toledo/Denmark S939, 90 nm)";
break;
case 36:
modelString="Mobile A64/Turion (Lancaster/Richmond/Newark, 90 nm)";
break;
case 37:
modelString="Opteron (Troy/Athens S940, 90 nm)";
break;
case 39:
modelString="Athlon 64 (San Diego, 90 nm)";
break;
case 43:
modelString="Athlon 64 X2 (Manchester, 90 nm)";
break;
case 44:
modelString="Sempron/mobile Sempron (Palermo/Albany/Roma S754, 90 nm)";
break;
case 47:
modelString="Athlon 64/Sempron (Venice/Palermo S939, 90 nm)";
break;
case 65:
modelString="Second-Generaton Opteron (Santa Rosa S1207, 90 nm)";
break;
case 67:
modelString="Athlon 64 X2/2nd-gen Opteron (Windsor/Santa Rosa, 90 nm)";
break;
case 72:
modelString="Athlon 64 X2/Turion 64 X2 (Windsor/Taylor/Trinidad, 90 nm)";
break;
case 75:
modelString="Athlon 64 X2 (Windsor, 90 nm)";
break;
case 76:
modelString="Mobile A64/mobile Sempron/Turion (Keene/Trinidad/Taylor, 90 nm)";
break;
case 79:
modelString="Athlon 64/Sempron (Orleans/Manila AM2, 90 nm)";
break;
case 93:
modelString="Opteron Gen 2 (Santa Rosa, 90 nm)";
break;
case 95:
modelString="A64/Sempron/mobile Sempron (Orleans/Manila/Keene, 90 nm)";
break;
case 104:
modelString="Turion 64 X2 (Tyler S1, 65 nm)";
break;
case 107:
modelString="Athlon 64 X2/Sempron X2/Athlon Neo X2 (Brisbane/Huron, 65 nm)";
break;
case 108:
modelString="A64/Athlon Neo/Sempron/Mobile Sempron (Lima/Huron/Sparta/Sherman, 65 nm)";
break;
case 111:
modelString="Neo/Sempron/mobile Sempron (Huron/Sparta/Sherman, 65 nm)";
break;
case 124:
modelString="Athlon/Sempron/mobile Sempron (Lima/Sparta/Sherman, 65 nm)";
break;
case 127:
modelString="A64/Athlon Neo/Sempron/mobile Sempron (Lima/Huron/Sparta/Sherman, 65 nm)";
break;
case 193:
modelString="Athlon 64 FX (Windsor S1207 90 nm)";
break;
default :
modelString="AMD Athlon/Duron/Sempron model " + model;
break;
}
}
break;
case 16:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
isAthlon64Compatible=true;
isX64=true;
switch (model) {
case 2:
modelString="Phenom / Athlon / Opteron Gen 3 (Barcelona/Agena/Toliman/Kuma, 65 nm)";
break;
case 4:
modelString="Phenom II / Opteron Gen 3 (Shanghai/Deneb/Heka/Callisto, 45 nm)";
break;
case 5:
modelString="Athlon II X2/X3/X4 (Regor/Rana/Propus AM3, 45 nm)";
break;
case 6:
modelString="Mobile Athlon II/Turion II/Phenom II/Sempron/V-series (Regor/Caspian/Champlain, 45 nm)";
break;
case 8:
modelString="Six-Core Opteron/Opteron 4100 series (Istanbul/Lisbon, 45 nm)";
break;
case 9:
modelString="Opteron 6100 series (Magny-Cours G34, 45 nm)";
break;
case 10:
modelString="Phenom II X4/X6 (Zosma/Thuban AM3, 45 nm)";
break;
default :
modelString="AMD Athlon/Opteron model " + model;
break;
}
}
break;
case 17:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
isAthlon64Compatible=true;
isX64=true;
switch (model) {
case 3:
modelString="AMD Turion X2/Athlon X2/Sempron (Lion/Sable, 65 nm)";
break;
default :
modelString="AMD Athlon/Turion/Sempron model " + model;
break;
}
}
break;
case 18:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
isAthlon64Compatible=true;
isX64=true;
modelString="AMD APU model " + model;
}
break;
case 20:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
isAthlon64Compatible=true;
isBobcatCompatible=true;
isX64=true;
switch (model) {
case 1:
case 3:
modelString="AMD Bobcat APU";
break;
default :
modelString="AMD Bobcat APU model " + model;
break;
}
}
break;
case 21:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
isAthlon64Compatible=true;
isBulldozerCompatible=true;
isX64=true;
if (model >= 0x50 && model <= 0x5F) {
isPiledriverCompatible=true;
isSteamrollerCompatible=true;
isExcavatorCompatible=true;
modelString="Excavator";
}
 else if (model >= 0x30 && model <= 0x3F) {
isPiledriverCompatible=true;
isSteamrollerCompatible=true;
modelString="Steamroller";
}
 else if (model >= 0x10 && model <= 0x1F) {
isPiledriverCompatible=true;
modelString="Piledriver";
}
 else {
modelString="Bulldozer";
}
}
break;
case 22:
{
isK6Compatible=true;
isK6_2_Compatible=true;
isK6_3_Compatible=true;
isAthlonCompatible=true;
isAthlon64Compatible=true;
isBobcatCompatible=true;
isJaguarCompatible=true;
isX64=true;
modelString="Jaguar";
}
break;
}
return modelString;
}
