{
  try {
    connect();
    _in=new BufferedReader(new InputStreamReader(System.in));
    _out=new BufferedWriter(new OutputStreamWriter(System.out));
    _out.write("Starting up anonymous talk session" + NL);
    while (true) {
      String line=_in.readLine();
      if ((line == null) || (line.trim().length() <= 0))       continue;
      if (".".equals(line)) {
        boolean ok=_session.sendMessage(_peerDestination,("Peer disconnected at " + now()).getBytes());
        break;
      }
      if (line.startsWith(FILE_COMMAND) && (line.trim().length() > FILE_COMMAND.length())) {
        try {
          String file=line.substring(FILE_COMMAND.length());
          boolean sent=sendFile(file);
          if (!sent) {
            _out.write("Failed sending the file: " + file + NL);
          }
        }
 catch (        IOException ioe) {
          _out.write("Error sending the file: " + ioe.getMessage() + NL);
          _log.error("Error sending the file",ioe);
        }
      }
 else {
        boolean ok=_session.sendMessage(_peerDestination,("[" + now() + "] "+ line).getBytes());
        if (!ok) {
          _out.write("Failed sending message.  Peer disconnected?" + NL);
        }
      }
    }
  }
 catch (  IOException ioe) {
    _log.error("Error running",ioe);
  }
catch (  I2PSessionException ise) {
    _log.error("Error communicating",ise);
  }
catch (  DataFormatException dfe) {
    _log.error("Peer destination file is not valid",dfe);
  }
 finally {
    try {
      _log.debug("Exiting anonymous talk session");
      if (_out != null)       _out.write("Exiting anonymous talk session");
    }
 catch (    IOException ioe) {
    }
    if (_session != null) {
      try {
        _session.destroySession();
      }
 catch (      I2PSessionException ise) {
      }
    }
    try {
      Thread.sleep(5000);
    }
 catch (    InterruptedException ie) {
    }
  }
}
