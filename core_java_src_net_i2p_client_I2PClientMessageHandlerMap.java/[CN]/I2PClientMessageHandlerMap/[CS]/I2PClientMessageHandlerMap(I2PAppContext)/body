{
  int highest=DisconnectMessage.MESSAGE_TYPE;
  highest=Math.max(highest,SessionStatusMessage.MESSAGE_TYPE);
  highest=Math.max(highest,RequestLeaseSetMessage.MESSAGE_TYPE);
  highest=Math.max(highest,MessagePayloadMessage.MESSAGE_TYPE);
  highest=Math.max(highest,MessageStatusMessage.MESSAGE_TYPE);
  highest=Math.max(highest,SetDateMessage.MESSAGE_TYPE);
  highest=Math.max(highest,DestReplyMessage.MESSAGE_TYPE);
  highest=Math.max(highest,HostReplyMessage.MESSAGE_TYPE);
  highest=Math.max(highest,BandwidthLimitsMessage.MESSAGE_TYPE);
  highest=Math.max(highest,RequestVariableLeaseSetMessage.MESSAGE_TYPE);
  _handlers=new I2CPMessageHandler[highest + 1];
  _handlers[DisconnectMessage.MESSAGE_TYPE]=new DisconnectMessageHandler(context);
  _handlers[SessionStatusMessage.MESSAGE_TYPE]=new SessionStatusMessageHandler(context);
  _handlers[RequestLeaseSetMessage.MESSAGE_TYPE]=new RequestLeaseSetMessageHandler(context);
  _handlers[MessagePayloadMessage.MESSAGE_TYPE]=new MessagePayloadMessageHandler(context);
  _handlers[MessageStatusMessage.MESSAGE_TYPE]=new MessageStatusMessageHandler(context);
  _handlers[SetDateMessage.MESSAGE_TYPE]=new SetDateMessageHandler(context);
  _handlers[DestReplyMessage.MESSAGE_TYPE]=new DestReplyMessageHandler(context);
  _handlers[BandwidthLimitsMessage.MESSAGE_TYPE]=new BWLimitsMessageHandler(context);
  _handlers[RequestVariableLeaseSetMessage.MESSAGE_TYPE]=new RequestVariableLeaseSetMessageHandler(context);
  _handlers[HostReplyMessage.MESSAGE_TYPE]=new HostReplyMessageHandler(context);
}
