{
  Properties rv=new Properties();
  for (Iterator iter=options.keySet().iterator(); iter.hasNext(); ) {
    String key=(String)iter.next();
    String val=options.getProperty(key);
    if (key.startsWith("java")) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Skipping java.* property: " + key);
    }
 else     if (key.startsWith("user")) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Skipping user.* property: " + key);
    }
 else     if (key.startsWith("os")) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Skipping os.* property: " + key);
    }
 else     if (key.startsWith("sun")) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Skipping sun.* property: " + key);
    }
 else     if (key.startsWith("file")) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Skipping file.* property: " + key);
    }
 else     if (key.startsWith("line")) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Skipping line.* property: " + key);
    }
 else     if ((key.length() > 255) || (val.length() > 255)) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Not passing on property [" + key + "] in the session configuration as the value is too long (max = 255): "+ val);
    }
 else {
      rv.setProperty(key,val);
    }
  }
  return rv;
}
