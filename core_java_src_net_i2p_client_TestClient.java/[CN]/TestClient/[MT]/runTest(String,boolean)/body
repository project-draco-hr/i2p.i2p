{
  _stillRunning=true;
  try {
    I2PClient client=I2PClientFactory.createClient();
    File file=new File(keyfile);
    Destination d=client.createDestination(new FileOutputStream(file));
    if (isDest1)     _dest1=d;
 else     _dest2=d;
    _log.debug("Destination written to " + file.getAbsolutePath());
    Properties options=new Properties();
    if (System.getProperty(I2PClient.PROP_TCP_HOST) == null)     options.setProperty(I2PClient.PROP_TCP_HOST,"localhost");
 else     options.setProperty(I2PClient.PROP_TCP_HOST,System.getProperty(I2PClient.PROP_TCP_HOST));
    if (System.getProperty(I2PClient.PROP_TCP_PORT) == null)     options.setProperty(I2PClient.PROP_TCP_PORT,"7654");
 else     options.setProperty(I2PClient.PROP_TCP_PORT,System.getProperty(I2PClient.PROP_TCP_PORT));
    I2PSession session=client.createSession(new FileInputStream(file),options);
    session.setSessionListener(this);
    _log.debug("Before connect...");
    session.connect();
    _log.debug("Connected");
    while ((_dest1 == null) || (_dest2 == null))     try {
      Thread.sleep(500);
    }
 catch (    InterruptedException ie) {
    }
    if (isDest1) {
      Destination otherD=(isDest1 ? _dest2 : _dest1);
      boolean accepted=session.sendMessage(otherD,("Hello other side.  I am" + (isDest1 ? "" : " NOT") + " dest1").getBytes());
    }
 else {
      while (_stillRunning) {
        try {
          _log.debug("waiting for a message...");
          Thread.sleep(1000);
        }
 catch (        InterruptedException ie) {
        }
      }
      try {
        Thread.sleep(5000);
      }
 catch (      InterruptedException ie) {
      }
      System.exit(0);
    }
  }
 catch (  Exception e) {
    _log.error("Error running the test for isDest1? " + isDest1,e);
  }
}
