{
  ByteArrayInputStream dgStream=new ByteArrayInputStream(dgram);
  this.valid=false;
  try {
    rxDest=Destination.create(dgStream);
    SigType type=rxDest.getSigningPublicKey().getType();
    if (type == null)     throw new DataFormatException("unsupported sig type");
    rxSign=new Signature(type);
    rxSign.readBytes(dgStream);
    rxPayloadLen=dgStream.read(rxPayload);
    if (type == SigType.DSA_SHA1) {
      if (rxHash == null)       rxHash=new byte[Hash.HASH_LENGTH];
      hashGen.calculateHash(rxPayload,0,rxPayloadLen,rxHash,0);
    }
 else {
      rxHash=null;
    }
  }
 catch (  IOException e) {
    Log log=I2PAppContext.getGlobalContext().logManager().getLog(I2PDatagramDissector.class);
    log.error("Caught IOException - INCONSISTENT STATE!",e);
  }
}
