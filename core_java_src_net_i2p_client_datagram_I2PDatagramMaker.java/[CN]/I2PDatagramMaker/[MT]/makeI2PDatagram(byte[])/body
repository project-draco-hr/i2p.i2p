{
  sxDGram.reset();
  try {
    sxDGram.write(sxDestBytes);
    SigType type=sxPrivKey.getType();
    if (type == null)     throw new IllegalStateException("Unsupported sig type");
    Signature sig;
    if (type == SigType.DSA_SHA1) {
      byte[] hash=SimpleByteCache.acquire(Hash.HASH_LENGTH);
      hashGen.calculateHash(payload,0,payload.length,hash,0);
      sig=dsaEng.sign(hash,sxPrivKey);
      SimpleByteCache.release(hash);
    }
 else {
      sig=dsaEng.sign(payload,sxPrivKey);
    }
    sig.writeBytes(sxDGram);
    sxDGram.write(payload);
    if (sxDGram.size() > DGRAM_BUFSIZE)     throw new IllegalArgumentException("Too big");
    return sxDGram.toByteArray();
  }
 catch (  IOException e) {
    Log log=I2PAppContext.getGlobalContext().logManager().getLog(I2PDatagramMaker.class);
    log.error("Caught IOException",e);
    return null;
  }
catch (  DataFormatException e) {
    Log log=I2PAppContext.getGlobalContext().logManager().getLog(I2PDatagramMaker.class);
    log.error("Caught DataFormatException",e);
    return null;
  }
}
