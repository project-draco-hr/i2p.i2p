{
synchronized (_stateLock) {
    while (true) {
switch (_state) {
case INIT:
        throw new I2PSessionException("Not open, must call connect() first");
case OPENING:
case GOTDATE:
      try {
        _stateLock.wait(5 * 1000);
        continue;
      }
 catch (      InterruptedException ie) {
        throw new I2PSessionException("Interrupted",ie);
      }
case OPEN:
    return;
case CLOSING:
case CLOSED:
  throw new I2PSessionException("Already closed");
}
}
}
}
