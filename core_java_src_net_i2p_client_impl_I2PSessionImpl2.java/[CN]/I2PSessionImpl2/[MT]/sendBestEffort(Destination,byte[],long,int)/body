{
  long nonce=_sendMessageNonce.incrementAndGet();
  MessageState state=new MessageState(_context,nonce,getPrefix());
  boolean actuallyWait=false;
  if (actuallyWait)   _sendingStates.put(Long.valueOf(nonce),state);
  _producer.sendMessage(this,dest,nonce,payload,expires,flags);
  if (actuallyWait) {
    try {
      state.waitForAccept(_context.clock().now() + getTimeout());
    }
 catch (    InterruptedException ie) {
      throw new I2PSessionException("interrupted");
    }
 finally {
      _sendingStates.remove(Long.valueOf(nonce));
    }
  }
  boolean found=!actuallyWait || state.wasAccepted();
  if (found) {
    if (_log.shouldLog(Log.INFO))     _log.info(getPrefix() + "Message sent after " + state.getElapsed()+ "ms with "+ payload.length+ " bytes");
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info(getPrefix() + "Message send failed after " + state.getElapsed()+ "ms with "+ payload.length+ " bytes");
    return false;
  }
  return found;
}
