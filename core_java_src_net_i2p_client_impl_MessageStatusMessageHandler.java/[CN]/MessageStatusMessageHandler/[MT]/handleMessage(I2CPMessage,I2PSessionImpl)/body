{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Handle message " + message);
  MessageStatusMessage msg=(MessageStatusMessage)message;
  int status=msg.getStatus();
  long id=msg.getMessageId();
switch (status) {
case MessageStatusMessage.STATUS_AVAILABLE:
    ReceiveMessageBeginMessage m=new ReceiveMessageBeginMessage();
  m.setMessageId(id);
m.setSessionId(msg.getSessionId());
try {
session.sendMessage(m);
}
 catch (I2PSessionException ise) {
_log.error("Error asking for the message",ise);
}
return;
case MessageStatusMessage.STATUS_SEND_ACCEPTED:
session.receiveStatus((int)id,msg.getNonce(),status);
return;
default :
if (msg.isSuccessful()) {
if (_log.shouldLog(Log.DEBUG)) _log.debug("Message delivery succeeded for message " + id);
}
 else {
if (_log.shouldLog(Log.INFO)) _log.info("Message delivery FAILED (" + status + ") for message "+ id);
}
session.receiveStatus((int)id,msg.getNonce(),status);
return;
}
}
