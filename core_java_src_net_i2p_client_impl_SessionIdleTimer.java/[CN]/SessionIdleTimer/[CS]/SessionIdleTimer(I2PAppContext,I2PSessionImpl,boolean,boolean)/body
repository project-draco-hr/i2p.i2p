{
  if (!(reduce || shutdown))   throw new IllegalArgumentException("At least one must be enabled");
  _context=context;
  _log=context.logManager().getLog(SessionIdleTimer.class);
  _session=session;
  Properties props=session.getOptions();
  long minimumTime=Long.MAX_VALUE;
  long reduceTime=0;
  long shutdownTime=0;
  int reduceQuantity=0;
  if (reduce) {
    reduceQuantity=1;
    String p=props.getProperty("i2cp.reduceQuantity");
    if (p != null) {
      try {
        reduceQuantity=Math.max(Integer.parseInt(p),1);
      }
 catch (      NumberFormatException nfe) {
      }
    }
    reduceTime=DEFAULT_REDUCE_TIME;
    p=props.getProperty("i2cp.reduceIdleTime");
    if (p != null) {
      try {
        reduceTime=Math.max(Long.parseLong(p),MINIMUM_TIME);
      }
 catch (      NumberFormatException nfe) {
      }
    }
    minimumTime=reduceTime;
  }
  if (shutdown) {
    shutdownTime=DEFAULT_CLOSE_TIME;
    String p=props.getProperty("i2cp.closeIdleTime");
    if (p != null) {
      try {
        shutdownTime=Math.max(Long.parseLong(p),MINIMUM_TIME);
      }
 catch (      NumberFormatException nfe) {
      }
    }
    minimumTime=Math.min(minimumTime,shutdownTime);
    if (reduce && shutdownTime <= reduceTime)     reduce=false;
  }
  _reduceEnabled=reduce;
  _reduceQuantity=reduceQuantity;
  _reduceTime=reduceTime;
  _shutdownEnabled=shutdown;
  _shutdownTime=shutdownTime;
  _minimumTime=minimumTime;
}
