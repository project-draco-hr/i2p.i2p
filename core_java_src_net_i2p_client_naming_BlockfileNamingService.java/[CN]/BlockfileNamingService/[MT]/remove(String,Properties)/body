{
  if (_readOnly) {
    _log.error("Remove entry failed, read-only hosts database");
    return false;
  }
  String key=hostname.toLowerCase();
  String listname=FALLBACK_LIST;
  if (options != null) {
    String list=options.getProperty("list");
    if (list != null) {
      listname=list;
    }
  }
synchronized (_bf) {
    if (_isClosed)     return false;
    try {
      SkipList sl=_bf.getIndex(listname,_stringSerializer,_destSerializer);
      if (sl == null)       return false;
      Object removed=removeEntry(sl,key);
      boolean rv=removed != null;
      if (rv) {
        removeCache(hostname);
        try {
          removeReverseEntry(key,((DestEntry)removed).dest);
        }
 catch (        ClassCastException cce) {
          _log.error("DB reverse remove error",cce);
        }
        for (        NamingServiceListener nsl : _listeners) {
          nsl.entryRemoved(this,key);
        }
      }
      return rv;
    }
 catch (    IOException ioe) {
      _log.error("DB remove error",ioe);
      return false;
    }
catch (    RuntimeException re) {
      _log.error("DB remove error",re);
      return false;
    }
  }
}
