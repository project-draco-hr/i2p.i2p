{
  if (props == null)   return false;
  boolean rv=false;
  if (true) {
    StringWriter buf=new StringWriter(1024);
    String sig=props.getProperty(PROP_SIG);
    String olddest=props.getProperty(PROP_DEST);
    if (sig == null || olddest == null)     return false;
    try {
      writeProps(buf,true,true);
    }
 catch (    IOException ioe) {
      return false;
    }
    byte[] sdata=Base64.decode(sig);
    if (sdata == null)     return false;
    Destination d;
    try {
      d=new Destination(olddest);
    }
 catch (    DataFormatException dfe) {
      return false;
    }
    SigningPublicKey spk=d.getSigningPublicKey();
    SigType type=spk.getType();
    if (type == null)     return false;
    Signature s;
    try {
      s=new Signature(type,sdata);
    }
 catch (    IllegalArgumentException iae) {
      return false;
    }
    rv=DSAEngine.getInstance().verifySignature(s,DataHelper.getUTF8(buf.toString()),spk);
  }
  return rv;
}
