{
  if (_cache.size() < CACHE_MAX_SIZE)   return;
  boolean full=true;
  Object oldestKey=null;
  long oldestExp=Long.MAX_VALUE;
  ArrayList deleteList=new ArrayList(CACHE_MAX_SIZE);
  for (Iterator iter=_cache.entrySet().iterator(); iter.hasNext(); ) {
    Map.Entry entry=(Map.Entry)iter.next();
    CacheEntry ce=(CacheEntry)entry.getValue();
    if (ce.isExpired()) {
      deleteList.add(entry.getKey());
      full=false;
      continue;
    }
    if (oldestKey == null || ce.exp < oldestExp) {
      oldestKey=entry.getKey();
      oldestExp=ce.exp;
    }
  }
  if (full && oldestKey != null)   deleteList.add(oldestKey);
  for (Iterator iter=deleteList.iterator(); iter.hasNext(); ) {
    _cache.remove(iter.next());
  }
}
