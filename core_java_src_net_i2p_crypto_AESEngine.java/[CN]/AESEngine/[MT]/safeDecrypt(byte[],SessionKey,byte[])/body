{
  if ((iv == null) || (payload == null) || (sessionKey == null)|| (iv.length != 16))   return null;
  byte decr[]=new byte[payload.length];
  decrypt(payload,0,decr,0,sessionKey,iv,payload.length);
  if (decr == null) {
    _log.error("Error decrypting the data - payload " + payload.length + " decrypted to null");
    return null;
  }
  int cur=0;
  byte h[]=_context.sha().calculateHash(iv).getData();
  for (int i=0; i < Hash.HASH_LENGTH; i++) {
    if (decr[i] != h[i]) {
      _log.error("Hash does not match [key=" + sessionKey + " / iv ="+ DataHelper.toString(iv,iv.length)+ "]",new Exception("Hash error"));
      return null;
    }
  }
  cur+=Hash.HASH_LENGTH;
  long len=DataHelper.fromLong(decr,cur,4);
  cur+=4;
  if (cur + len > decr.length) {
    _log.error("Not enough to read");
    return null;
  }
  byte data[]=new byte[(int)len];
  System.arraycopy(decr,cur,data,0,(int)len);
  return data;
}
