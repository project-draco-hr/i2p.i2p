{
  byte orig[]=new byte[1024 * 32];
  RandomSource.getInstance().nextBytes(orig);
  SessionKey key=KeyGenerator.getInstance().generateSessionKey();
  byte iv[]="there once was a".getBytes();
  for (int i=0; i < 20; i++) {
    runTest(orig,key,iv);
  }
  _log.info("Done testing 32KB data");
  orig=new byte[20];
  RandomSource.getInstance().nextBytes(orig);
  for (int i=0; i < 20; i++) {
    runTest(orig,key,iv);
  }
  _log.info("Done testing 20 byte data");
  orig=new byte[3];
  RandomSource.getInstance().nextBytes(orig);
  for (int i=0; i < 20; i++) {
    runTest(orig,key,iv);
  }
  _log.info("Done testing 3 byte data");
  orig=new byte[0];
  RandomSource.getInstance().nextBytes(orig);
  for (int i=0; i < 20; i++) {
    runTest(orig,key,iv);
  }
  _log.info("Done testing 0 byte data");
  orig=new byte[32];
  RandomSource.getInstance().nextBytes(orig);
  runOffsetTest(orig,key,iv);
  _log.info("Done testing offset test (it should have come back with a statement NOT EQUAL!)");
  try {
    Thread.sleep(30 * 1000);
  }
 catch (  InterruptedException ie) {
  }
}
