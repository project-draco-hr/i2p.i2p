{
  if (_RDEBUG)   trace(_IN,"blockEncrypt(" + in + ", "+ inOffset+ ", "+ sessionKey+ ")");
  int[][] Ke=(int[][])((Object[])sessionKey)[0];
  int ROUNDS=Ke.length - 1;
  int[] Ker=Ke[0];
  int t0=((in[inOffset++] & 0xFF) << 24 | (in[inOffset++] & 0xFF) << 16 | (in[inOffset++] & 0xFF) << 8 | (in[inOffset++] & 0xFF)) ^ Ker[0];
  int t1=((in[inOffset++] & 0xFF) << 24 | (in[inOffset++] & 0xFF) << 16 | (in[inOffset++] & 0xFF) << 8 | (in[inOffset++] & 0xFF)) ^ Ker[1];
  int t2=((in[inOffset++] & 0xFF) << 24 | (in[inOffset++] & 0xFF) << 16 | (in[inOffset++] & 0xFF) << 8 | (in[inOffset++] & 0xFF)) ^ Ker[2];
  int t3=((in[inOffset++] & 0xFF) << 24 | (in[inOffset++] & 0xFF) << 16 | (in[inOffset++] & 0xFF) << 8 | (in[inOffset++] & 0xFF)) ^ Ker[3];
  int a0, a1, a2, a3;
  for (int r=1; r < ROUNDS; r++) {
    Ker=Ke[r];
    a0=(_T1[(t0 >>> 24) & 0xFF] ^ _T2[(t1 >>> 16) & 0xFF] ^ _T3[(t2 >>> 8) & 0xFF]^ _T4[t3 & 0xFF]) ^ Ker[0];
    a1=(_T1[(t1 >>> 24) & 0xFF] ^ _T2[(t2 >>> 16) & 0xFF] ^ _T3[(t3 >>> 8) & 0xFF]^ _T4[t0 & 0xFF]) ^ Ker[1];
    a2=(_T1[(t2 >>> 24) & 0xFF] ^ _T2[(t3 >>> 16) & 0xFF] ^ _T3[(t0 >>> 8) & 0xFF]^ _T4[t1 & 0xFF]) ^ Ker[2];
    a3=(_T1[(t3 >>> 24) & 0xFF] ^ _T2[(t0 >>> 16) & 0xFF] ^ _T3[(t1 >>> 8) & 0xFF]^ _T4[t2 & 0xFF]) ^ Ker[3];
    t0=a0;
    t1=a1;
    t2=a2;
    t3=a3;
    if (_RDEBUG && _debuglevel > 6)     System.out.println("CT" + r + "="+ intToString(t0)+ intToString(t1)+ intToString(t2)+ intToString(t3));
  }
  Ker=Ke[ROUNDS];
  int tt=Ker[0];
  result[outOffset++]=(byte)(_S[(t0 >>> 24) & 0xFF] ^ (tt >>> 24));
  result[outOffset++]=(byte)(_S[(t1 >>> 16) & 0xFF] ^ (tt >>> 16));
  result[outOffset++]=(byte)(_S[(t2 >>> 8) & 0xFF] ^ (tt >>> 8));
  result[outOffset++]=(byte)(_S[t3 & 0xFF] ^ tt);
  tt=Ker[1];
  result[outOffset++]=(byte)(_S[(t1 >>> 24) & 0xFF] ^ (tt >>> 24));
  result[outOffset++]=(byte)(_S[(t2 >>> 16) & 0xFF] ^ (tt >>> 16));
  result[outOffset++]=(byte)(_S[(t3 >>> 8) & 0xFF] ^ (tt >>> 8));
  result[outOffset++]=(byte)(_S[t0 & 0xFF] ^ tt);
  tt=Ker[2];
  result[outOffset++]=(byte)(_S[(t2 >>> 24) & 0xFF] ^ (tt >>> 24));
  result[outOffset++]=(byte)(_S[(t3 >>> 16) & 0xFF] ^ (tt >>> 16));
  result[outOffset++]=(byte)(_S[(t0 >>> 8) & 0xFF] ^ (tt >>> 8));
  result[outOffset++]=(byte)(_S[t1 & 0xFF] ^ tt);
  tt=Ker[3];
  result[outOffset++]=(byte)(_S[(t3 >>> 24) & 0xFF] ^ (tt >>> 24));
  result[outOffset++]=(byte)(_S[(t0 >>> 16) & 0xFF] ^ (tt >>> 16));
  result[outOffset++]=(byte)(_S[(t1 >>> 8) & 0xFF] ^ (tt >>> 8));
  result[outOffset++]=(byte)(_S[t2 & 0xFF] ^ tt);
  if (_RDEBUG && _debuglevel > 6) {
    System.out.println("CT=" + toString(result));
    System.out.println();
  }
  if (_RDEBUG)   trace(_OUT,"blockEncrypt()");
}
