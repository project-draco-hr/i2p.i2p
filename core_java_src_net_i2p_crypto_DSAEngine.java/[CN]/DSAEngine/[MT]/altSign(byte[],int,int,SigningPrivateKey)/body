{
  SigType type=privateKey.getType();
  if (type == SigType.DSA_SHA1)   return altSignSHA1(data,offset,len,privateKey);
  PrivateKey privKey=SigUtil.toJavaKey(privateKey);
  byte[] sigbytes;
  if (type.getBaseAlgorithm() == SigAlgo.EdDSA) {
    EdDSAEngine jsig=new EdDSAEngine(type.getDigestInstance());
    jsig.initSign(privKey);
    sigbytes=jsig.signOneShot(data,offset,len);
  }
 else {
    java.security.Signature jsig=java.security.Signature.getInstance(type.getAlgorithmName());
    jsig.initSign(privKey,_context.random());
    jsig.update(data,offset,len);
    sigbytes=jsig.sign();
  }
  return SigUtil.fromJavaSig(sigbytes,type);
}
