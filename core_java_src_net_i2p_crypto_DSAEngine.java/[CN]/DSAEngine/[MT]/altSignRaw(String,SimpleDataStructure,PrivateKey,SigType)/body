{
  int hashlen=hash.length();
  if (type.getHashLen() != hashlen)   throw new IllegalArgumentException("type mismatch hash=" + hash.getClass() + " key="+ type);
  byte[] sigbytes;
  if (type.getBaseAlgorithm() == SigAlgo.EdDSA) {
    EdDSAEngine jsig=new EdDSAEngine();
    jsig.initSign(privKey);
    sigbytes=jsig.signOneShot(hash.getData());
  }
 else {
    java.security.Signature jsig=java.security.Signature.getInstance(type.getAlgorithmName());
    jsig.initSign(privKey,_context.random());
    jsig.update(hash.getData());
    sigbytes=jsig.sign();
  }
  return SigUtil.fromJavaSig(sigbytes,type);
}
