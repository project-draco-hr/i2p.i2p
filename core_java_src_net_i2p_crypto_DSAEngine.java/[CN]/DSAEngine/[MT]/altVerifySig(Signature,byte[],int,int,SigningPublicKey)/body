{
  SigType type=signature.getType();
  if (type != verifyingKey.getType())   throw new IllegalArgumentException("type mismatch sig=" + type + " key="+ verifyingKey.getType());
  if (type == SigType.DSA_SHA1)   return altVerifySigSHA1(signature,data,offset,len,verifyingKey);
  PublicKey pubKey=SigUtil.toJavaKey(verifyingKey);
  byte[] sigbytes=SigUtil.toJavaSig(signature);
  boolean rv;
  if (type.getBaseAlgorithm() == SigAlgo.EdDSA) {
    EdDSAEngine jsig=new EdDSAEngine(type.getDigestInstance());
    jsig.initVerify(pubKey);
    rv=jsig.verifyOneShot(data,offset,len,sigbytes);
  }
 else {
    java.security.Signature jsig=java.security.Signature.getInstance(type.getAlgorithmName());
    jsig.initVerify(pubKey);
    jsig.update(data,offset,len);
    rv=jsig.verify(sigbytes);
  }
  return rv;
}
