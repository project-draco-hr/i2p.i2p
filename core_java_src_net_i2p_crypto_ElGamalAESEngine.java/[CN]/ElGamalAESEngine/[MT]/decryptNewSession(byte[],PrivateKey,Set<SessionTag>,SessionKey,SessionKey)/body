{
  if (data == null) {
    return null;
  }
 else   if (data.length < 514) {
    return null;
  }
  byte elgEncr[]=new byte[514];
  if (data.length > 514) {
    System.arraycopy(data,0,elgEncr,0,514);
  }
 else {
    System.arraycopy(data,0,elgEncr,514 - data.length,data.length);
  }
  byte elgDecr[]=_context.elGamalEngine().decrypt(elgEncr,targetPrivateKey);
  if (elgDecr == null) {
    return null;
  }
  int offset=0;
  byte key[]=new byte[SessionKey.KEYSIZE_BYTES];
  System.arraycopy(elgDecr,offset,key,0,SessionKey.KEYSIZE_BYTES);
  offset+=SessionKey.KEYSIZE_BYTES;
  usedKey.setData(key);
  byte[] preIV=SimpleByteCache.acquire(32);
  System.arraycopy(elgDecr,offset,preIV,0,32);
  offset+=32;
  byte[] iv=halfHash(preIV);
  SimpleByteCache.release(preIV);
  _context.random().harvester().feedEntropy("ElG/AES",elgDecr,offset,elgDecr.length - offset);
  byte aesDecr[]=decryptAESBlock(data,514,data.length - 514,usedKey,iv,null,foundTags,foundKey);
  SimpleByteCache.release(iv);
  return aesDecr;
}
