{
  BigInteger a=new NativeBigInteger(PUBKEY_EXPONENT_SIZE,_context.random());
  BigInteger aalpha=CryptoConstants.elgg.modPow(a,CryptoConstants.elgp);
  SimpleDataStructure[] keys=new SimpleDataStructure[2];
  keys[0]=new PublicKey();
  keys[1]=new PrivateKey();
  try {
    keys[0].setData(SigUtil.rectify(aalpha,PublicKey.KEYSIZE_BYTES));
    keys[1].setData(SigUtil.rectify(a,PrivateKey.KEYSIZE_BYTES));
  }
 catch (  InvalidKeyException ike) {
    throw new IllegalArgumentException(ike);
  }
  return keys;
}
