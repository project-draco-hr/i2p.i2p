{
  RandomSource.getInstance().nextBoolean();
  try {
    Thread.sleep(1000);
  }
 catch (  InterruptedException ie) {
  }
  int runs=200;
  Collection<SigType> toTest;
  if (args.length > 0) {
    toTest=new ArrayList<SigType>();
    for (int i=0; i < args.length; i++) {
      SigType type=SigType.parseSigType(args[i]);
      if (type != null)       toTest.add(type);
 else       System.out.println("Unknown type: " + args[i]);
    }
    if (toTest.isEmpty()) {
      System.out.println("No types to test");
      return;
    }
  }
 else {
    toTest=Arrays.asList(SigType.values());
  }
  for (int j=0; j < 2; j++) {
    for (    SigType type : toTest) {
      if (!type.isAvailable()) {
        System.out.println("Skipping unavailable: " + type);
        continue;
      }
      try {
        System.out.println("Testing " + type);
        testSig(type,runs);
      }
 catch (      Exception e) {
        System.out.println("error testing " + type);
        e.printStackTrace();
      }
    }
    runs=1000;
  }
}
