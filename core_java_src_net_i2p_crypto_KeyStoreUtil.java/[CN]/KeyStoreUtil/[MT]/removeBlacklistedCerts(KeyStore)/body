{
  if (SystemVersion.isAndroid())   return 0;
  int count=0;
  try {
    MessageDigest md=SHA1.getInstance();
    for (Enumeration<String> e=ks.aliases(); e.hasMoreElements(); ) {
      String alias=e.nextElement();
      if (ks.isCertificateEntry(alias)) {
        Certificate c=ks.getCertificate(alias);
        if (c != null && (c instanceof X509Certificate)) {
          byte[] enc=c.getEncoded();
          if (enc != null) {
            byte[] h=md.digest(enc);
            if (_blacklist.contains(new SHA1Hash(h))) {
              ks.deleteEntry(alias);
              count++;
              if (!_blacklistLogged) {
                X509Certificate xc=(X509Certificate)c;
                BigInteger serial=xc.getSerialNumber();
                String cn=CertUtil.getIssuerValue(xc,"CN");
                String ou=CertUtil.getIssuerValue(xc,"OU");
                warn("Ignoring blacklisted certificate \"" + alias + "\" CN: \""+ cn+ "\" OU: \""+ ou+ "\" s/n: "+ serial.toString(16),null);
              }
            }
          }
 else {
            info("null encoding!!!");
          }
        }
      }
    }
  }
 catch (  GeneralSecurityException e) {
  }
  if (count > 0)   _blacklistLogged=true;
  return count;
}
