{
  byte[] version={(byte)0xa0,3,2,1,2};
  byte[] serial=new byte[6];
  serial[0]=2;
  serial[1]=4;
  RandomSource.getInstance().nextBytes(serial,2,4);
  serial[2]&=0x7f;
  String dname="CN=" + cname + ",OU="+ ou+ ",O="+ o+ ",L="+ l+ ",ST="+ st+ ",C="+ c;
  byte[] issuer=(new X500Principal(dname,OIDS)).getEncoded();
  byte[] validity=getValidity(validDays);
  byte[] subject=issuer;
  byte[] pubbytes=jpub.getEncoded();
  byte[] extbytes=getExtensions(pubbytes);
  int len=version.length + serial.length + sigoid.length+ issuer.length+ validity.length+ subject.length+ pubbytes.length+ extbytes.length;
  int totlen=spaceFor(len);
  byte[] rv=new byte[totlen];
  int idx=0;
  rv[idx++]=0x30;
  idx=intToASN1(rv,idx,len);
  System.out.println(net.i2p.util.HexDump.dump(version));
  System.arraycopy(version,0,rv,idx,version.length);
  idx+=version.length;
  System.out.println("serial");
  System.out.println(net.i2p.util.HexDump.dump(serial));
  System.arraycopy(serial,0,rv,idx,serial.length);
  idx+=serial.length;
  System.out.println("oid");
  System.out.println(net.i2p.util.HexDump.dump(sigoid));
  System.arraycopy(sigoid,0,rv,idx,sigoid.length);
  idx+=sigoid.length;
  System.out.println("issuer");
  System.out.println(net.i2p.util.HexDump.dump(issuer));
  System.arraycopy(issuer,0,rv,idx,issuer.length);
  idx+=issuer.length;
  System.out.println("valid");
  System.out.println(net.i2p.util.HexDump.dump(validity));
  System.arraycopy(validity,0,rv,idx,validity.length);
  idx+=validity.length;
  System.out.println("subject");
  System.out.println(net.i2p.util.HexDump.dump(subject));
  System.arraycopy(subject,0,rv,idx,subject.length);
  idx+=subject.length;
  System.out.println("pub");
  System.out.println(net.i2p.util.HexDump.dump(pubbytes));
  System.arraycopy(pubbytes,0,rv,idx,pubbytes.length);
  idx+=pubbytes.length;
  System.out.println("extensions");
  System.out.println(net.i2p.util.HexDump.dump(extbytes));
  System.arraycopy(extbytes,0,rv,idx,extbytes.length);
  System.out.println("TBS cert");
  System.out.println(net.i2p.util.HexDump.dump(rv));
  return rv;
}
