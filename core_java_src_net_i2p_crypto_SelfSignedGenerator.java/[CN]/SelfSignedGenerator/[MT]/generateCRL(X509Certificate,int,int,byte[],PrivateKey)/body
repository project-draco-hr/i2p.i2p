{
  SigningPrivateKey priv=SigUtil.fromJavaKey(jpriv);
  byte[] tbs=genTBSCRL(cert,validDays,crlNum,sigoid);
  int tbslen=tbs.length;
  Signature sig=DSAEngine.getInstance().sign(tbs,priv);
  if (sig == null)   throw new GeneralSecurityException("sig failed");
  byte[] sigbytes=SigUtil.toJavaSig(sig);
  int seqlen=tbslen + sigoid.length + spaceFor(sigbytes.length + 1);
  int totlen=spaceFor(seqlen);
  byte[] cb=new byte[totlen];
  int idx=0;
  cb[idx++]=0x30;
  idx=intToASN1(cb,idx,seqlen);
  System.arraycopy(tbs,0,cb,idx,tbs.length);
  idx+=tbs.length;
  System.arraycopy(sigoid,0,cb,idx,sigoid.length);
  idx+=sigoid.length;
  cb[idx++]=0x03;
  idx=intToASN1(cb,idx,sigbytes.length + 1);
  cb[idx++]=0;
  System.arraycopy(sigbytes,0,cb,idx,sigbytes.length);
  ByteArrayInputStream bais=new ByteArrayInputStream(cb);
  X509CRL rv;
  try {
    CertificateFactory cf=CertificateFactory.getInstance("X.509");
    rv=(X509CRL)cf.generateCRL(bais);
  }
 catch (  IllegalArgumentException iae) {
    throw new GeneralSecurityException("cert error",iae);
  }
  return rv;
}
