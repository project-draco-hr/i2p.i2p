{
  if (asn[0] != 0x30)   throw new SignatureException("asn[0] = " + (asn[0] & 0xff));
  int idx=2;
  if ((asn[1] & 0x80) != 0)   idx+=asn[1] & 0x7f;
  if (asn[idx] != 0x02)   throw new SignatureException("asn[2] = " + (asn[idx] & 0xff));
  byte[] rv=new byte[len];
  int sublen=len / 2;
  int rlen=asn[++idx];
  if ((rlen & 0x80) != 0) {
    if ((rlen & 0xff) == 0x81) {
      rlen=asn[++idx] & 0xff;
    }
 else     if ((rlen & 0xff) == 0x82) {
      rlen=asn[++idx] & 0xff;
      rlen<<=8;
      rlen|=asn[++idx] & 0xff;
    }
 else {
      throw new SignatureException("FIXME R length > 65535");
    }
  }
  if ((asn[++idx] & 0x80) != 0)   throw new SignatureException("R is negative");
  if (rlen > sublen + 1)   throw new SignatureException("R too big " + rlen);
  if (rlen == sublen + 1)   System.arraycopy(asn,idx + 1,rv,0,sublen);
 else   System.arraycopy(asn,idx,rv,sublen - rlen,rlen);
  idx+=rlen;
  if (asn[idx] != 0x02)   throw new SignatureException("asn[s] = " + (asn[idx] & 0xff));
  int slen=asn[++idx];
  if ((slen & 0x80) != 0) {
    if ((slen & 0xff) == 0x81) {
      slen=asn[++idx] & 0xff;
    }
 else     if ((slen & 0xff) == 0x82) {
      slen=asn[++idx] & 0xff;
      slen<<=8;
      slen|=asn[++idx] & 0xff;
    }
 else {
      throw new SignatureException("FIXME S length > 65535");
    }
  }
  if ((asn[++idx] & 0x80) != 0)   throw new SignatureException("S is negative");
  if (slen > sublen + 1)   throw new SignatureException("S too big " + slen);
  if (slen == sublen + 1)   System.arraycopy(asn,idx + 1,rv,sublen,sublen);
 else   System.arraycopy(asn,idx,rv,len - slen,slen);
  return rv;
}
