{
  NativeBigInteger k=null;
  BigInteger y=null;
  while (k == null) {
    k=new NativeBigInteger(ctx.keyGenerator().getElGamalExponentSize(),ctx.random());
    if (BigInteger.ZERO.compareTo(k) == 0) {
      k=null;
      continue;
    }
    BigInteger kPlus2=k.add(_two);
    if (kPlus2.compareTo(CryptoConstants.elgp) > 0)     k=null;
  }
  y=CryptoConstants.elgg.modPow(k,CryptoConstants.elgp);
  BigInteger yk[]=new BigInteger[2];
  yk[0]=y;
  yk[1]=k;
  return yk;
}
