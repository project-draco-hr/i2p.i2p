{
  if (keySpec.isAssignableFrom(ElGamalPublicKeySpec.class) && key instanceof ElGamalPublicKey) {
    ElGamalPublicKey k=(ElGamalPublicKey)key;
    DHParameterSpec dhp=k.getParams();
    if (dhp != null) {
      if (dhp.getP().equals(I2P_ELGAMAL_2048_SPEC.getP()) && dhp.getG().equals(I2P_ELGAMAL_2048_SPEC.getG()))       return (T)new ElGamalPrivateKeySpec(k.getY(),I2P_ELGAMAL_2048_SPEC);
      return (T)new ElGamalPrivateKeySpec(k.getY(),new ElGamalParameterSpec(dhp.getP(),dhp.getG()));
    }
  }
 else   if (keySpec.isAssignableFrom(ElGamalPrivateKeySpec.class) && key instanceof ElGamalPrivateKey) {
    ElGamalPrivateKey k=(ElGamalPrivateKey)key;
    DHParameterSpec dhp=k.getParams();
    if (dhp != null) {
      if (dhp.getP().equals(I2P_ELGAMAL_2048_SPEC.getP()) && dhp.getG().equals(I2P_ELGAMAL_2048_SPEC.getG()))       return (T)new ElGamalPrivateKeySpec(k.getX(),I2P_ELGAMAL_2048_SPEC);
      return (T)new ElGamalPrivateKeySpec(k.getX(),new ElGamalParameterSpec(dhp.getP(),dhp.getG()));
    }
  }
  throw new InvalidKeySpecException("not implemented yet " + key + " "+ keySpec);
}
