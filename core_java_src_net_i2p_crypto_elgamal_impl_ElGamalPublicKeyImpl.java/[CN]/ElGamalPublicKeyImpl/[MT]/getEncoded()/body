{
  byte[] pb=elSpec.getP().toByteArray();
  byte[] gb=elSpec.getG().toByteArray();
  byte[] yb=y.toByteArray();
  int seq3len=spaceFor(pb.length) + spaceFor(gb.length);
  int seq2len=8 + spaceFor(seq3len);
  int seq1len=spaceFor(seq2len) + spaceFor(yb.length + 1);
  int totlen=spaceFor(seq1len);
  byte[] rv=new byte[totlen];
  int idx=0;
  rv[idx++]=0x30;
  idx=intToASN1(rv,idx,seq1len);
  rv[idx++]=0x30;
  idx=intToASN1(rv,idx,seq2len);
  rv[idx++]=0x06;
  rv[idx++]=6;
  rv[idx++]=(1 * 40) + 3;
  rv[idx++]=14;
  rv[idx++]=7;
  rv[idx++]=2;
  rv[idx++]=1;
  rv[idx++]=1;
  rv[idx++]=0x30;
  idx=intToASN1(rv,idx,seq3len);
  rv[idx++]=0x02;
  idx=intToASN1(rv,idx,pb.length);
  System.arraycopy(pb,0,rv,idx,pb.length);
  idx+=pb.length;
  rv[idx++]=0x02;
  idx=intToASN1(rv,idx,gb.length);
  System.arraycopy(gb,0,rv,idx,gb.length);
  idx+=gb.length;
  rv[idx++]=0x03;
  idx=intToASN1(rv,idx,yb.length + 1);
  rv[idx++]=0;
  System.arraycopy(yb,0,rv,idx,yb.length);
  return rv;
}
