{
  byte decode0=DECODABET[source[srcOffset++]];
  byte decode1=DECODABET[source[srcOffset++]];
  if (decode0 < 0 || decode1 < 0)   return -1;
  if (source[srcOffset] == EQUALS_SIGN) {
    if (source[srcOffset + 1] != EQUALS_SIGN)     return -1;
    if ((decode1 & 0x0f) != 0)     return -1;
    int outBuff=(decode0 << 18) | (decode1 << 12);
    destination[destOffset]=(byte)(outBuff >> 16);
    return 1;
  }
 else   if (source[srcOffset + 1] == EQUALS_SIGN) {
    byte decode2=DECODABET[source[srcOffset]];
    if (decode2 < 0)     return -1;
    if ((decode2 & 0x03) != 0)     return -1;
    int outBuff=(decode0 << 18) | (decode1 << 12) | (decode2 << 6);
    destination[destOffset++]=(byte)(outBuff >> 16);
    destination[destOffset]=(byte)(outBuff >> 8);
    return 2;
  }
 else {
    byte decode2=DECODABET[source[srcOffset++]];
    byte decode3=DECODABET[source[srcOffset]];
    if (decode2 < 0 || decode3 < 0)     return -1;
    int outBuff=(decode0 << 18) | (decode1 << 12) | (decode2 << 6)| decode3;
    destination[destOffset++]=(byte)(outBuff >> 16);
    destination[destOffset++]=(byte)(outBuff >> 8);
    destination[destOffset]=(byte)(outBuff);
    return 3;
  }
}
