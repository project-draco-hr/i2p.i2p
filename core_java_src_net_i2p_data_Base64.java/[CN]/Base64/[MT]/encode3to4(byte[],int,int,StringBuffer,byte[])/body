{
  int inBuff=(numSigBytes > 0 ? ((source[srcOffset] << 24) >>> 8) : 0) | (numSigBytes > 1 ? ((source[srcOffset + 1] << 24) >>> 16) : 0) | (numSigBytes > 2 ? ((source[srcOffset + 2] << 24) >>> 24) : 0);
switch (numSigBytes) {
case 3:
    buf.append((char)alpha[(inBuff >>> 18)]);
  buf.append((char)alpha[(inBuff >>> 12) & 0x3f]);
buf.append((char)alpha[(inBuff >>> 6) & 0x3f]);
buf.append((char)alpha[(inBuff) & 0x3f]);
return;
case 2:
buf.append((char)alpha[(inBuff >>> 18)]);
buf.append((char)alpha[(inBuff >>> 12) & 0x3f]);
buf.append((char)alpha[(inBuff >>> 6) & 0x3f]);
buf.append((char)EQUALS_SIGN);
return;
case 1:
buf.append((char)alpha[(inBuff >>> 18)]);
buf.append((char)alpha[(inBuff >>> 12) & 0x3f]);
buf.append((char)EQUALS_SIGN);
buf.append((char)EQUALS_SIGN);
return;
default :
return;
}
}
