{
  int type;
  byte[] payload;
  int length;
  try {
    type=data[off] & 0xff;
    length=(int)DataHelper.fromLong(data,off + 1,2);
    if (type == 0 && length == 0)     return NULL_CERT;
    if (length == 0)     return new Certificate(type,null);
    payload=new byte[length];
    System.arraycopy(data,off + 3,payload,0,length);
  }
 catch (  ArrayIndexOutOfBoundsException aioobe) {
    throw new DataFormatException("not enough bytes",aioobe);
  }
  if (type == CERTIFICATE_TYPE_KEY) {
    if (length == 4) {
      if (Arrays.equals(payload,KeyCertificate.Ed25519_PAYLOAD))       return KeyCertificate.ELG_Ed25519_CERT;
      if (Arrays.equals(payload,KeyCertificate.ECDSA256_PAYLOAD))       return KeyCertificate.ELG_ECDSA256_CERT;
    }
    try {
      return new KeyCertificate(payload);
    }
 catch (    DataFormatException dfe) {
      throw new IllegalArgumentException(dfe);
    }
  }
  return new Certificate(type,payload);
}
