{
  if ((_destination == null) || (_encryptionKey == null) || (_signingKey == null)|| (_leases == null))   return null;
  int len=PublicKey.KEYSIZE_BYTES + SigningPublicKey.KEYSIZE_BYTES + 4+ PublicKey.KEYSIZE_BYTES+ SigningPublicKey.KEYSIZE_BYTES+ 1+ _leases.size() * 44;
  ByteArrayOutputStream out=new ByteArrayOutputStream(len);
  try {
    _destination.writeBytes(out);
    _encryptionKey.writeBytes(out);
    _signingKey.writeBytes(out);
    DataHelper.writeLong(out,1,_leases.size());
    for (Iterator iter=_leases.iterator(); iter.hasNext(); ) {
      Lease lease=(Lease)iter.next();
      lease.writeBytes(out);
    }
  }
 catch (  IOException ioe) {
    return null;
  }
catch (  DataFormatException dfe) {
    return null;
  }
  byte rv[]=out.toByteArray();
  return rv;
}
