{
  if (_data == null)   throw new IllegalStateException();
  SigType newType=kcert.getSigType();
  if (_type == newType)   return this;
  if (_type != SigType.DSA_SHA1)   throw new IllegalArgumentException("Cannot convert " + _type + " to "+ newType);
  if (newType == null)   return new SigningPublicKey(null,_data);
  int newLen=newType.getPubkeyLen();
  if (newLen == SigType.DSA_SHA1.getPubkeyLen())   return new SigningPublicKey(newType,_data);
  byte[] newData=new byte[newLen];
  if (newLen < SigType.DSA_SHA1.getPubkeyLen()) {
    System.arraycopy(_data,_data.length - newLen,newData,0,newLen);
  }
 else {
    System.arraycopy(_data,0,newData,0,_data.length);
    System.arraycopy(kcert.getPayload(),KeyCertificate.HEADER_LENGTH,newData,_data.length,newLen - _data.length);
  }
  return new SigningPublicKey(newType,newData);
}
