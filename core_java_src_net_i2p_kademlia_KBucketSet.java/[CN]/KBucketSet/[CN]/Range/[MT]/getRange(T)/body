{
  Integer rv;
synchronized (_distanceCache) {
    rv=_distanceCache.get(key);
    if (rv == null) {
      BigInteger xor=_bigUs.xor(new BigInteger(1,key.getData()));
      int range=xor.bitLength() - 1;
      if (_bValue > 1) {
        int toShift=range + 1 - _bValue;
        int highbit=range;
        range<<=_bValue - 1;
        if (toShift >= 0) {
          int extra=xor.clearBit(highbit).shiftRight(toShift).intValue();
          range+=extra;
        }
      }
      rv=Integer.valueOf(range);
      _distanceCache.put(key,rv);
    }
  }
  return rv.intValue();
}
