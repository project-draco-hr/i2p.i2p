{
  long now=now();
  double correctedTotalValue;
synchronized (this) {
    long measuredPeriod=now - _lastCoalesceDate;
    if (measuredPeriod < _period - SLACK) {
      return;
    }
    float periodFactor=measuredPeriod / (float)_period;
    _lastTotalValue=_currentTotalValue / periodFactor;
    _lastEventCount=(int)(0.499999 + (_currentEventCount / periodFactor));
    _lastTotalEventTime=(int)(_currentTotalEventTime / periodFactor);
    _lastCoalesceDate=now;
    if (_currentEventCount == 0)     correctedTotalValue=0;
 else     correctedTotalValue=_currentTotalValue * (_lastEventCount / (double)_currentEventCount);
    if (_lastTotalValue >= _extremeTotalValue) {
      _extremeTotalValue=_lastTotalValue;
      _extremeEventCount=_lastEventCount;
      _extremeTotalEventTime=_lastTotalEventTime;
    }
    _currentTotalValue=0.0f;
    _currentEventCount=0;
    _currentTotalEventTime=0;
  }
  if (_summaryListener != null)   _summaryListener.add(correctedTotalValue,_lastEventCount,_lastTotalEventTime,_period);
}
