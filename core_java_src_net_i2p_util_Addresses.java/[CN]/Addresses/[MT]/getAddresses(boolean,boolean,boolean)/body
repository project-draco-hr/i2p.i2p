{
  boolean haveIPv4=false;
  boolean haveIPv6=false;
  SortedSet<String> rv=new TreeSet<String>();
  try {
    InetAddress localhost=InetAddress.getLocalHost();
    InetAddress[] allMyIps=InetAddress.getAllByName(localhost.getCanonicalHostName());
    if (allMyIps != null) {
      for (int i=0; i < allMyIps.length; i++) {
        if (allMyIps[i] instanceof Inet4Address)         haveIPv4=true;
 else         haveIPv6=true;
        if (shouldInclude(allMyIps[i],includeSiteLocal,includeLoopbackAndWildcard,includeIPv6))         rv.add(stripScope(allMyIps[i].getHostAddress()));
      }
    }
  }
 catch (  UnknownHostException e) {
  }
  try {
    Enumeration<NetworkInterface> ifcs=NetworkInterface.getNetworkInterfaces();
    if (ifcs != null) {
      while (ifcs.hasMoreElements()) {
        NetworkInterface ifc=ifcs.nextElement();
        for (Enumeration<InetAddress> addrs=ifc.getInetAddresses(); addrs.hasMoreElements(); ) {
          InetAddress addr=addrs.nextElement();
          if (addr instanceof Inet4Address)           haveIPv4=true;
 else           haveIPv6=true;
          if (shouldInclude(addr,includeSiteLocal,includeLoopbackAndWildcard,includeIPv6))           rv.add(stripScope(addr.getHostAddress()));
        }
      }
    }
  }
 catch (  SocketException e) {
  }
catch (  java.lang.Error e) {
  }
  if (includeLoopbackAndWildcard) {
    if (haveIPv4)     rv.add("0.0.0.0");
    if (includeIPv6 && haveIPv6)     rv.add("0:0:0:0:0:0:0:0");
  }
  return rv;
}
