{
  if (false) {
    long rv=0;
    for (int curBit=0; curBit < numBits; curBit++) {
      if (_nextBit >= 8) {
        _nextBit=0;
        _nextByte++;
      }
      if (_nextByte >= _buffer.length)       refillBuffer();
      rv+=(_buffer[_nextByte] << curBit);
      _nextBit++;
    }
    return rv;
  }
 else {
    long rv=0;
    int curBit=0;
    while (curBit < numBits) {
      if (_nextBit >= 8) {
        _nextBit=0;
        _nextByte++;
      }
      if (_nextByte >= _buffer.length)       refillBuffer();
      int gobbleBits=8 - _nextBit;
      int want=numBits - curBit;
      if (gobbleBits > want)       gobbleBits=want;
      curBit+=gobbleBits;
      int shift=8 - _nextBit - gobbleBits;
      int c=(_buffer[_nextByte] & (GOBBLE_MASK[gobbleBits] << shift));
      rv+=((c >>> shift) << (curBit - gobbleBits));
      _nextBit+=gobbleBits;
    }
    return rv;
  }
}
