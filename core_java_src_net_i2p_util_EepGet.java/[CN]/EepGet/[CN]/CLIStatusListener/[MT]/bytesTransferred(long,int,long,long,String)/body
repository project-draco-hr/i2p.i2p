{
  if (_firstTime) {
    if (alreadyTransferred > 0) {
      _previousWritten=alreadyTransferred;
      System.out.println("File found with length " + alreadyTransferred + ", resuming");
    }
    _firstTime=false;
  }
  if (_written == 0 && alreadyTransferred == 0 && _previousWritten > 0) {
    System.out.println("Server does not support resume, discarding " + _previousWritten + " bytes");
    _discarded+=_previousWritten;
    _previousWritten=0;
  }
  for (int i=0; i < currentWrite; i++) {
    _written++;
    if ((_markSize > 0) && (_written % _markSize == 0)) {
      System.out.print("#");
      if ((_lineSize > 0) && (_written % ((long)_markSize * (long)_lineSize) == 0l)) {
        long now=_context.clock().now();
        long timeToSend=now - _lastComplete;
        if (timeToSend > 0) {
          StringBuffer buf=new StringBuffer(50);
          buf.append(" ");
          if (bytesRemaining > 0) {
            double pct=((double)_written + _previousWritten) / ((double)alreadyTransferred + (double)currentWrite + (double)bytesRemaining);
synchronized (_pct) {
              buf.append(_pct.format(pct));
            }
            buf.append(": ");
          }
          buf.append(_written);
          buf.append(" @ ");
          double lineKBytes=((double)_markSize * (double)_lineSize) / 1024.0d;
          double kbps=lineKBytes / ((double)timeToSend / 1000.0d);
synchronized (_kbps) {
            buf.append(_kbps.format(kbps));
          }
          buf.append("KBps");
          buf.append(" / ");
          long lifetime=_context.clock().now() - _startedOn;
          double lifetimeKBps=(1000.0d * (double)(_written) / ((double)lifetime * 1024.0d));
synchronized (_kbps) {
            buf.append(_kbps.format(lifetimeKBps));
          }
          buf.append("KBps");
          System.out.println(buf.toString());
        }
        _lastComplete=now;
      }
    }
  }
}
