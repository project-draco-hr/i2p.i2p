{
  long transferred;
  if (_firstTime)   transferred=0;
 else   transferred=alreadyTransferred - _previousWritten;
  System.out.println();
  System.out.println("== " + new Date());
  if (notModified) {
    System.out.println("== Source not modified since last download");
  }
 else {
    if (bytesRemaining > 0) {
      System.out.println("== Transfer of " + url + " completed with "+ transferred+ " transferred and "+ (bytesRemaining - bytesTransferred)+ " remaining"+ (_discarded > 0 ? (" and " + _discarded + " bytes discarded") : ""));
    }
 else {
      System.out.println("== Transfer of " + url + " completed with "+ transferred+ " bytes transferred"+ (_discarded > 0 ? (" and " + _discarded + " bytes discarded") : ""));
    }
    if (transferred > 0)     System.out.println("== Output saved to " + outputFile + " ("+ alreadyTransferred+ " bytes)");
  }
  long timeToSend=_context.clock().now() - _startedOn;
  System.out.println("== Transfer time: " + DataHelper.formatDuration(timeToSend));
  if (_etag != null)   System.out.println("== ETag: " + _etag);
  if (transferred > 0) {
    StringBuilder buf=new StringBuilder(50);
    buf.append("== Transfer rate: ");
    double kbps=(1000.0d * (double)(transferred) / ((double)timeToSend * 1024.0d));
synchronized (_kbps) {
      buf.append(_kbps.format(kbps));
    }
    buf.append("KBps");
    System.out.println(buf.toString());
  }
}
