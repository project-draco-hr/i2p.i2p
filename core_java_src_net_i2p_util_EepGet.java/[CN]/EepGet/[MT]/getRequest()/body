{
  StringBuffer buf=new StringBuffer(512);
  boolean post=false;
  if ((_postData != null) && (_postData.length() > 0))   post=true;
  if (post) {
    buf.append("POST ").append(_url).append(" HTTP/1.1\r\n");
  }
 else {
    buf.append("GET ").append(_url).append(" HTTP/1.1\r\n");
  }
  try {
    URL url=new URL(_url);
    buf.append("Host: ").append(url.getHost()).append("\r\n");
  }
 catch (  MalformedURLException mue) {
    mue.printStackTrace();
  }
  if (_alreadyTransferred > 0) {
    buf.append("Range: bytes=");
    buf.append(_alreadyTransferred);
    buf.append("-\r\n");
  }
  buf.append("Accept-Encoding: identity;q=1, *;q=0\r\n");
  if (!_allowCaching) {
    buf.append("Cache-control: no-cache\r\n");
    buf.append("Pragma: no-cache\r\n");
  }
  if (_etag != null) {
    buf.append("If-None-Match: ");
    buf.append(_etag);
    buf.append("\r\n");
  }
  if (post)   buf.append("Content-length: ").append(_postData.length()).append("\r\n");
  buf.append("Connection: close\r\n\r\n");
  if (post)   buf.append(_postData);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Request: [" + buf.toString() + "]");
  return buf.toString();
}
