{
  key=key.trim();
  val=val.trim();
  for (int i=0; i < _listeners.size(); i++)   _listeners.get(i).headerReceived(_url,_currentAttempt,key,val);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Header line: [" + key + "] = ["+ val+ "]");
  key=key.toLowerCase(Locale.US);
  if (key.equals("content-length")) {
    try {
      _bytesRemaining=Long.parseLong(val);
    }
 catch (    NumberFormatException nfe) {
      nfe.printStackTrace();
    }
  }
 else   if (key.equals("etag")) {
    _etag=val;
  }
 else   if (key.equals("last-modified")) {
    _lastModified=val;
  }
 else   if (key.equals("transfer-encoding")) {
    _encodingChunked=val.toLowerCase(Locale.US).contains("chunked");
  }
 else   if (key.equals("content-encoding")) {
    if ((!_actualURL.endsWith(".gz")) && (!_actualURL.endsWith(".tgz")))     _isGzippedResponse=val.toLowerCase(Locale.US).contains("gzip");
  }
 else   if (key.equals("content-type")) {
    _contentType=val;
  }
 else   if (key.equals("location")) {
    _redirectLocation=val;
  }
 else   if (key.equals("proxy-authenticate") && _responseCode == 407 && _authState != null && _shouldProxy) {
    _authState.setAuthChallenge(val);
  }
 else {
  }
}
