{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Running the post task");
  Socket s=null;
  try {
    URL u=new URL(_url);
    String h=u.getHost();
    int p=u.getPort();
    if (p <= 0)     p=80;
    String path=u.getPath();
    boolean isProxy=true;
    if ((_proxyHost == null) || (_proxyPort <= 0)) {
      isProxy=false;
      _proxyHost=h;
      _proxyPort=p;
    }
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Connecting to the server/proxy...");
    s=new Socket(_proxyHost,_proxyPort);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Connected");
    OutputStream out=s.getOutputStream();
    String sep=getSeparator();
    long length=calcContentLength(sep,_fields);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Separator: " + sep + " content length: "+ length);
    String header=getHeader(isProxy,path,h,p,sep,length);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Header: \n" + header);
    out.write(header.getBytes());
    out.flush();
    if (false) {
      out.write(("--" + sep + CRLF+ "content-disposition: form-data; name=\"field1\""+ CRLF+ CRLF+ "Stuff goes here"+ CRLF+ "--"+ sep+ "--"+ CRLF).getBytes());
    }
 else {
      sendFields(out,sep,_fields);
    }
    out.flush();
    if (_log.shouldLog(Log.DEBUG)) {
      BufferedReader in=new BufferedReader(new InputStreamReader(s.getInputStream()));
      String line=null;
      while ((line=in.readLine()) != null) {
        _log.debug("recv: [" + line + "]");
      }
    }
    out.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    if (s != null)     try {
      s.close();
    }
 catch (    IOException ioe) {
    }
    if (_onCompletion != null)     _onCompletion.run();
  }
}
