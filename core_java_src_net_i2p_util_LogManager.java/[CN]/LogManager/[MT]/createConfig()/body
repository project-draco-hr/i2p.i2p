{
  Properties rv=new OrderedProperties();
  rv.setProperty(PROP_FORMAT,new String(_format));
  rv.setProperty(PROP_DATEFORMAT,_dateFormatPattern);
  rv.setProperty(PROP_DISPLAYONSCREEN,Boolean.toString(_displayOnScreen));
  rv.setProperty(PROP_DROP,Boolean.toString(_dropOnOverflow));
  rv.setProperty(PROP_DUP,Boolean.toString(_dropDuplicates));
  rv.setProperty(PROP_LOG_BUFFER_SIZE,Integer.toString(_logBufferSize));
  rv.setProperty(PROP_FILENAME,_baseLogfilename);
  if (_fileSize >= 1024 * 1024)   rv.setProperty(PROP_FILESIZE,(_fileSize / (1024 * 1024)) + "m");
 else   if (_fileSize >= 1024)   rv.setProperty(PROP_FILESIZE,(_fileSize / (1024)) + "k");
 else   if (_fileSize > 0)   rv.setProperty(PROP_FILESIZE,Integer.toString(_fileSize));
  rv.setProperty(PROP_ROTATIONLIMIT,Integer.toString(_rotationLimit));
  rv.setProperty(PROP_DEFAULTLEVEL,Log.toLevelString(_defaultLimit));
  rv.setProperty(PROP_DISPLAYONSCREENLEVEL,Log.toLevelString(_onScreenLimit));
  rv.setProperty(PROP_CONSOLEBUFFERSIZE,Integer.toString(_consoleBufferSize));
  for (  LogLimit lim : _limits) {
    rv.setProperty(PROP_RECORD_PREFIX + lim.getRootName(),Log.toLevelString(lim.getLimit()));
  }
  return rv;
}
