{
  String fmt=config.getProperty(PROP_FORMAT,DEFAULT_FORMAT);
  _format=fmt.toCharArray();
  String df=config.getProperty(PROP_DATEFORMAT,DEFAULT_DATEFORMAT);
  setDateFormat(df);
  String disp=config.getProperty(PROP_DISPLAYONSCREEN);
  if (disp == null)   _displayOnScreen=DEFAULT_DISPLAYONSCREEN;
 else {
    if ("TRUE".equals(disp.toUpperCase(Locale.US).trim()))     _displayOnScreen=true;
 else     if ("YES".equals(disp.toUpperCase(Locale.US).trim()))     _displayOnScreen=true;
 else     _displayOnScreen=false;
  }
  String filenameOverride=_context.getProperty(FILENAME_OVERRIDE_PROP);
  if (filenameOverride != null)   _baseLogfilename=filenameOverride;
 else   _baseLogfilename=config.getProperty(PROP_FILENAME,DEFAULT_FILENAME);
  _fileSize=getFileSize(config.getProperty(PROP_FILESIZE,DEFAULT_FILESIZE));
  _rotationLimit=-1;
  try {
    _rotationLimit=Integer.parseInt(config.getProperty(PROP_ROTATIONLIMIT,DEFAULT_ROTATIONLIMIT));
  }
 catch (  NumberFormatException nfe) {
    System.err.println("Invalid rotation limit");
    nfe.printStackTrace();
  }
  _defaultLimit=Log.getLevel(config.getProperty(PROP_DEFAULTLEVEL,DEFAULT_DEFAULTLEVEL));
  _onScreenLimit=Log.getLevel(config.getProperty(PROP_DISPLAYONSCREENLEVEL,DEFAULT_ONSCREENLEVEL));
  try {
    String str=config.getProperty(PROP_CONSOLEBUFFERSIZE);
    if (str != null)     _consoleBufferSize=Integer.parseInt(str);
  }
 catch (  NumberFormatException nfe) {
  }
  try {
    String str=config.getProperty(PROP_LOG_BUFFER_SIZE);
    if (str != null)     _logBufferSize=Integer.parseInt(str);
  }
 catch (  NumberFormatException nfe) {
  }
  _dropOnOverflow=Boolean.valueOf(config.getProperty(PROP_DROP)).booleanValue();
  parseLimits(config);
}
