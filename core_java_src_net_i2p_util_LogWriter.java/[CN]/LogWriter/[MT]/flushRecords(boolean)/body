{
  try {
    Queue<LogRecord> records=_manager.getQueue();
    if (records == null)     return;
    if (!records.isEmpty()) {
      LogRecord last=null;
      LogRecord rec;
      int dupCount=0;
      while ((rec=records.poll()) != null) {
        if (_manager.shouldDropDuplicates() && rec.equals(last)) {
          dupCount++;
        }
 else {
          if (dupCount > 0) {
            if (dupCount == 1)             writeRecord("*** 1 similar message omitted\n");
 else             writeRecord("*** " + dupCount + " similar messages omitted\n");
            dupCount=0;
          }
          last=rec;
          writeRecord(rec);
        }
      }
      if (dupCount == 1)       writeRecord("*** 1 similar message omitted\n");
 else       if (dupCount > 0)       writeRecord("*** " + dupCount + " similar messages omitted\n");
      try {
        if (_currentOut != null)         _currentOut.flush();
      }
 catch (      IOException ioe) {
        if (_write && ++_diskFullMessageCount < MAX_DISKFULL_MESSAGES)         System.err.println("Error writing the router log - disk full? " + ioe);
      }
    }
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
 finally {
    if (shouldWait) {
      try {
synchronized (this) {
          this.wait(FLUSH_INTERVAL);
        }
      }
 catch (      InterruptedException ie) {
      }
    }
  }
}
