{
  byte buf[]=new byte[32];
  for (int i=0; i < 32; i++)   buf[i]=(byte)i;
  ByteArrayInputStream bais=new ByteArrayInputStream(buf);
  try {
    LookaheadInputStream lis=new LookaheadInputStream(8);
    lis.initialize(bais);
    byte rbuf[]=new byte[32];
    int read=lis.read(rbuf);
    if (read != 24)     throw new RuntimeException("Should have stopped (read=" + read + ")");
    for (int i=0; i < 24; i++)     if (rbuf[i] != (byte)i)     throw new RuntimeException("Error at " + i + " ["+ rbuf[i]+ "]");
    for (int i=0; i < 8; i++)     if (lis.getFooter()[i] != (byte)(i + 24))     throw new RuntimeException("Error at footer " + i + " ["+ lis.getFooter()[i]+ "]");
    System.out.println("Everything is fine in general");
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  for (int i=9; i < 32 * 1024; i++) {
    if (!test(i))     break;
  }
}
