{
  byte buf[]=new byte[size];
  new java.util.Random().nextBytes(buf);
  ByteArrayInputStream bais=new ByteArrayInputStream(buf);
  try {
    LookaheadInputStream lis=new LookaheadInputStream(8);
    lis.initialize(bais);
    byte rbuf[]=new byte[size];
    int read=lis.read(rbuf);
    if (read != (size - 8))     throw new RuntimeException("Should have stopped (read=" + read + ")");
    for (int i=0; i < (size - 8); i++)     if (rbuf[i] != buf[i])     throw new RuntimeException("Error at " + i + " ["+ rbuf[i]+ "]");
    for (int i=0; i < 8; i++)     if (lis.getFooter()[i] != buf[i + (size - 8)])     throw new RuntimeException("Error at footer " + i + " ["+ lis.getFooter()[i]+ "]");
    System.out.println("Everything is fine at size=" + size);
    return true;
  }
 catch (  Exception e) {
    e.printStackTrace();
    return false;
  }
}
