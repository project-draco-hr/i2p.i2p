{
  if (_isAndroid)   return Collections.emptyList();
  List<String> rv=new ArrayList<String>(8);
  String primary=getMiddleName2(true);
  if (primary != null) {
    if (_is64) {
      if (!primary.equals(JBIGI_OPTIMIZATION_ATHLON64))       rv.add(_libPrefix + getMiddleName1() + primary+ "_64"+ _libSuffix);
      rv.add(_libPrefix + getMiddleName1() + JBIGI_OPTIMIZATION_ATHLON64+ "_64"+ _libSuffix);
    }
    if (_isArm) {
      Map<String,String> cpuinfo=getCPUInfo();
      int ver=0;
      String proc=cpuinfo.get("processor");
      String arch=cpuinfo.get("cpu architecture");
      if (proc != null && proc.contains("ARMv6")) {
        ver=6;
      }
 else       if (arch != null && arch.length() > 0) {
        String sver=arch.substring(0,1);
        try {
          ver=Integer.parseInt(sver);
        }
 catch (        NumberFormatException nfe) {
        }
      }
      for (int i=ver; i >= 3; i--) {
        rv.add(_libPrefix + getMiddleName1() + primary+ 'v'+ i+ _libSuffix);
      }
    }
    rv.add(_libPrefix + getMiddleName1() + primary+ _libSuffix);
    if (_is64 && !primary.equals(JBIGI_OPTIMIZATION_ATHLON64))     rv.add(_libPrefix + getMiddleName1() + JBIGI_OPTIMIZATION_ATHLON64+ _libSuffix);
    if (primary.equals(JBIGI_OPTIMIZATION_ATOM) || primary.equals(JBIGI_OPTIMIZATION_PENTIUMM) || primary.equals(JBIGI_OPTIMIZATION_GEODE))     rv.add(_libPrefix + getMiddleName1() + JBIGI_OPTIMIZATION_PENTIUM3+ _libSuffix);
    if (_is64)     rv.add(_libPrefix + getMiddleName1() + JBIGI_OPTIMIZATION_ATHLON+ _libSuffix);
  }
 else {
    if (_is64) {
      rv.add(_libPrefix + getMiddleName1() + JBIGI_OPTIMIZATION_ATHLON64+ "_64"+ _libSuffix);
      rv.add(_libPrefix + getMiddleName1() + JBIGI_OPTIMIZATION_ATHLON64+ _libSuffix);
    }
  }
  if (_is64)   rv.add(_libPrefix + getMiddleName1() + "none_64"+ _libSuffix);
  if (!_isArm && !_isPPC && !_isMac)   rv.add(getResourceName(false));
  return rv;
}
