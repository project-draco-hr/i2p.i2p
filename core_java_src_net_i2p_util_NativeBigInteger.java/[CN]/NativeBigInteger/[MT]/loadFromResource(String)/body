{
  if (resourceName == null)   return false;
  URL resource=ClassLoader.getSystemResource(resourceName);
  if (resource == null) {
    if (_doLog)     System.err.println("NOTICE: Resource name [" + resourceName + "] was not found");
    return false;
  }
  File outFile=null;
  FileOutputStream fos=null;
  try {
    InputStream libStream=resource.openStream();
    outFile=new File(I2PAppContext.getGlobalContext().getBaseDir(),_libPrefix + "jbigi" + _libSuffix);
    fos=new FileOutputStream(outFile);
    byte buf[]=new byte[4096];
    while (true) {
      int read=libStream.read(buf);
      if (read < 0)       break;
      fos.write(buf,0,read);
    }
    fos.close();
    fos=null;
    System.load(outFile.getAbsolutePath());
    return true;
  }
 catch (  UnsatisfiedLinkError ule) {
    if (_doLog) {
      System.err.println("ERROR: The resource " + resourceName + " was not a valid library for this platform");
      ule.printStackTrace();
    }
    return false;
  }
catch (  IOException ioe) {
    if (_doLog) {
      System.err.println("ERROR: Problem writing out the temporary native library data");
      ioe.printStackTrace();
    }
    return false;
  }
 finally {
    if (fos != null) {
      try {
        fos.close();
      }
 catch (      IOException ioe) {
      }
    }
  }
}
