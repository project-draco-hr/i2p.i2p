{
  for (int i=129; i < 64 * 1024; i++) {
    if (!test(i))     return;
  }
  byte orig[]="ho ho ho, merry christmas".getBytes();
  try {
    java.io.ByteArrayOutputStream baos=new java.io.ByteArrayOutputStream(64);
    java.util.zip.GZIPOutputStream o=new java.util.zip.GZIPOutputStream(baos);
    o.write(orig);
    o.finish();
    o.flush();
    o.close();
    byte compressed[]=baos.toByteArray();
    ResettableGZIPInputStream i=new ResettableGZIPInputStream();
    i.initialize(new ByteArrayInputStream(compressed));
    byte readBuf[]=new byte[128];
    int read=i.read(readBuf);
    if (read != orig.length)     throw new RuntimeException("read=" + read);
    for (int j=0; j < read; j++)     if (readBuf[j] != orig[j])     throw new RuntimeException("wtf, j=" + j + " readBuf="+ readBuf[j]+ " orig="+ orig[j]);
    boolean ok=(-1 == i.read());
    if (!ok)     throw new RuntimeException("wtf, not EOF after the data?");
    System.out.println("Match ok");
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
