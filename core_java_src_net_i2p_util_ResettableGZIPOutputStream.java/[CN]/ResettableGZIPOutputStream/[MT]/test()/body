{
  byte b[]="hi, how are you today?".getBytes();
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream(64);
    ResettableGZIPOutputStream o=new ResettableGZIPOutputStream(baos);
    o.write(b);
    o.finish();
    o.flush();
    byte compressed[]=baos.toByteArray();
    ByteArrayOutputStream baos2=new ByteArrayOutputStream();
    SnoopGZIPOutputStream gzo=new SnoopGZIPOutputStream(baos2);
    gzo.write(b);
    gzo.finish();
    gzo.flush();
    long value=gzo.getCRC().getValue();
    byte compressed2[]=baos2.toByteArray();
    System.out.println("CRC32 values: Resettable = " + o._crc32.getValue() + " GZIP = "+ value);
    System.out.print("Resettable compressed data: ");
    for (int i=0; i < compressed.length; i++)     System.out.print(Integer.toHexString(compressed[i] & 0xFF) + " ");
    System.out.println();
    System.out.print("      GZIP compressed data: ");
    for (int i=0; i < compressed2.length; i++)     System.out.print(Integer.toHexString(compressed2[i] & 0xFF) + " ");
    System.out.println();
    GZIPInputStream in=new GZIPInputStream(new ByteArrayInputStream(compressed));
    byte rv[]=new byte[128];
    int read=in.read(rv);
    if (!DataHelper.eq(rv,0,b,0,b.length))     throw new RuntimeException("foo, read=" + read);
 else     System.out.println("match, w00t");
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
