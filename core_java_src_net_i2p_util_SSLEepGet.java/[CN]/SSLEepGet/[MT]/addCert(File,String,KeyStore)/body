{
  InputStream fis=null;
  try {
    fis=new FileInputStream(file);
    CertificateFactory cf=CertificateFactory.getInstance("X.509");
    X509Certificate cert=(X509Certificate)cf.generateCertificate(fis);
    if (_log.shouldLog(Log.INFO)) {
      _log.info("Read X509 Certificate from " + file.getAbsolutePath() + " Issuer: "+ cert.getIssuerX500Principal()+ "; Valid From: "+ cert.getNotBefore()+ " To: "+ cert.getNotAfter());
    }
    try {
      cert.checkValidity();
    }
 catch (    CertificateExpiredException cee) {
      _log.error("Rejecting expired X509 Certificate: " + file.getAbsolutePath(),cee);
      return false;
    }
catch (    CertificateNotYetValidException cnyve) {
      _log.error("Rejecting X509 Certificate not yet valid: " + file.getAbsolutePath(),cnyve);
      return false;
    }
    ks.setCertificateEntry(alias,cert);
    if (_log.shouldLog(Log.INFO))     _log.info("Now trusting X509 Certificate, Issuer: " + cert.getIssuerX500Principal());
  }
 catch (  GeneralSecurityException gse) {
    _log.error("Error reading X509 Certificate: " + file.getAbsolutePath(),gse);
    return false;
  }
catch (  IOException ioe) {
    _log.error("Error reading X509 Certificate: " + file.getAbsolutePath(),ioe);
    return false;
  }
 finally {
    try {
      if (fis != null)       fis.close();
    }
 catch (    IOException foo) {
    }
  }
  return true;
}
