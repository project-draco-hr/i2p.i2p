{
  Process process;
  String name=null;
  try {
    if (shellCommand instanceof String) {
      name=(String)shellCommand;
      if (DEBUG)       System.out.println("ShellCommand exec \"" + name + "\" consume? "+ consumeOutput+ " wait? "+ waitForExitStatus);
      process=Runtime.getRuntime().exec(name);
    }
 else     if (shellCommand instanceof String[]) {
      String[] arr=(String[])shellCommand;
      if (DEBUG) {
        name=Arrays.toString(arr);
        System.out.println("ShellCommand exec \"" + name + "\" consume? "+ consumeOutput+ " wait? "+ waitForExitStatus);
      }
      process=Runtime.getRuntime().exec(arr);
    }
 else {
      throw new ClassCastException("shell command must be a String or a String[]");
    }
    if (consumeOutput) {
      Thread processStderrConsumer=new StreamConsumer(process.getErrorStream());
      processStderrConsumer.start();
      Thread processStdoutConsumer=new StreamConsumer(process.getInputStream());
      processStdoutConsumer.start();
    }
 else {
      _errorStream=process.getErrorStream();
      _inputStream=process.getInputStream();
      _outputStream=process.getOutputStream();
      Thread processStderrReader=new StreamReader(_errorStream);
      processStderrReader.start();
      Thread processStdinWriter=new StreamWriter(_outputStream);
      processStdinWriter.start();
      Thread processStdoutReader=new StreamReader(_inputStream);
      processStdoutReader.start();
    }
    if (waitForExitStatus) {
      if (DEBUG)       System.out.println("ShellCommand waiting for \"" + name + '\"');
      try {
        process.waitFor();
      }
 catch (      Exception e) {
        if (DEBUG) {
          System.out.println("ShellCommand exception waiting for \"" + name + '\"');
          e.printStackTrace();
        }
        if (!consumeOutput)         killStreams();
        return false;
      }
      if (!consumeOutput)       killStreams();
      if (DEBUG)       System.out.println("ShellCommand exit value is " + process.exitValue() + " for \""+ name+ '\"');
      if (process.exitValue() > 0)       return false;
    }
  }
 catch (  Exception e) {
    if (DEBUG) {
      System.out.println("ShellCommand execute exception for \"" + name + '\"');
      e.printStackTrace();
    }
    return false;
  }
  return true;
}
