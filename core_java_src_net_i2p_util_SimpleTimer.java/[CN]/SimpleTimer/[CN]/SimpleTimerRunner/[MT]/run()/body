{
  List eventsToFire=new ArrayList(1);
  while (true) {
    try {
synchronized (_events) {
        if (_events.size() <= 0)         _events.wait();
        long now=System.currentTimeMillis();
        long nextEventDelay=-1;
        Object nextEvent=null;
        while (true) {
          if (_events.size() <= 0)           break;
          Long when=(Long)_events.firstKey();
          if (when.longValue() <= now) {
            TimedEvent evt=(TimedEvent)_events.remove(when);
            if (evt != null) {
              _eventTimes.remove(evt);
              eventsToFire.add(evt);
            }
          }
 else {
            nextEventDelay=when.longValue() - now;
            nextEvent=_events.get(when);
            break;
          }
        }
        if (eventsToFire.size() <= 0) {
          if (nextEventDelay != -1) {
            if (_log.shouldLog(Log.DEBUG))             _log.debug("Next event in " + nextEventDelay + ": "+ nextEvent);
            _events.wait(nextEventDelay);
          }
 else {
            _events.wait();
          }
        }
      }
    }
 catch (    InterruptedException ie) {
    }
catch (    Throwable t) {
      if (_log != null) {
        _log.log(Log.CRIT,"Uncaught exception in the SimpleTimer!",t);
      }
 else {
        System.err.println("Uncaught exception in SimpleTimer");
        t.printStackTrace();
      }
    }
    for (int i=0; i < eventsToFire.size(); i++) {
      TimedEvent evt=(TimedEvent)eventsToFire.get(i);
      try {
        evt.timeReached();
      }
 catch (      Throwable t) {
        log("wtf, event borked: " + evt,t);
      }
    }
    eventsToFire.clear();
  }
}
