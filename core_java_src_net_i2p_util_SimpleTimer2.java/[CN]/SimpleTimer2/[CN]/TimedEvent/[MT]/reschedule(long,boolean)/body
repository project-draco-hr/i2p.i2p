{
  if (timeoutMs <= 0) {
    if (timeoutMs < 0 && _log.shouldInfo())     _log.info("Resched. timeout < 0: " + this + " timeout = "+ timeoutMs+ " state: "+ _state);
    timeoutMs=1;
  }
  final long now=System.currentTimeMillis();
  long oldTimeout;
  boolean scheduled=_state == TimedEventState.SCHEDULED;
  if (scheduled)   oldTimeout=_nextRun - now;
 else   oldTimeout=timeoutMs;
  if ((oldTimeout - _fuzz > timeoutMs && useEarliestTime) || (oldTimeout + _fuzz < timeoutMs && !useEarliestTime) || (!scheduled)) {
    if (scheduled && oldTimeout <= 5) {
      if (_log.shouldWarn())       _log.warn("not rescheduling to " + timeoutMs + ", about to execute "+ this+ " in "+ oldTimeout);
      return;
    }
    if (scheduled && (now + timeoutMs) < _nextRun) {
      if (_log.shouldLog(Log.INFO))       _log.info("Re-scheduling: " + this + " timeout = "+ timeoutMs+ " old timeout was "+ oldTimeout+ " state: "+ _state);
      cancel();
    }
    schedule(timeoutMs);
  }
}
