{
  this.levelPage=levelPage;
  this.bf=bf;
  BlockFile.pageSeek(bf.file,levelPage);
  long magic=bf.file.readLong();
  if (magic != MAGIC)   throw new IOException("Bad SkipLevels magic number 0x" + Long.toHexString(magic) + " on page "+ levelPage);
  bsl.levelHash.put(new Integer(this.levelPage),this);
  int maxLen=bf.file.readUnsignedShort();
  int nonNull=bf.file.readUnsignedShort();
  spanPage=bf.file.readUnsignedInt();
  bottom=(BSkipSpan)bsl.spanHash.get(new Integer(spanPage));
  this.levels=new BSkipLevels[maxLen];
  BlockFile.log.debug("Reading New BSkipLevels with " + nonNull + " valid levels out of "+ maxLen+ " page "+ levelPage);
  int[] lps=new int[nonNull];
  for (int i=0; i < nonNull; i++) {
    lps[i]=bf.file.readUnsignedInt();
  }
  for (int i=0; i < nonNull; i++) {
    int lp=lps[i];
    if (lp != 0) {
      levels[i]=(BSkipLevels)bsl.levelHash.get(new Integer(lp));
      if (levels[i] == null) {
        levels[i]=new BSkipLevels(bf,lp,bsl);
        bsl.levelHash.put(new Integer(lp),levels[i]);
      }
 else {
      }
    }
 else {
      BlockFile.log.warn("WTF page " + levelPage + " i = "+ i+ " of "+ nonNull+ " valid levels out of "+ maxLen+ " but level page is zero");
      levels[i]=null;
    }
  }
}
