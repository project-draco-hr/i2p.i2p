{
  if (nKeys == 0) {
    sl.addItem();
    keys[0]=key;
    vals[0]=val;
    nKeys++;
    this.flush();
    return null;
  }
  int loc=binarySearch(key);
  if (loc < 0) {
    loc=-1 * (loc + 1);
    if (next != null) {
      int cmp=next.firstKey().compareTo(key);
      if ((loc >= nKeys) && (cmp > 0)) {
        if (nKeys == keys.length) {
          if (next.nKeys == keys.length) {
            return insert(loc,key,val,sl);
          }
 else {
            return next.put(key,val,sl);
          }
        }
 else {
          return insert(loc,key,val,sl);
        }
      }
 else {
        if (cmp > 0) {
          return insert(loc,key,val,sl);
        }
 else {
          return next.put(key,val,sl);
        }
      }
    }
 else {
      return insert(loc,key,val,sl);
    }
  }
 else {
    vals[loc]=val;
    this.flush();
    return null;
  }
}
