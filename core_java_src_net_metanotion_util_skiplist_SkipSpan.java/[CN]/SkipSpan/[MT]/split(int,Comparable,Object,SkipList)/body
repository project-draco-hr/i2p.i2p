{
  SkipSpan right=newInstance(sl);
  if (this.next != null) {
    this.next.prev=right;
  }
  right.next=this.next;
  right.prev=this;
  this.next=right;
  int start=((keys.length + 1) / 2);
  for (int i=start; i < keys.length; i++) {
    try {
      right.keys[i - start]=keys[i];
      right.vals[i - start]=vals[i];
      right.nKeys++;
      this.nKeys--;
    }
 catch (    ArrayIndexOutOfBoundsException e) {
      System.out.println("i " + i + " start "+ start);
      System.out.println("key: " + keys[i].toString());
      throw e;
    }
  }
  if (loc >= start) {
    right.pushApart(loc - start);
    right.keys[loc - start]=key;
    right.vals[loc - start]=val;
  }
 else {
    pushApart(loc);
    keys[loc]=key;
    vals[loc]=val;
  }
  this.flush();
  this.next.flush();
}
