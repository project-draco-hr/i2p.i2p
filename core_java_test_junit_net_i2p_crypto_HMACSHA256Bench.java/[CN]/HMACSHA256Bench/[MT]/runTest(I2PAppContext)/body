{
  SessionKey key=ctx.keyGenerator().generateSessionKey();
  Hash asdfs=ctx.hmac().calculate(key,"qwerty".getBytes());
  int times=100000;
  long shorttime=0;
  long medtime=0;
  long longtime=0;
  long minShort=0;
  long maxShort=0;
  long minMed=0;
  long maxMed=0;
  long minLong=0;
  long maxLong=0;
  long shorttime1=0;
  long medtime1=0;
  long longtime1=0;
  long minShort1=0;
  long maxShort1=0;
  long minMed1=0;
  long maxMed1=0;
  long minLong1=0;
  long maxLong1=0;
  byte[] smess=new String("abc").getBytes();
  StringBuilder buf=new StringBuilder();
  for (int x=0; x < 2 * 1024; x++) {
    buf.append("a");
  }
  byte[] mmess=DataHelper.getASCII(buf.toString());
  buf=new StringBuilder();
  for (int x=0; x < 10000; x++) {
    buf.append("a");
  }
  byte[] lmess=DataHelper.getASCII(buf.toString());
  ctx.hmac().calculate(key,smess);
  ctx.hmac().calculate(key,mmess);
  ctx.hmac().calculate(key,lmess);
  long before=System.currentTimeMillis();
  for (int x=0; x < times; x++)   ctx.hmac().calculate(key,smess);
  long after=System.currentTimeMillis();
  display(times,before,after,smess.length,"3 byte");
  before=System.currentTimeMillis();
  for (int x=0; x < times; x++)   ctx.hmac().calculate(key,mmess);
  after=System.currentTimeMillis();
  display(times,before,after,mmess.length,"2KB");
  before=System.currentTimeMillis();
  for (int x=0; x < times; x++)   ctx.hmac().calculate(key,lmess);
  after=System.currentTimeMillis();
  display(times,before,after,lmess.length,"10KB");
}
