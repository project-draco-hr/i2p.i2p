{
  byte[] zero=Utils.hexToBytes("0000000000000000000000000000000000000000000000000000000000000000");
  byte[] one=Utils.hexToBytes("0100000000000000000000000000000000000000000000000000000000000000");
  byte[] two=Utils.hexToBytes("0200000000000000000000000000000000000000000000000000000000000000");
  byte[] a=Utils.hexToBytes("d072f8dd9c07fa7bc8d22a4b325d26301ee9202f6db89aa7c3731529e37e437c");
  GroupElement A=new GroupElement(curve,Utils.hexToBytes("d4cf8595571830644bd14af416954d09ab7159751ad9e0f7a6cbd92379e71a66"));
  assertThat("scalarMultiply(0) failed",ed25519.getB().scalarMultiply(zero),is(equalTo(curve.getZero(GroupElement.Representation.P3))));
  assertThat("scalarMultiply(1) failed",ed25519.getB().scalarMultiply(one),is(equalTo(ed25519.getB())));
  assertThat("scalarMultiply(2) failed",ed25519.getB().scalarMultiply(two),is(equalTo(ed25519.getB().dbl())));
  assertThat("scalarMultiply(a) failed",ed25519.getB().scalarMultiply(a),is(equalTo(A)));
}
