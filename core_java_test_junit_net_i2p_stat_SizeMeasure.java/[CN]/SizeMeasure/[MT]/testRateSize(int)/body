{
  Runtime.getRuntime().gc();
  Rate rate[]=new Rate[num];
  long used=Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
  long usedPer=used / num;
  System.out.println(num + ": create array - Used: " + used+ " bytes (or "+ usedPer+ " bytes per array entry)");
  int i=0;
  try {
    for (; i < num; i++)     rate[i]=new Rate(1234);
  }
 catch (  OutOfMemoryError oom) {
    rate=null;
    Runtime.getRuntime().gc();
    System.out.println("Ran out of memory when creating rate " + i);
    return;
  }
  Runtime.getRuntime().gc();
  long usedObjects=Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
  usedPer=usedObjects / num;
  System.out.println(num + ": create objects - Used: " + usedObjects+ " bytes (or "+ usedPer+ " bytes per rate)");
  rate=null;
  Runtime.getRuntime().gc();
}
