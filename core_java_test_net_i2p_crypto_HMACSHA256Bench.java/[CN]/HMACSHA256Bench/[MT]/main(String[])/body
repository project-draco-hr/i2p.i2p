{
  I2PAppContext ctx=I2PAppContext.getGlobalContext();
  SessionKey key=ctx.keyGenerator().generateSessionKey();
  Hash asdfs=HMACSHA256Generator.getInstance().calculate(key,"qwerty".getBytes());
  int times=100000;
  long shorttime=0;
  long medtime=0;
  long longtime=0;
  long minShort=0;
  long maxShort=0;
  long minMed=0;
  long maxMed=0;
  long minLong=0;
  long maxLong=0;
  long shorttime1=0;
  long medtime1=0;
  long longtime1=0;
  long minShort1=0;
  long maxShort1=0;
  long minMed1=0;
  long maxMed1=0;
  long minLong1=0;
  long maxLong1=0;
  byte[] smess=new String("abc").getBytes();
  StringBuffer buf=new StringBuffer();
  for (int x=0; x < 2 * 1024; x++) {
    buf.append("a");
  }
  byte[] mmess=buf.toString().getBytes();
  buf=new StringBuffer();
  for (int x=0; x < 10000; x++) {
    buf.append("a");
  }
  byte[] lmess=buf.toString().getBytes();
  HMACSHA256Generator.Buffer sbuf=ctx.hmac().createBuffer(smess.length);
  HMACSHA256Generator.Buffer mbuf=ctx.hmac().createBuffer(mmess.length);
  HMACSHA256Generator.Buffer lbuf=ctx.hmac().createBuffer(lmess.length);
  ctx.hmac().calculate(key,smess,sbuf);
  ctx.hmac().calculate(key,mmess,mbuf);
  ctx.hmac().calculate(key,lmess,lbuf);
  long before=System.currentTimeMillis();
  for (int x=0; x < times; x++)   ctx.hmac().calculate(key,smess,sbuf);
  long after=System.currentTimeMillis();
  display(times,before,after,smess.length,"3 byte");
  before=System.currentTimeMillis();
  for (int x=0; x < times; x++)   ctx.hmac().calculate(key,mmess,mbuf);
  after=System.currentTimeMillis();
  display(times,before,after,mmess.length,"2KB");
  before=System.currentTimeMillis();
  for (int x=0; x < times; x++)   ctx.hmac().calculate(key,lmess,lbuf);
  after=System.currentTimeMillis();
  display(times,before,after,lmess.length,"10KB");
}
