{
  Object keys[]=KeyGenerator.getInstance().generatePKIKeypair();
  PublicKey pubKey=(PublicKey)keys[0];
  PrivateKey privKey=(PrivateKey)keys[1];
  SessionKey curKey=_context.sessionKeyManager().createSession(pubKey);
  for (int i=0; i < numMsgs; i++) {
    Set tags=null;
    SessionKey nextKey=null;
    curKey=_context.sessionKeyManager().getCurrentKey(pubKey);
    SessionTag curTag=_context.sessionKeyManager().consumeNextAvailableTag(pubKey,curKey);
    int availTags=_context.sessionKeyManager().getAvailableTags(pubKey,curKey);
    if ((availTags < 1)) {
      tags=generateNewTags(50);
      _log.info("Generating new tags");
    }
 else {
      _log.info("Tags already available: " + availTags + " curTag: "+ curTag);
    }
    if (i % 50 == 0)     nextKey=KeyGenerator.getInstance().generateSessionKey();
    byte[] msg=("msg " + i).getBytes();
    byte emsg[]=_context.elGamalAESEngine().encrypt(msg,pubKey,curKey,tags,curTag,nextKey,64);
    byte dmsg[]=_context.elGamalAESEngine().decrypt(emsg,privKey);
    if (DataHelper.eq(dmsg,msg))     _log.info("PASSED: Long session msg " + i);
 else {
      _log.error("FAILED: Long session msg " + i);
      return;
    }
    if ((tags != null) && (tags.size() > 0)) {
      if (nextKey == null) {
        _context.sessionKeyManager().tagsDelivered(pubKey,curKey,tags);
      }
 else {
        _context.sessionKeyManager().tagsDelivered(pubKey,nextKey,tags);
      }
    }
  }
}
