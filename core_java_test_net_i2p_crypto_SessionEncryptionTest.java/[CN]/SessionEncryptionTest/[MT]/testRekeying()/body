{
  Object keys[]=KeyGenerator.getInstance().generatePKIKeypair();
  PublicKey pubKey=(PublicKey)keys[0];
  PrivateKey privKey=(PrivateKey)keys[1];
  SessionKey curKey=_context.sessionKeyManager().createSession(pubKey);
  SessionKey nextKey=KeyGenerator.getInstance().generateSessionKey();
  SessionTag tag1=new SessionTag(true);
  SessionTag tag2=new SessionTag(true);
  SessionTag tag3=new SessionTag(true);
  SessionTag tag4=new SessionTag(true);
  HashSet firstTags=new HashSet();
  firstTags.add(tag1);
  firstTags.add(tag2);
  HashSet secondTags=new HashSet();
  secondTags.add(tag3);
  secondTags.add(tag4);
  byte[] msg1="msg 1".getBytes();
  byte[] msg2="msg 2".getBytes();
  byte[] msg3="msg 3".getBytes();
  byte[] msg4="msg 4".getBytes();
  byte[] msg5="msg 5".getBytes();
  byte emsg1[]=_context.elGamalAESEngine().encrypt(msg1,pubKey,curKey,firstTags,64);
  byte dmsg1[]=_context.elGamalAESEngine().decrypt(emsg1,privKey);
  if (DataHelper.eq(dmsg1,msg1))   _log.info("PASSED: Sessions msg 1");
 else {
    _log.error("FAILED: Sessions msg 1");
    return;
  }
  _context.sessionKeyManager().tagsDelivered(pubKey,curKey,firstTags);
  curKey=_context.sessionKeyManager().getCurrentKey(pubKey);
  SessionTag curTag=_context.sessionKeyManager().consumeNextAvailableTag(pubKey,curKey);
  if (curTag == null) {
    _log.error("Not able to consume next tag for message 2");
    return;
  }
  byte emsg2[]=_context.elGamalAESEngine().encrypt(msg2,pubKey,curKey,null,curTag,64);
  byte dmsg2[]=_context.elGamalAESEngine().decrypt(emsg2,privKey);
  if (DataHelper.eq(dmsg2,msg2))   _log.info("PASSED: Sessions msg 2");
 else {
    _log.error("FAILED: Sessions msg 2");
    return;
  }
  curKey=_context.sessionKeyManager().getCurrentKey(pubKey);
  curTag=_context.sessionKeyManager().consumeNextAvailableTag(pubKey,curKey);
  if (curTag == null) {
    _log.error("Not able to consume next tag for message 3");
    return;
  }
  if (curKey == null) {
    _log.error("Not able to consume next KEY for message 3");
    return;
  }
  byte emsg3[]=_context.elGamalAESEngine().encrypt(msg3,pubKey,curKey,secondTags,curTag,nextKey,64);
  byte dmsg3[]=_context.elGamalAESEngine().decrypt(emsg3,privKey);
  if (DataHelper.eq(dmsg3,msg3))   _log.info("PASSED: Sessions msg 3");
 else {
    _log.error("FAILED: Sessions msg 3");
    return;
  }
  _context.sessionKeyManager().tagsDelivered(pubKey,nextKey,secondTags);
  curKey=_context.sessionKeyManager().getCurrentKey(pubKey);
  curTag=_context.sessionKeyManager().consumeNextAvailableTag(pubKey,curKey);
  if (curTag == null) {
    _log.error("Not able to consume next tag for message 4");
    return;
  }
  if (curKey == null) {
    _log.error("Not able to consume next KEY for message 4");
    return;
  }
  byte emsg4[]=_context.elGamalAESEngine().encrypt(msg4,pubKey,curKey,null,curTag,64);
  byte dmsg4[]=_context.elGamalAESEngine().decrypt(emsg4,privKey);
  if (DataHelper.eq(dmsg4,msg4))   _log.info("PASSED: Sessions msg 4");
 else {
    _log.error("FAILED: Sessions msg 4");
    return;
  }
  curKey=_context.sessionKeyManager().getCurrentKey(pubKey);
  curTag=_context.sessionKeyManager().consumeNextAvailableTag(pubKey,curKey);
  if (curTag == null) {
    _log.error("Not able to consume next tag for message 5");
    return;
  }
  if (curKey == null) {
    _log.error("Not able to consume next KEY for message 5");
    return;
  }
  byte emsg5[]=_context.elGamalAESEngine().encrypt(msg5,pubKey,curKey,null,curTag,64);
  byte dmsg5[]=_context.elGamalAESEngine().decrypt(emsg5,privKey);
  if (DataHelper.eq(dmsg5,msg5))   _log.info("PASSED: Sessions msg 5");
 else {
    _log.error("FAILED: Sessions msg 5");
    return;
  }
}
