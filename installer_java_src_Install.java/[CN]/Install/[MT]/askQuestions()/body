{
  try {
    InputStream in=Install.class.getResourceAsStream("/install.config");
    _p=new Properties();
    _p.load(in);
    in.close();
  }
 catch (  IOException ex) {
    ex.printStackTrace();
    System.exit(1);
  }
  int count=Integer.parseInt(_p.getProperty("qs.count"));
  _answers=new HashMap(count + count);
  for (int i=1; i <= count; i++) {
    String ii=numberTo4Digits(i);
    String question=_p.getProperty("qs." + ii + ".question"), param=_p.getProperty("qs." + ii + ".param"), type=_p.getProperty("qs." + ii + ".type"), def=_p.getProperty("qs." + ii + ".default");
    if (question == null)     continue;
    if (type == null || "info".equals(type)) {
      handleOptInfo(question);
    }
 else     if ("info_spliced".equals(type)) {
      handleOptInfo(handleSpliceParams(question));
    }
 else     if ("category".equals(type)) {
      startOptCategory(question);
    }
 else     if ("skip".equals(type)) {
      i=Integer.parseInt(question) - 1;
    }
 else {
      if ("<none>".equals(question)) {
        if (!setOption(i,def))         throw new RuntimeException("Fixed and invalid value");
      }
 else {
        handleOption(i,question,def,type);
      }
    }
  }
  finishOptions();
}
