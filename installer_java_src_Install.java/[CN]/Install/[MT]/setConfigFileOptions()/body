{
  _answers.put("NOW",new Date().toString());
  if (_inTCP <= 0) {
    _answers.put("_router_hn","#i2np.tcp.hostname=[externally reachable hostname or IP address goes here]");
    _answers.put("_router_port","#i2np.tcp.port=[TCP/IP port number]");
    _answers.put("_router_lavalid","#i2np.tcp.listenAddressIsValid=[true/false for whether your external address is locally reachable]");
    _answers.put("_router_tcpdisable","#i2np.tcp.disable=[true/false for whether you want absolutely no tcp connections to be established (forcing phttp, etc)])");
  }
 else {
    _answers.put("_router_hn","i2np.tcp.hostname=" + _externalAddress);
    _answers.put("_router_port","i2np.tcp.port=" + _inTCP);
    _answers.put("_router_lavalid","i2np.tcp.listenAddressIsValid=" + _externalAddressIsReachable);
    _answers.put("_router_tcpdisable","i2np.tcp.disable=false");
  }
  if ((_phttpRegister == null) || (_phttpSend == null)) {
    _answers.put("_router_phttpreg","#i2np.phttp.registerURL=[full URL to a PHTTP registration server, e.g. http://someHost:8080/phttprelay/phttpRegister]");
    _answers.put("_router_phttpsend","#i2np.phttp.sendURL=[full URL to a PHTTP relay server, e.g. http://someHost:8080/phttprelay/phttpSend]");
  }
 else {
    _answers.put("_router_phttpreg","i2np.phttp.registerURL=" + _phttpRegister);
    _answers.put("_router_phttpsend","i2np.phttp.sendURL=" + _phttpSend);
  }
  _answers.put("_router_i2cp_port","" + _i2cpPort);
  _answers.put("_router_inbps","" + (_inBPS * 60));
  _answers.put("_router_outbps","" + (_outBPS * 60));
}
