{
  if (type != MESSAGE_TYPE)   throw new I2NPMessageException("Message type is incorrect for this message");
  try {
    _key=new Hash();
    _key.readBytes(in);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Hash read: " + _key.toBase64());
    _type=(int)DataHelper.readLong(in,1);
    _replyToken=DataHelper.readLong(in,4);
    if (_replyToken > 0) {
      _replyTunnel=new TunnelId();
      _replyTunnel.readBytes(in);
      _replyGateway=new Hash();
      _replyGateway.readBytes(in);
    }
 else {
      _replyTunnel=null;
      _replyGateway=null;
    }
    if (_type == KEY_TYPE_LEASESET) {
      _leaseSet=new LeaseSet();
      _leaseSet.readBytes(in);
    }
 else     if (_type == KEY_TYPE_ROUTERINFO) {
      _info=new RouterInfo();
      int compressedSize=(int)DataHelper.readLong(in,2);
      byte compressed[]=new byte[compressedSize];
      int read=DataHelper.read(in,compressed);
      if (read != compressedSize)       throw new I2NPMessageException("Invalid compressed data size");
      ByteArrayInputStream bais=new ByteArrayInputStream(DataHelper.decompress(compressed));
      _info.readBytes(bais);
    }
 else {
      throw new I2NPMessageException("Invalid type of key read from the structure - " + _type);
    }
  }
 catch (  DataFormatException dfe) {
    throw new I2NPMessageException("Unable to load the message data",dfe);
  }
}
