{
  if (_key == null)   throw new I2NPMessageException("Invalid key");
  if ((_type != KEY_TYPE_LEASESET) && (_type != KEY_TYPE_ROUTERINFO))   throw new I2NPMessageException("Invalid key type");
  if ((_type == KEY_TYPE_LEASESET) && (_leaseSet == null))   throw new I2NPMessageException("Missing lease set");
  if ((_type == KEY_TYPE_ROUTERINFO) && (_info == null))   throw new I2NPMessageException("Missing router info");
  ByteArrayOutputStream os=new ByteArrayOutputStream(256);
  try {
    _key.writeBytes(os);
    DataHelper.writeLong(os,1,_type);
    if (_type == KEY_TYPE_LEASESET) {
      _leaseSet.writeBytes(os);
    }
 else     if (_type == KEY_TYPE_ROUTERINFO) {
      ByteArrayOutputStream baos=new ByteArrayOutputStream(4 * 1024);
      _info.writeBytes(baos);
      byte uncompressed[]=baos.toByteArray();
      byte compressed[]=DataHelper.compress(uncompressed);
      DataHelper.writeLong(os,2,compressed.length);
      os.write(compressed);
    }
  }
 catch (  DataFormatException dfe) {
    throw new I2NPMessageException("Error writing out the message data",dfe);
  }
  return os.toByteArray();
}
