{
  ByteArrayOutputStream baos=new ByteArrayOutputStream(64);
  try {
    if (getEncrypted()) {
      if (_encryptionKey == null)       throw new DataFormatException("Encryption key is not set");
      _encryptionKey.writeBytes(baos);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("IsEncrypted");
    }
 else {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Is NOT Encrypted");
    }
switch (getDeliveryMode()) {
case FLAG_MODE_LOCAL:
      if (_log.shouldLog(Log.DEBUG))       _log.debug("mode = local");
    break;
case FLAG_MODE_DESTINATION:
  if (_destinationHash == null)   throw new DataFormatException("Destination hash is not set");
_destinationHash.writeBytes(baos);
if (_log.shouldLog(Log.DEBUG)) _log.debug("mode = destination, hash = " + _destinationHash);
break;
case FLAG_MODE_ROUTER:
if (_routerHash == null) throw new DataFormatException("Router hash is not set");
_routerHash.writeBytes(baos);
if (_log.shouldLog(Log.DEBUG)) _log.debug("mode = router, routerHash = " + _routerHash);
break;
case FLAG_MODE_TUNNEL:
if ((_routerHash == null) || (_tunnelId == null)) throw new DataFormatException("Router hash or tunnel ID is not set");
_routerHash.writeBytes(baos);
_tunnelId.writeBytes(baos);
if (_log.shouldLog(Log.DEBUG)) _log.debug("mode = tunnel, tunnelId = " + _tunnelId.getTunnelId() + ", routerHash = "+ _routerHash);
break;
}
if (getDelayRequested()) {
if (_log.shouldLog(Log.DEBUG)) _log.debug("delay requested: " + getDelaySeconds());
DataHelper.writeLong(baos,4,getDelaySeconds());
}
 else {
if (_log.shouldLog(Log.DEBUG)) _log.debug("delay NOT requested");
}
}
 catch (IOException ioe) {
throw new DataFormatException("Unable to write out additional info",ioe);
}
return baos.toByteArray();
}
