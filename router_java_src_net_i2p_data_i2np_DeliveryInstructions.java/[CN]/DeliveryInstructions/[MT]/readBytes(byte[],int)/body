{
  int cur=offset;
  long flags=DataHelper.fromLong(data,cur,1);
  cur++;
  setDeliveryMode(flagMode(flags));
switch (flagMode(flags)) {
case FLAG_MODE_LOCAL:
    break;
case FLAG_MODE_DESTINATION:
  Hash dh=Hash.create(data,cur);
cur+=Hash.HASH_LENGTH;
setDestination(dh);
break;
case FLAG_MODE_ROUTER:
Hash rh=Hash.create(data,cur);
cur+=Hash.HASH_LENGTH;
setRouter(rh);
break;
case FLAG_MODE_TUNNEL:
Hash trh=Hash.create(data,cur);
cur+=Hash.HASH_LENGTH;
setRouter(trh);
setTunnelId(new TunnelId(DataHelper.fromLong(data,cur,4)));
cur+=4;
break;
}
if (flagDelay(flags)) {
long delay=DataHelper.fromLong(data,cur,4);
cur+=4;
setDelayRequested(true);
setDelaySeconds(delay);
}
 else {
setDelayRequested(false);
}
return cur - offset;
}
