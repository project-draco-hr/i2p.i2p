{
  if (_hasChecksum)   throw new IllegalStateException(getClass().getSimpleName() + " read twice");
  int headerSize=HEADER_LENGTH;
  if (type >= 0)   headerSize--;
  if (maxLen < headerSize)   throw new I2NPMessageException("Payload is too short " + maxLen);
  int cur=offset;
  if (type < 0) {
    type=(int)DataHelper.fromLong(data,cur,1);
    cur++;
  }
  _uniqueId=DataHelper.fromLong(data,cur,4);
  cur+=4;
  _expiration=DataHelper.fromLong(data,cur,DataHelper.DATE_LENGTH);
  cur+=DataHelper.DATE_LENGTH;
  int size=(int)DataHelper.fromLong(data,cur,2);
  cur+=2;
  _checksum=data[cur];
  cur++;
  if (cur + size > data.length || headerSize + size > maxLen)   throw new I2NPMessageException("Payload is too short [" + "data.len=" + data.length + "maxLen="+ maxLen+ " offset="+ offset+ " cur="+ cur+ " wanted="+ size+ "]: "+ getClass().getSimpleName());
  int sz=Math.min(size,maxLen - headerSize);
  readMessage(data,cur,sz,type);
  cur+=sz;
  _hasChecksum=true;
  if (VERIFY_TEST && _log.shouldLog(Log.INFO))   _log.info("Ignored c/s " + getClass().getSimpleName());
  return cur - offset;
}
