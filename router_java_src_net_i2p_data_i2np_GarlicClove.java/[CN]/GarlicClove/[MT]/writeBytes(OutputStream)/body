{
  StringBuilder error=null;
  if (_instructions == null) {
    if (error == null)     error=new StringBuilder();
    error.append("No instructions ");
  }
  if (_msg == null) {
    if (error == null)     error=new StringBuilder();
    error.append("No message ");
  }
  if (_cloveId < 0) {
    if (error == null)     error=new StringBuilder();
    error.append("CloveID < 0 [").append(_cloveId).append("] ");
  }
  if (_expiration == null) {
    if (error == null)     error=new StringBuilder();
    error.append("Expiration is null ");
  }
  if (_certificate == null) {
    if (error == null)     error=new StringBuilder();
    error.append("Certificate is null ");
  }
  if ((error != null) && (error.length() > 0))   throw new DataFormatException(error.toString());
  _instructions.writeBytes(out);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Wrote instructions: " + _instructions);
  try {
    byte m[]=_msg.toByteArray();
    if (m == null)     throw new RuntimeException("foo, returned null");
    if (m.length <= 0)     throw new RuntimeException("foo, returned 0 length");
    out.write(m);
  }
 catch (  Exception e) {
    throw new DataFormatException("Unable to write the clove: " + _msg + " to "+ out,e);
  }
  DataHelper.writeLong(out,4,_cloveId);
  DataHelper.writeDate(out,_expiration);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("CloveID written: " + _cloveId + " expiration written: "+ _expiration);
  _certificate.writeBytes(out);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Written cert: " + _certificate);
}
