{
  long start=_context.clock().now();
  int prefixLen=1 + 4 + DataHelper.DATE_LENGTH+ 2+ CHECKSUM_LENGTH;
  try {
    int writtenLen=writeMessageBody(buffer,prefixLen);
    int payloadLen=writtenLen - prefixLen;
    SHA256EntryCache.CacheEntry cache=_context.sha().cache().acquire(payloadLen);
    Hash h=_context.sha().calculateHash(buffer,prefixLen,payloadLen,cache);
    int off=0;
    DataHelper.toLong(buffer,off,1,getType());
    off+=1;
    DataHelper.toLong(buffer,off,4,_uniqueId);
    off+=4;
    DataHelper.toLong(buffer,off,DataHelper.DATE_LENGTH,_expiration);
    off+=DataHelper.DATE_LENGTH;
    DataHelper.toLong(buffer,off,2,payloadLen);
    off+=2;
    System.arraycopy(h.getData(),0,buffer,off,CHECKSUM_LENGTH);
    _context.sha().cache().release(cache);
    long time=_context.clock().now() - start;
    return writtenLen;
  }
 catch (  I2NPMessageException ime) {
    _context.logManager().getLog(getClass()).log(Log.CRIT,"Error writing",ime);
    throw new IllegalStateException("Unable to serialize the message (" + getClass().getName() + "): "+ ime.getMessage());
  }
}
