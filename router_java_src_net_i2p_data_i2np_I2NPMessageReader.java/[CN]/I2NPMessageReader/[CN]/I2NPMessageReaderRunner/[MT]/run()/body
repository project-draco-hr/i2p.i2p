{
  while (_stayAlive) {
    while (_doRun) {
      while (!_context.throttle().acceptNetworkMessage()) {
        try {
          Thread.sleep(500 + _context.random().nextInt(512));
        }
 catch (        InterruptedException ie) {
        }
      }
      try {
        I2NPMessage msg=_handler.readMessage(_stream);
        if (msg != null) {
          long msToRead=_handler.getLastReadTime();
          int bytesRead=_handler.getLastSize();
          _listener.messageReceived(I2NPMessageReader.this,msg,msToRead,bytesRead);
        }
      }
 catch (      I2NPMessageException ime) {
        if (_log.shouldLog(Log.WARN))         _log.warn("Error handling message",ime);
        _listener.readError(I2NPMessageReader.this,ime);
        _listener.disconnected(I2NPMessageReader.this);
        cancelRunner();
      }
catch (      InterruptedIOException iioe) {
        if (_log.shouldLog(Log.INFO))         _log.info("Disconnecting due to inactivity",iioe);
        _listener.disconnected(I2NPMessageReader.this);
        cancelRunner();
      }
catch (      IOException ioe) {
        if (_log.shouldLog(Log.WARN))         _log.warn("IO Error handling message",ioe);
        _listener.disconnected(I2NPMessageReader.this);
        cancelRunner();
      }
catch (      Exception e) {
        _log.log(Log.CRIT,"error reading msg!",e);
        _listener.readError(I2NPMessageReader.this,e);
        _listener.disconnected(I2NPMessageReader.this);
        cancelRunner();
      }
    }
    if (_stayAlive && !_doRun) {
      try {
        Thread.sleep(500);
      }
 catch (      InterruptedException ie) {
      }
    }
  }
}
