{
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream(64);
    _decryptedInstructions=instructions;
    _decryptedMessageId=messageId;
    _decryptedCertificate=cert;
    _decryptedExpiration=expiration;
    instructions.writeBytes(baos);
    DataHelper.writeLong(baos,4,messageId);
    cert.writeBytes(baos);
    DataHelper.writeDate(baos,new Date(expiration));
    int paddedSize=256;
    SessionKey sessKey=null;
    SessionTag tag=null;
    if (instructions.getDelayRequested()) {
      sessKey=KeyGenerator.getInstance().generateSessionKey();
      tag=null;
      _log.debug("Delay requested - creating a new session key");
    }
 else {
      sessKey=SessionKeyManager.getInstance().getCurrentKey(replyThrough);
      if (sessKey == null) {
        sessKey=KeyGenerator.getInstance().generateSessionKey();
        tag=null;
        _log.debug("No delay requested, but no session key is known");
      }
 else {
        tag=SessionKeyManager.getInstance().consumeNextAvailableTag(replyThrough,sessKey);
      }
    }
    byte encData[]=ElGamalAESEngine.encrypt(baos.toByteArray(),replyThrough,sessKey,null,tag,paddedSize);
    setData(encData);
  }
 catch (  IOException ioe) {
    throw new DataFormatException("Error writing out the source route block data",ioe);
  }
catch (  DataFormatException dfe) {
    throw new DataFormatException("Error writing out the source route block data",dfe);
  }
}
