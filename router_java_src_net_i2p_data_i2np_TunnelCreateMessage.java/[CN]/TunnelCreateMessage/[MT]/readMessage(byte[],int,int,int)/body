{
  if (type != MESSAGE_TYPE)   throw new I2NPMessageException("Message type is incorrect for this message");
  if (DataHelper.eq(INVALID_HASH.getData(),0,data,offset,Hash.HASH_LENGTH)) {
    _nextRouter=null;
  }
 else {
    _nextRouter=new Hash(new byte[Hash.HASH_LENGTH]);
    System.arraycopy(data,offset,_nextRouter.getData(),0,Hash.HASH_LENGTH);
  }
  offset+=Hash.HASH_LENGTH;
  long id=DataHelper.fromLong(data,offset,4);
  if (id > 0)   _nextTunnelId=new TunnelId(id);
  offset+=4;
  _durationSeconds=(int)DataHelper.fromLong(data,offset,2);
  offset+=2;
  _layerKey=new SessionKey(new byte[SessionKey.KEYSIZE_BYTES]);
  System.arraycopy(data,offset,_layerKey.getData(),0,SessionKey.KEYSIZE_BYTES);
  offset+=SessionKey.KEYSIZE_BYTES;
  _ivKey=new SessionKey(new byte[SessionKey.KEYSIZE_BYTES]);
  System.arraycopy(data,offset,_ivKey.getData(),0,SessionKey.KEYSIZE_BYTES);
  offset+=SessionKey.KEYSIZE_BYTES;
  try {
    Properties opts=new Properties();
    _options=opts;
    offset=DataHelper.fromProperties(data,offset,opts);
  }
 catch (  DataFormatException dfe) {
    throw new I2NPMessageException("Error reading the options",dfe);
  }
  _replyGateway=new Hash(new byte[Hash.HASH_LENGTH]);
  System.arraycopy(data,offset,_replyGateway.getData(),0,Hash.HASH_LENGTH);
  offset+=Hash.HASH_LENGTH;
  _replyTunnel=new TunnelId(DataHelper.fromLong(data,offset,4));
  offset+=4;
  _replyTag=new SessionTag(new byte[SessionTag.BYTE_LENGTH]);
  System.arraycopy(data,offset,_replyTag.getData(),0,SessionTag.BYTE_LENGTH);
  offset+=SessionTag.BYTE_LENGTH;
  _replyKey=new SessionKey(new byte[SessionKey.KEYSIZE_BYTES]);
  System.arraycopy(data,offset,_replyKey.getData(),0,SessionKey.KEYSIZE_BYTES);
  offset+=SessionKey.KEYSIZE_BYTES;
  _nonce=DataHelper.fromLong(data,offset,4);
  offset+=4;
  try {
    Certificate cert=new Certificate();
    _certificate=cert;
    offset+=cert.readBytes(data,offset);
  }
 catch (  DataFormatException dfe) {
    throw new I2NPMessageException("Error reading the certificate",dfe);
  }
  Boolean b=DataHelper.fromBoolean(data,offset);
  if (b == null)   throw new I2NPMessageException("isGateway == unknown?!");
  _isGateway=b.booleanValue();
  offset+=DataHelper.BOOLEAN_LENGTH;
}
