{
  if ((_tunnelId == null) || (_data == null) || (_data.length <= 0))   throw new I2NPMessageException("Not enough data to write out");
  ByteArrayOutputStream os=new ByteArrayOutputStream(64 + _data.length);
  try {
    _tunnelId.writeBytes(os);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Writing tunnel message for tunnel " + _tunnelId);
    DataHelper.writeLong(os,4,_data.length);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Writing tunnel message length: " + _data.length);
    os.write(_data);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Writing tunnel message data");
    if ((_verification == null) || (_encryptedInstructions == null)) {
      DataHelper.writeLong(os,1,FLAG_DONT_INCLUDESTRUCTURE);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Writing DontIncludeStructure flag");
    }
 else {
      DataHelper.writeLong(os,1,FLAG_INCLUDESTRUCTURE);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Writing IncludeStructure flag, then the verification structure, then the " + "E(instr).length [" + _encryptedInstructions.length + "], then the E(instr)");
      _verification.writeBytes(os);
      DataHelper.writeLong(os,2,_encryptedInstructions.length);
      os.write(_encryptedInstructions);
    }
  }
 catch (  DataFormatException dfe) {
    throw new I2NPMessageException("Error writing out the message data",dfe);
  }
  byte rv[]=os.toByteArray();
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Overall data being written: " + rv.length);
  return rv;
}
