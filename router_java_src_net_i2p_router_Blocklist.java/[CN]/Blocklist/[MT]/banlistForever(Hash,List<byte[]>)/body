{
  File blFile=null;
  String file=_context.getProperty(PROP_BLOCKLIST_FILE);
  if (file != null) {
    blFile=new File(file);
    if (!blFile.isAbsolute())     blFile=new File(_context.getConfigDir(),file);
    if (!blFile.exists())     blFile=null;
  }
  if (blFile == null)   blFile=new File(_context.getBaseDir(),BLOCKLIST_FILE_DEFAULT);
  if ((!blFile.exists()) || blFile.length() <= 0) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Banlisting " + peer);
    _context.banlist().banlistRouterForever(peer,"Banned");
    return;
  }
  for (Iterator<byte[]> iter=ips.iterator(); iter.hasNext(); ) {
    byte ip[]=iter.next();
    int ipint=toInt(ip);
    BufferedReader br=null;
    try {
      br=new BufferedReader(new InputStreamReader(new FileInputStream(blFile),"UTF-8"));
      String buf=null;
      while ((buf=br.readLine()) != null) {
        Entry e=parse(buf,false);
        if (e == null || e.peer != null) {
          continue;
        }
        if (match(ipint,toEntry(e.ip1,e.ip2))) {
          try {
            br.close();
          }
 catch (          IOException ioe) {
          }
          String reason=_x("IP banned by blocklist.txt entry {0}");
          if (_log.shouldLog(Log.WARN))           _log.warn("Banlisting " + peer + " "+ reason);
          _context.banlist().banlistRouterForever(peer,reason,buf.toString());
          return;
        }
      }
    }
 catch (    IOException ioe) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Error reading the blocklist file",ioe);
    }
 finally {
      if (br != null)       try {
        br.close();
      }
 catch (      IOException ioe) {
      }
    }
  }
}
