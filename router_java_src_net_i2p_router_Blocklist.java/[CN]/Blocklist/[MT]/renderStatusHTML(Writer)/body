{
  out.write("<h2>Banned IPs</h2>");
  Set singles=new TreeSet();
  singles.addAll(_singleIPBlocklist);
  if (singles.size() > 0) {
    out.write("<table><tr><td><b>Transient IPs</b></td></tr>");
    for (Iterator iter=singles.iterator(); iter.hasNext(); ) {
      int ip=((Integer)iter.next()).intValue();
      out.write("<tr><td align=right>");
      out.write(toStr(ip));
      out.write("</td></tr>\n");
    }
    out.write("</table>");
  }
  if (_blocklistSize > 0) {
    out.write("<table><tr><td align=center colspan=2><b>IPs from Blocklist File</b></td></tr><tr><td align=center><b>From</b></td><td align=center><b>To</b></td></tr>");
    for (int i=0; i < _blocklistSize; i++) {
      int from=getFrom(_blocklist[i]);
      out.write("<tr><td align=right>");
      out.write(toStr(from));
      out.write("</td><td align=right>");
      int to=getTo(_blocklist[i]);
      if (to != from) {
        out.write(toStr(to));
        out.write("</td></tr>\n");
      }
 else       out.write("&nbsp</td></tr>\n");
    }
    out.write("</table>");
  }
 else {
    out.write("<br>No blocklist file entries");
  }
  out.flush();
}
