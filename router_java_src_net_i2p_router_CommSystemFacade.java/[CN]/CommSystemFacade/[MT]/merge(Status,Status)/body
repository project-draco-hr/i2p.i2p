{
  if (oldStatus == newStatus || newStatus == UNKNOWN)   return oldStatus;
  if (oldStatus == UNKNOWN || oldStatus == DISCONNECTED || oldStatus == HOSED)   return newStatus;
switch (newStatus) {
case IPV4_OK_IPV6_UNKNOWN:
switch (oldStatus) {
case OK:
case IPV4_FIREWALLED_IPV6_OK:
case IPV4_DISABLED_IPV6_OK:
case IPV4_SNAT_IPV6_OK:
      return OK;
case IPV4_OK_IPV6_FIREWALLED:
    return oldStatus;
case DIFFERENT:
case REJECT_UNSOLICITED:
  return newStatus;
case IPV4_DISABLED_IPV6_FIREWALLED:
return IPV4_OK_IPV6_FIREWALLED;
case IPV4_UNKNOWN_IPV6_OK:
return OK;
case IPV4_UNKNOWN_IPV6_FIREWALLED:
return IPV4_OK_IPV6_FIREWALLED;
case IPV4_OK_IPV6_UNKNOWN:
case IPV4_FIREWALLED_IPV6_UNKNOWN:
case IPV4_DISABLED_IPV6_UNKNOWN:
case IPV4_SNAT_IPV6_UNKNOWN:
return newStatus;
default :
return newStatus;
}
case IPV4_UNKNOWN_IPV6_OK:
switch (oldStatus) {
case OK:
case IPV4_OK_IPV6_FIREWALLED:
return OK;
case IPV4_FIREWALLED_IPV6_OK:
case IPV4_DISABLED_IPV6_OK:
case DIFFERENT:
case IPV4_SNAT_IPV6_OK:
return oldStatus;
case REJECT_UNSOLICITED:
return IPV4_FIREWALLED_IPV6_OK;
case IPV4_DISABLED_IPV6_FIREWALLED:
return IPV4_DISABLED_IPV6_OK;
case IPV4_UNKNOWN_IPV6_OK:
case IPV4_UNKNOWN_IPV6_FIREWALLED:
return newStatus;
case IPV4_OK_IPV6_UNKNOWN:
return OK;
case IPV4_FIREWALLED_IPV6_UNKNOWN:
return IPV4_FIREWALLED_IPV6_OK;
case IPV4_DISABLED_IPV6_UNKNOWN:
return IPV4_DISABLED_IPV6_OK;
case IPV4_SNAT_IPV6_UNKNOWN:
return IPV4_SNAT_IPV6_OK;
default :
return newStatus;
}
case IPV4_FIREWALLED_IPV6_UNKNOWN:
switch (oldStatus) {
case OK:
case IPV4_DISABLED_IPV6_OK:
case IPV4_FIREWALLED_IPV6_OK:
case IPV4_SNAT_IPV6_OK:
return IPV4_FIREWALLED_IPV6_OK;
case IPV4_OK_IPV6_FIREWALLED:
case IPV4_DISABLED_IPV6_FIREWALLED:
return REJECT_UNSOLICITED;
case DIFFERENT:
case REJECT_UNSOLICITED:
return newStatus;
case IPV4_UNKNOWN_IPV6_OK:
return IPV4_FIREWALLED_IPV6_OK;
case IPV4_UNKNOWN_IPV6_FIREWALLED:
return REJECT_UNSOLICITED;
case IPV4_OK_IPV6_UNKNOWN:
case IPV4_FIREWALLED_IPV6_UNKNOWN:
case IPV4_DISABLED_IPV6_UNKNOWN:
case IPV4_SNAT_IPV6_UNKNOWN:
return newStatus;
default :
return newStatus;
}
case IPV4_UNKNOWN_IPV6_FIREWALLED:
switch (oldStatus) {
case OK:
return IPV4_OK_IPV6_FIREWALLED;
case IPV4_OK_IPV6_FIREWALLED:
return oldStatus;
case REJECT_UNSOLICITED:
case IPV4_FIREWALLED_IPV6_OK:
case IPV4_DISABLED_IPV6_FIREWALLED:
return REJECT_UNSOLICITED;
case IPV4_DISABLED_IPV6_OK:
return IPV4_DISABLED_IPV6_FIREWALLED;
case DIFFERENT:
case IPV4_SNAT_IPV6_OK:
return oldStatus;
case IPV4_UNKNOWN_IPV6_OK:
case IPV4_UNKNOWN_IPV6_FIREWALLED:
return newStatus;
case IPV4_OK_IPV6_UNKNOWN:
return IPV4_OK_IPV6_FIREWALLED;
case IPV4_FIREWALLED_IPV6_UNKNOWN:
return REJECT_UNSOLICITED;
case IPV4_DISABLED_IPV6_UNKNOWN:
return IPV4_DISABLED_IPV6_FIREWALLED;
case IPV4_SNAT_IPV6_UNKNOWN:
return DIFFERENT;
default :
return newStatus;
}
case IPV4_DISABLED_IPV6_UNKNOWN:
switch (oldStatus) {
case OK:
case IPV4_DISABLED_IPV6_OK:
case IPV4_FIREWALLED_IPV6_OK:
case IPV4_SNAT_IPV6_OK:
return IPV4_DISABLED_IPV6_OK;
case IPV4_OK_IPV6_FIREWALLED:
case IPV4_DISABLED_IPV6_FIREWALLED:
case REJECT_UNSOLICITED:
return IPV4_DISABLED_IPV6_FIREWALLED;
case DIFFERENT:
return newStatus;
case IPV4_UNKNOWN_IPV6_OK:
return IPV4_DISABLED_IPV6_OK;
case IPV4_UNKNOWN_IPV6_FIREWALLED:
return IPV4_DISABLED_IPV6_FIREWALLED;
case IPV4_OK_IPV6_UNKNOWN:
case IPV4_FIREWALLED_IPV6_UNKNOWN:
case IPV4_DISABLED_IPV6_UNKNOWN:
case IPV4_SNAT_IPV6_UNKNOWN:
return newStatus;
default :
return newStatus;
}
case IPV4_SNAT_IPV6_UNKNOWN:
switch (oldStatus) {
case OK:
case IPV4_DISABLED_IPV6_OK:
case IPV4_FIREWALLED_IPV6_OK:
case IPV4_SNAT_IPV6_OK:
return IPV4_SNAT_IPV6_OK;
case IPV4_OK_IPV6_FIREWALLED:
case IPV4_DISABLED_IPV6_FIREWALLED:
case REJECT_UNSOLICITED:
return DIFFERENT;
case DIFFERENT:
return newStatus;
case IPV4_UNKNOWN_IPV6_OK:
return IPV4_SNAT_IPV6_OK;
case IPV4_UNKNOWN_IPV6_FIREWALLED:
return DIFFERENT;
case IPV4_OK_IPV6_UNKNOWN:
case IPV4_FIREWALLED_IPV6_UNKNOWN:
case IPV4_DISABLED_IPV6_UNKNOWN:
case IPV4_SNAT_IPV6_UNKNOWN:
return newStatus;
default :
return newStatus;
}
case UNKNOWN:
return oldStatus;
default :
return newStatus;
}
}
