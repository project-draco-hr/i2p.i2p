{
  try {
    while (_alive) {
      long now=_context.clock().now();
      long timeToWait=-1;
      ArrayList toAdd=null;
synchronized (_jobLock) {
        for (int i=0; i < _timedJobs.size(); i++) {
          Job j=(Job)_timedJobs.get(i);
          long timeLeft=j.getTiming().getStartAfter() - now;
          if (timeLeft <= 0) {
            if (j instanceof JobImpl)             ((JobImpl)j).madeReady();
            if (toAdd == null)             toAdd=new ArrayList(4);
            toAdd.add(j);
            _timedJobs.remove(i);
            i--;
          }
 else {
            if ((timeToWait <= 0) || (timeLeft < timeToWait))             timeToWait=timeLeft;
          }
        }
        if (toAdd != null) {
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Not waiting - we have " + toAdd.size() + " newly ready jobs");
          for (int i=0; i < toAdd.size(); i++)           _readyJobs.add(toAdd.get(i));
          _jobLock.notifyAll();
        }
 else {
          if (timeToWait < 0)           timeToWait=30 * 1000;
 else           if (timeToWait < 10)           timeToWait=10;
 else           if (timeToWait > 10 * 1000)           timeToWait=10 * 1000;
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Waiting " + timeToWait + " before rechecking the timed queue");
          try {
            _jobLock.wait(timeToWait);
          }
 catch (          InterruptedException ie) {
          }
        }
      }
    }
  }
 catch (  Throwable t) {
    _context.clock().removeUpdateListener(this);
    if (_log.shouldLog(Log.ERROR))     _log.error("wtf, pumper killed",t);
  }
}
