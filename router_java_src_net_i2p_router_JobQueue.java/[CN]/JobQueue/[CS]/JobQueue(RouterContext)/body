{
  _context=context;
  _log=context.logManager().getLog(JobQueue.class);
  _context.statManager().createRateStat("jobQueue.readyJobs","How many ready and waiting jobs there are?","JobQueue",new long[]{60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("jobQueue.droppedJobs","How many jobs do we drop due to insane overload?","JobQueue",new long[]{60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("jobQueue.queuedJobs","How many scheduled jobs are there?","JobQueue",new long[]{60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("jobQueue.jobRun","How long jobs take","JobQueue",new long[]{60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("jobQueue.jobRunSlow","How long jobs that take over a second take","JobQueue",new long[]{60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRequiredRateStat("jobQueue.jobLag","Job run delay (ms)","JobQueue",new long[]{60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("jobQueue.jobWait","How long does a job sit on the job queue?","JobQueue",new long[]{60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _readyJobs=new LinkedBlockingQueue<Job>();
  _timedJobs=new TreeSet<Job>(new JobComparator());
  _jobLock=new Object();
  _queueRunners=new ConcurrentHashMap<Integer,JobQueueRunner>(RUNNERS);
  _jobStats=new ConcurrentHashMap<String,JobStats>();
  _pumper=new QueuePumper();
}
