{
  if (job == null)   return;
  if (job instanceof JobImpl)   ((JobImpl)job).addedToQueue();
  long numReady=0;
  boolean alreadyExists=false;
  boolean dropped=false;
synchronized (_jobLock) {
    if (_readyJobs.contains(job))     alreadyExists=true;
    numReady=_readyJobs.size();
    if (!alreadyExists) {
      if (_timedJobs.contains(job))       alreadyExists=true;
    }
    if (shouldDrop(job,numReady)) {
      job.dropped();
      dropped=true;
    }
 else {
      if (!alreadyExists) {
        if (job.getTiming().getStartAfter() <= _context.clock().now()) {
          job.getTiming().setStartAfter(_context.clock().now());
          if (job instanceof JobImpl)           ((JobImpl)job).madeReady();
          _readyJobs.add(job);
        }
 else {
          _timedJobs.add(job);
        }
      }
    }
    _jobLock.notifyAll();
  }
  _context.statManager().addRateData("jobQueue.readyJobs",numReady,0);
  if (dropped) {
    _context.statManager().addRateData("jobQueue.droppedJobs",1,1);
    if (_log.shouldLog(Log.WARN))     _log.warn("Dropping job due to overload!  # ready jobs: " + numReady + ": job = "+ job);
  }
  return;
}
