{
  if (job == null)   return;
  if (job instanceof JobImpl)   ((JobImpl)job).addedToQueue();
  boolean isReady=false;
  long numReady=0;
  boolean alreadyExists=false;
synchronized (_readyJobs) {
    if (_readyJobs.contains(job))     alreadyExists=true;
    numReady=_readyJobs.size();
  }
  if (!alreadyExists) {
synchronized (_timedJobs) {
      if (_timedJobs.contains(job))       alreadyExists=true;
    }
  }
  _context.statManager().addRateData("jobQueue.readyJobs",numReady,0);
  if (shouldDrop(job,numReady)) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Dropping job due to overload!  # ready jobs: " + numReady + ": job = "+ job);
    job.dropped();
    _context.statManager().addRateData("jobQueue.droppedJobs",1,1);
    awaken(1);
    return;
  }
  if (!alreadyExists) {
    if (job.getTiming().getStartAfter() <= _context.clock().now()) {
      job.getTiming().setStartAfter(_context.clock().now());
      if (job instanceof JobImpl)       ((JobImpl)job).madeReady();
synchronized (_readyJobs) {
        _readyJobs.add(job);
        isReady=true;
      }
    }
 else {
synchronized (_timedJobs) {
        _timedJobs.add(job);
      }
    }
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Not adding already enqueued job " + job.getName());
  }
  if (isReady) {
    awaken(1);
  }
  return;
}
