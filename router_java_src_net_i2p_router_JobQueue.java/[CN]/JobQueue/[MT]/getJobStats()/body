{
  StringBuffer buf=new StringBuffer(16 * 1024);
  buf.append("<table border=\"1\">\n");
  buf.append("<tr><td><b>Job</b></td><td><b>Runs</b></td>");
  buf.append("<td><b>Time</b></td><td><b><i>Avg</i></b></td><td><b><i>Max</i></b></td><td><b><i>Min</i></b></td>");
  buf.append("<td><b>Pending</b></td><td><b><i>Avg</i></b></td><td><b><i>Max</i></b></td><td><b><i>Min</i></b></td></tr>\n");
  long totRuns=0;
  long totExecTime=0;
  long avgExecTime=0;
  long maxExecTime=-1;
  long minExecTime=-1;
  long totPendingTime=0;
  long avgPendingTime=0;
  long maxPendingTime=-1;
  long minPendingTime=-1;
  TreeMap tstats=null;
synchronized (_jobStats) {
    tstats=new TreeMap(_jobStats);
  }
  for (Iterator iter=tstats.values().iterator(); iter.hasNext(); ) {
    JobStats stats=(JobStats)iter.next();
    buf.append("<tr>");
    buf.append("<td><b>").append(stats.getName()).append("</b></td>");
    buf.append("<td>").append(stats.getRuns()).append("</td>");
    buf.append("<td>").append(stats.getTotalTime()).append("</td>");
    buf.append("<td>").append(stats.getAvgTime()).append("</td>");
    buf.append("<td>").append(stats.getMaxTime()).append("</td>");
    buf.append("<td>").append(stats.getMinTime()).append("</td>");
    buf.append("<td>").append(stats.getTotalPendingTime()).append("</td>");
    buf.append("<td>").append(stats.getAvgPendingTime()).append("</td>");
    buf.append("<td>").append(stats.getMaxPendingTime()).append("</td>");
    buf.append("<td>").append(stats.getMinPendingTime()).append("</td>");
    buf.append("</tr>\n");
    totRuns+=stats.getRuns();
    totExecTime+=stats.getTotalTime();
    if (stats.getMaxTime() > maxExecTime)     maxExecTime=stats.getMaxTime();
    if ((minExecTime < 0) || (minExecTime > stats.getMinTime()))     minExecTime=stats.getMinTime();
    totPendingTime+=stats.getTotalPendingTime();
    if (stats.getMaxPendingTime() > maxPendingTime)     maxPendingTime=stats.getMaxPendingTime();
    if ((minPendingTime < 0) || (minPendingTime > stats.getMinPendingTime()))     minPendingTime=stats.getMinPendingTime();
  }
  if (totRuns != 0) {
    if (totExecTime != 0)     avgExecTime=totExecTime / totRuns;
    if (totPendingTime != 0)     avgPendingTime=totPendingTime / totRuns;
  }
  buf.append("<tr><td colspan=\"10\"><hr /></td><tr>");
  buf.append("<tr>");
  buf.append("<td><i><b>").append("SUMMARY").append("</b></i></td>");
  buf.append("<td><i>").append(totRuns).append("</i></td>");
  buf.append("<td><i>").append(totExecTime).append("</i></td>");
  buf.append("<td><i>").append(avgExecTime).append("</i></td>");
  buf.append("<td><i>").append(maxExecTime).append("</i></td>");
  buf.append("<td><i>").append(minExecTime).append("</i></td>");
  buf.append("<td><i>").append(totPendingTime).append("</i></td>");
  buf.append("<td><i>").append(avgPendingTime).append("</i></td>");
  buf.append("<td><i>").append(maxPendingTime).append("</i></td>");
  buf.append("<td><i>").append(minPendingTime).append("</i></td>");
  buf.append("</tr>\n");
  buf.append("</table>\n");
  return buf.toString();
}
