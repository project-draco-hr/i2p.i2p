{
  if (_context.router() == null)   return;
  String key=job.getName();
  long lag=doStart - origStartAfter;
  MessageHistory hist=_context.messageHistory();
  long uptime=_context.router().getUptime();
  if (lag < 0)   lag=0;
  if (duration < 0)   duration=0;
  JobStats stats=_jobStats.get(key);
  if (stats == null) {
    stats=new JobStats(key);
    JobStats old=_jobStats.putIfAbsent(key,stats);
    if (old != null)     stats=old;
  }
  stats.jobRan(duration,lag);
  String dieMsg=null;
  if (lag > _lagWarning) {
    dieMsg="Lag too long for job " + job.getName() + " ["+ lag+ "ms and a run time of "+ duration+ "ms]";
  }
 else   if (duration > _runWarning) {
    dieMsg="Job run too long for job " + job.getName() + " ["+ lag+ "ms lag and run time of "+ duration+ "ms]";
  }
  if (dieMsg != null) {
    if (_log.shouldLog(Log.WARN))     _log.warn(dieMsg);
    if (hist != null)     hist.messageProcessingError(-1,JobQueue.class.getName(),dieMsg);
  }
  if ((lag > _lagFatal) && (uptime > _warmupTime)) {
    if (_log.shouldLog(Log.WARN))     _log.log(Log.WARN,"The router is either incredibly overloaded or (more likely) there's an error.",new Exception("ttttooooo mmmuuuccccchhhh llllaaagggg"));
    return;
  }
  if ((uptime > _warmupTime) && (duration > _runFatal)) {
    if (_log.shouldLog(Log.WARN))     _log.log(Log.WARN,"The router is incredibly overloaded - either you have a 386, or (more likely) there's an error. ",new Exception("ttttooooo sssllloooowww"));
    return;
  }
}
