{
  StringBuffer buf=new StringBuffer(128);
  if (tunnel.getInbound() == null) {
    for (int i=0; i < tunnel.getLength() - 1; i++) {
      Hash peer=tunnel.getPeer(i);
      if ((peer != null) && (peer.equals(_context.routerHash())))       continue;
 else       if (peer != null)       buf.append(peer.toBase64());
 else       buf.append("[unknown_peer]");
      buf.append(" ");
      TunnelId id=tunnel.getReceiveTunnelId(i);
      if (id != null)       buf.append(id.getTunnelId());
 else       buf.append("[unknown_tunnel]");
      buf.append(" ");
      buf.append(_context.clock().now()).append(" hop ").append(i).append(" ").append(msg).append("\n");
    }
  }
 else {
    int hop=0;
    TunnelInfo info=tunnel.getOutbound();
    for (int i=0; (info != null) && (i < info.getLength() - 1); i++) {
      Hash peer=info.getPeer(i);
      if ((peer != null) && (peer.equals(_context.routerHash())))       continue;
 else       if (peer != null)       buf.append(peer.toBase64());
 else       buf.append("[unknown_peer]");
      buf.append(" ");
      TunnelId id=info.getReceiveTunnelId(i);
      if (id != null)       buf.append(id.getTunnelId());
 else       buf.append("[unknown_tunnel]");
      buf.append(" ");
      buf.append(_context.clock().now()).append(" out_hop ").append(hop).append(" ").append(msg).append("\n");
      hop++;
    }
    info=tunnel.getInbound();
    for (int i=0; (info != null) && (i < info.getLength() - 1); i++) {
      Hash peer=info.getPeer(i);
      if ((peer != null) && (peer.equals(_context.routerHash())))       continue;
 else       if (peer != null)       buf.append(peer.toBase64());
 else       buf.append("[unknown_peer]");
      buf.append(" ");
      TunnelId id=info.getReceiveTunnelId(i);
      if (id != null)       buf.append(id.getTunnelId());
 else       buf.append("[unknown_tunnel]");
      buf.append(" ");
      buf.append(_context.clock().now()).append(" in_hop ").append(hop).append(" ").append(msg).append("\n");
      hop++;
    }
  }
  try {
synchronized (_out) {
      _out.write(buf.toString());
    }
  }
 catch (  IOException ioe) {
    _log.error("error logging [" + msg + "]",ioe);
  }
}
