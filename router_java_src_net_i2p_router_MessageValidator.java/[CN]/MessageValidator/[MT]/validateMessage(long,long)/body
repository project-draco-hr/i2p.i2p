{
  long now=_context.clock().now();
  if (now - Router.CLOCK_FUDGE_FACTOR >= expiration) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Rejecting message " + messageId + " because it expired "+ (now - expiration)+ "ms ago");
    _context.statManager().addRateData("router.invalidMessageTime",(now - expiration),0);
    return "expired " + (now - expiration) + "ms ago";
  }
 else   if (now + 4 * Router.CLOCK_FUDGE_FACTOR < expiration) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Rejecting message " + messageId + " because it will expire too far in the future ("+ (expiration - now)+ "ms)");
    _context.statManager().addRateData("router.invalidMessageTime",(now - expiration),0);
    return "expire too far in the future (" + (expiration - now) + "ms)";
  }
  boolean isDuplicate=noteReception(messageId,expiration);
  if (isDuplicate) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Rejecting message " + messageId + " because it is a duplicate",new Exception("Duplicate origin"));
    _context.statManager().addRateData("router.duplicateMessageId",1,0);
    return "duplicate";
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Accepting message " + messageId + " because it is NOT a duplicate",new Exception("Original origin"));
    return null;
  }
}
