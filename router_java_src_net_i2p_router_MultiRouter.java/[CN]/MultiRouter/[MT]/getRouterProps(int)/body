{
  Properties props=new Properties();
  props.setProperty("router.profileDir","/peerProfiles");
  props.setProperty("router.sessionKeys.location","/sessionKeys.dat");
  props.setProperty("router.info.location","/router.info");
  props.setProperty("router.keys.location","/router.keys");
  props.setProperty("router.networkDatabase.dbDir","/netDb");
  props.setProperty("router.tunnelPoolFile","/tunnelPool.dat");
  props.setProperty("router.keyBackupDir","/keyBackup");
  props.setProperty("router.clientConfigFile",getBaseDir(id) + "/clients.config");
  props.setProperty("router.configLocation",getBaseDir(id) + "/router.config");
  props.setProperty("router.pingFile",getBaseDir(id) + "/router.ping");
  props.setProperty("router.rejectStartupTime","0");
  props.setProperty("router.reseedDisable","true");
  props.setProperty("i2p.dir.app",getBaseDir(id));
  props.setProperty("i2p.dir.config",getBaseDir(id));
  props.setProperty("i2p.dir.log",getBaseDir(id));
  props.setProperty("i2p.dir.router",getBaseDir(id));
  props.setProperty("i2p.dir.pid",getBaseDir(id));
  props.setProperty("i2np.ntcp.hostname","127.0.0.1");
  props.setProperty("i2np.udp.host","127.0.0.1");
  props.setProperty("i2np.ntcp.port",BASE_PORT + id + "");
  props.setProperty("i2np.udp.port",BASE_PORT + id + "");
  props.setProperty("i2np.allowLocal","true");
  props.setProperty("i2np.udp.internalPort",BASE_PORT + id + "");
  props.setProperty("i2cp.port",Integer.toString((BASE_PORT + nbrRouters + id)));
  return props;
}
