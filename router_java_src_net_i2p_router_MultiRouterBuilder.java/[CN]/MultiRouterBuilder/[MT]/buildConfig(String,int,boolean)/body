{
  File baseDir=new File(dir);
  baseDir.mkdirs();
  File cfgFile=new File(baseDir,"router.config");
  StringBuilder buf=new StringBuilder(8 * 1024);
  buf.append("router.profileDir=").append(baseDir.getPath()).append("/peerProfiles\n");
  buf.append("router.historyFilename=").append(baseDir.getPath()).append("/messageHistory.txt\n");
  buf.append("router.sessionKeys.location=").append(baseDir.getPath()).append("/sessionKeys.dat\n");
  buf.append("router.info.location=").append(baseDir.getPath()).append("/router.info\n");
  buf.append("router.keys.location=").append(baseDir.getPath()).append("/router.keys\n");
  buf.append("router.networkDatabase.dbDir=").append(baseDir.getPath()).append("/netDb\n");
  buf.append("router.tunnelPoolFile=").append(baseDir.getPath()).append("/tunnelPool.dat\n");
  buf.append("router.keyBackupDir=").append(baseDir.getPath()).append("/keyBackup\n");
  buf.append("router.clientConfigFile=").append(baseDir.getPath()).append("/clients.config\n");
  buf.append("i2np.tcp.port=").append(basePort).append('\n');
  buf.append("i2np.tcp.hostname=localhost\n");
  buf.append("i2np.tcp.allowLocal=true\n");
  buf.append("i2np.tcp.disable=true\n");
  buf.append("i2np.tcp.enable=false\n");
  buf.append("i2np.udp.host=127.0.0.1\n");
  buf.append("i2np.udp.port=").append(basePort).append('\n');
  buf.append("i2np.udp.internalPort=").append(basePort).append('\n');
  buf.append("i2cp.port=").append(basePort + 1).append('\n');
  buf.append("stat.logFile=").append(baseDir.getPath()).append("/stats.log\n");
  buf.append("stat.logFilters=*\n");
  try {
    FileOutputStream fos=new FileOutputStream(cfgFile);
    fos.write(buf.toString().getBytes());
    fos.close();
    File envFile=new File(baseDir,"routerEnv.txt");
    fos=new FileOutputStream(envFile);
    fos.write(("loggerFilenameOverride=" + baseDir + "/logs/log-router-#.txt\n").getBytes());
    fos.write(("router.configLocation=" + baseDir + "/router.config\n").getBytes());
    fos.write(("router.pingFile=" + baseDir + "/router.ping\n").getBytes());
    fos.close();
    File f=new File(baseDir,"logs");
    f.mkdirs();
    if (isFirst) {
      fos=new FileOutputStream(baseDir.getPath() + "/clients.config");
      fos.write(("clientApp.0.args=" + (basePort - 1) + " 127.0.0.1 ./webapps\n").getBytes());
      fos.write(("clientApp.0.main=net.i2p.router.web.RouterConsoleRunner\n").getBytes());
      fos.write(("clientApp.0.name=webconsole\n").getBytes());
      fos.write(("clientApp.0.onBoot=true\n").getBytes());
      fos.write(("clientApp.1.args=\n").getBytes());
      fos.write(("clientApp.1.main=net.i2p.router.Counter\n").getBytes());
      fos.write(("clientApp.1.name=counter\n").getBytes());
      fos.write(("clientApp.1.onBoot=true\n").getBytes());
      fos.write(("clientApp.2.args=i2ptunnel.config\n").getBytes());
      fos.write(("clientApp.2.main=net.i2p.i2ptunnel.TunnelControllerGroup\n").getBytes());
      fos.write(("clientApp.2.name=tunnels\n").getBytes());
      fos.write(("clientApp.2.delay=60\n").getBytes());
      fos.close();
    }
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
}
