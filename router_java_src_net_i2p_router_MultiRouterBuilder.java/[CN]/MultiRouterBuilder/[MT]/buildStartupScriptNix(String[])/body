{
  StringBuffer buf=new StringBuffer(4096);
  buf.append("#!/bin/sh\n");
  buf.append("export CP=.; for LIB in lib/* ; do export CP=$CP:$LIB ; done\n");
  buf.append("nohup java -cp $CP ");
  buf.append(" -Xmx1024m");
  buf.append(" -Djava.library.path=.");
  buf.append(" -DloggerFilenameOverride=logs/log-sim-#.txt");
  buf.append(" -Dorg.mortbay.http.Version.paranoid=true");
  buf.append(" -Dorg.mortbay.util.FileResource.checkAliases=false");
  buf.append(" -verbose:gc");
  buf.append(" net.i2p.router.MultiRouter baseEnv.txt ");
  for (int i=0; i < args.length; i+=2)   buf.append(args[i]).append("/routerEnv.txt ");
  buf.append(" > sim.out 2>&1 &\n");
  buf.append("echo $! > sim.pid\n");
  buf.append("echo \"After all of the routers have started up, you should cross seed them\"\n");
  buf.append("echo \"Simply copy */netDb/routerInfo-* to all of the various */netDb/ directories\"\n");
  try {
    FileOutputStream fos=new FileOutputStream("runNetSim.sh");
    fos.write(buf.toString().getBytes());
    fos.close();
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
}
