{
  _started=_context.clock().now();
  _log.error("Stopping the router for a restart...");
  _log.logAlways(Log.WARN,"Stopping the client manager");
  try {
    _context.clientManager().shutdown("Router restart");
  }
 catch (  Throwable t) {
    _log.log(Log.CRIT,"Error stopping the client manager",t);
  }
  _log.logAlways(Log.WARN,"Stopping the comm system");
  try {
    _context.messageRegistry().restart();
  }
 catch (  Throwable t) {
    _log.log(Log.CRIT,"Error restarting the message registry",t);
  }
  try {
    _context.commSystem().restart();
  }
 catch (  Throwable t) {
    _log.log(Log.CRIT,"Error restarting the comm system",t);
  }
  _log.logAlways(Log.WARN,"Stopping the tunnel manager");
  try {
    _context.tunnelManager().restart();
  }
 catch (  Throwable t) {
    _log.log(Log.CRIT,"Error restarting the tunnel manager",t);
  }
  _log.logAlways(Log.WARN,"Router teardown complete, restarting the router...");
  try {
    Thread.sleep(10 * 1000);
  }
 catch (  InterruptedException ie) {
  }
  _log.logAlways(Log.WARN,"Restarting the comm system");
  _log.logAlways(Log.WARN,"Restarting the tunnel manager");
  _log.logAlways(Log.WARN,"Restarting the client manager");
  try {
    _context.clientMessagePool().restart();
  }
 catch (  Throwable t) {
    _log.log(Log.CRIT,"Error restarting the CMP",t);
  }
  try {
    _context.clientManager().startup();
  }
 catch (  Throwable t) {
    _log.log(Log.CRIT,"Error starting the client manager",t);
  }
  _isAlive=true;
  rebuildRouterInfo();
  _log.logAlways(Log.WARN,"Restart complete");
  ((RouterClock)_context.clock()).addShiftListener(Router.this);
}
