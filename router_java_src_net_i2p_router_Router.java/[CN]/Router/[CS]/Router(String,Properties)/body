{
  if (!beginMarkingLiveliness(envProps)) {
    System.err.println("ERROR: There appears to be another router already running!");
    System.err.println("       Please make sure to shut down old instances before starting up");
    System.err.println("       a new one.  If you are positive that no other instance is running,");
    System.err.println("       please delete the file " + getPingFile(envProps));
    System.exit(-1);
  }
  _config=new Properties();
  _context=new RouterContext(this,envProps);
  if (configFilename == null)   _configFilename=_context.getProperty(PROP_CONFIG_FILE,"router.config");
 else   _configFilename=configFilename;
  _routerInfo=null;
  _higherVersionSeen=false;
  _log=_context.logManager().getLog(Router.class);
  _log.info("New router created with config file " + _configFilename);
  _sessionKeyPersistenceHelper=new SessionKeyPersistenceHelper(_context);
  _killVMOnEnd=true;
  _oomListener=new I2PThread.OOMEventListener(){
    public void outOfMemory(    OutOfMemoryError oom){
      _log.log(Log.CRIT,"Thread ran out of memory",oom);
      for (int i=0; i < 5; i++) {
        try {
          _log.log(Log.CRIT,"free mem: " + Runtime.getRuntime().freeMemory() + " total mem: "+ Runtime.getRuntime().totalMemory());
          break;
        }
 catch (        OutOfMemoryError oome) {
        }
      }
      shutdown(EXIT_OOM);
    }
  }
;
  _shutdownHook=new ShutdownHook();
  _gracefulShutdownDetector=new I2PThread(new GracefulShutdown());
  _gracefulShutdownDetector.setDaemon(true);
  _gracefulShutdownDetector.setName("Graceful shutdown hook");
  _gracefulShutdownDetector.start();
  _shutdownTasks=new HashSet(0);
}
