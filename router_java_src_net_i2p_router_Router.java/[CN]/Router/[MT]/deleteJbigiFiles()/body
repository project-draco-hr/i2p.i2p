{
  String osArch=System.getProperty("os.arch");
  boolean isX86=osArch.contains("86") || osArch.equals("amd64");
  String osName=System.getProperty("os.name").toLowerCase(Locale.US);
  boolean isWin=SystemVersion.isWindows();
  boolean isMac=SystemVersion.isMac();
  boolean goodOS=isWin || isMac || osName.contains("linux")|| osName.contains("freebsd");
  File jbigiJar=new File(_context.getBaseDir(),"lib/jbigi.jar");
  if (isX86 && goodOS && jbigiJar.exists()) {
    String libPrefix=(isWin ? "" : "lib");
    String libSuffix=(isWin ? ".dll" : isMac ? ".jnilib" : ".so");
    File jcpuidLib=new File(_context.getBaseDir(),libPrefix + "jcpuid" + libSuffix);
    if (jcpuidLib.canWrite() && jbigiJar.lastModified() > jcpuidLib.lastModified()) {
      String path=jcpuidLib.getAbsolutePath();
      boolean success=FileUtil.copy(path,path + ".bak",true,true);
      if (success) {
        boolean success2=jcpuidLib.delete();
        if (success2) {
          System.out.println("New jbigi.jar detected, moved jcpuid library to " + path + ".bak");
          System.out.println("Check logs for successful installation of new library");
        }
      }
    }
    File jbigiLib=new File(_context.getBaseDir(),libPrefix + "jbigi" + libSuffix);
    if (jbigiLib.canWrite() && jbigiJar.lastModified() > jbigiLib.lastModified()) {
      String path=jbigiLib.getAbsolutePath();
      boolean success=FileUtil.copy(path,path + ".bak",true,true);
      if (success) {
        boolean success2=jbigiLib.delete();
        if (success2) {
          System.out.println("New jbigi.jar detected, moved jbigi library to " + path + ".bak");
          System.out.println("Check logs for successful installation of new library");
        }
      }
    }
  }
}
