{
  if (true)   return;
  Object o=_context.sessionKeyManager();
  if (!(o instanceof PersistentSessionKeyManager)) {
    _log.error("Unable to persist the session key state - manager is " + o.getClass().getName());
    return;
  }
  PersistentSessionKeyManager mgr=(PersistentSessionKeyManager)o;
synchronized (mgr) {
    FileOutputStream fos=null;
    try {
      int expired=mgr.aggressiveExpire();
      if (expired > 0) {
        _log.info("Agressive expired " + expired + " tag sets");
      }
      fos=new FileOutputStream(getKeyFile());
      mgr.saveState(fos);
      fos.flush();
      _log.debug("Session keys written");
    }
 catch (    Throwable t) {
      _log.debug("Error writing session key state",t);
    }
 finally {
      if (fos != null)       try {
        fos.close();
      }
 catch (      IOException ioe) {
      }
    }
  }
}
