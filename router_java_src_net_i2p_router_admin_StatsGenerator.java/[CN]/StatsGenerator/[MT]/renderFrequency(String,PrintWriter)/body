{
  FrequencyStat freq=_context.statManager().getFrequency(name);
  pw.print("<i>");
  pw.print(freq.getDescription());
  pw.println("</i><br />");
  long periods[]=freq.getPeriods();
  Arrays.sort(periods);
  for (int i=0; i < periods.length; i++) {
    renderPeriod(pw,periods[i],"frequency");
    Frequency curFreq=freq.getFrequency(periods[i]);
    pw.print(" <i>avg per period:</i> (");
    pw.print(num(curFreq.getAverageEventsPerPeriod()));
    pw.print(", max ");
    pw.print(num(curFreq.getMaxAverageEventsPerPeriod()));
    if ((curFreq.getMaxAverageEventsPerPeriod() > 0) && (curFreq.getAverageEventsPerPeriod() > 0)) {
      pw.print(", current is ");
      pw.print(pct(curFreq.getAverageEventsPerPeriod() / curFreq.getMaxAverageEventsPerPeriod()));
      pw.print(" of max");
    }
    pw.print(")");
    pw.print(" <i>strict average per period:</i> ");
    pw.print(num(curFreq.getStrictAverageEventsPerPeriod()));
    pw.print(" events (averaged ");
    pw.print(" using the lifetime of ");
    pw.print(num(curFreq.getEventCount()));
    pw.print(" events)");
    pw.println("<br />");
  }
  pw.println("<br />");
}
