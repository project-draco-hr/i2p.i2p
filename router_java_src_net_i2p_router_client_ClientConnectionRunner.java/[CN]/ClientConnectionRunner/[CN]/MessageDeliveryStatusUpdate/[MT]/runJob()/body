{
  if (_dead)   return;
  MessageStatusMessage msg=new MessageStatusMessage();
  msg.setMessageId(_messageId);
  msg.setSessionId(_sessionId);
  msg.setNonce(2);
  msg.setSize(0);
  if (_success)   msg.setStatus(MessageStatusMessage.STATUS_SEND_GUARANTEED_SUCCESS);
 else   msg.setStatus(MessageStatusMessage.STATUS_SEND_GUARANTEED_FAILURE);
  if (!alreadyAccepted(_messageId)) {
    _log.warn("Almost send an update for message " + _messageId + " to "+ MessageStatusMessage.getStatusString(msg.getStatus())+ " for session ["+ _sessionId.getSessionId()+ "] before they knew the messageId!  delaying .5s");
    _lastTried=ClientConnectionRunner.this._context.clock().now();
    requeue(REQUEUE_DELAY);
    return;
  }
  boolean alreadyProcessed=false;
  long beforeLock=MessageDeliveryStatusUpdate.this._context.clock().now();
  long inLock=0;
synchronized (_alreadyProcessed) {
    inLock=MessageDeliveryStatusUpdate.this._context.clock().now();
    if (_alreadyProcessed.contains(_messageId)) {
      _log.warn("Status already updated");
      alreadyProcessed=true;
    }
 else {
      _alreadyProcessed.add(_messageId);
      while (_alreadyProcessed.size() > 10)       _alreadyProcessed.remove(0);
    }
  }
  long afterLock=MessageDeliveryStatusUpdate.this._context.clock().now();
  if (afterLock - beforeLock > 50) {
    _log.warn("MessageDeliveryStatusUpdate.locking took too long: " + (afterLock - beforeLock) + " overall, synchronized took "+ (inLock - beforeLock));
  }
  if (alreadyProcessed)   return;
  if (_lastTried > 0) {
    if (_log.shouldLog(Log.DEBUG))     _log.info("Updating message status for message " + _messageId + " to "+ MessageStatusMessage.getStatusString(msg.getStatus())+ " for session ["+ _sessionId.getSessionId()+ "] (with nonce=2), retrying after ["+ (ClientConnectionRunner.this._context.clock().now() - _lastTried)+ "]",getAddedBy());
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Updating message status for message " + _messageId + " to "+ MessageStatusMessage.getStatusString(msg.getStatus())+ " for session ["+ _sessionId.getSessionId()+ "] (with nonce=2)");
  }
  try {
    doSend(msg);
  }
 catch (  I2CPMessageException ime) {
    _log.warn("Error updating the status for message ID " + _messageId,ime);
  }
}
