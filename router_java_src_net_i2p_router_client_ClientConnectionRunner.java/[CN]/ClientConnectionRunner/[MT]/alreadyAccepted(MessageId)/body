{
  if (_dead)   return false;
  boolean isPending=false;
  int pending=0;
  String buf=null;
  long beforeLock=_context.clock().now();
  long inLock=0;
synchronized (_acceptedPending) {
    inLock=_context.clock().now();
    if (_acceptedPending.contains(id))     isPending=true;
    pending=_acceptedPending.size();
    buf=_acceptedPending.toString();
  }
  long afterLock=_context.clock().now();
  if (afterLock - beforeLock > 50) {
    _log.warn("alreadyAccepted.locking took too long: " + (afterLock - beforeLock) + " overall, synchronized took "+ (inLock - beforeLock));
  }
  if (pending >= 1) {
    _log.warn("Pending acks: " + pending + ": "+ buf);
  }
  return !isPending;
}
