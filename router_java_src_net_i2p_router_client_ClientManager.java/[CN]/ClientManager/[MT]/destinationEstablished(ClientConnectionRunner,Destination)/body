{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("DestinationEstablished called for destination " + dest.calculateHash().toBase64());
synchronized (_pendingRunners) {
    _pendingRunners.remove(runner);
  }
  int rv;
synchronized (_runners) {
    boolean fail=_runnersByHash.containsKey(dest.calculateHash());
    if (fail) {
      rv=SessionStatusMessage.STATUS_INVALID;
    }
 else {
      SessionId id=locked_getNextSessionId();
      if (id != null) {
        Hash h=dest.calculateHash();
        runner.setSessionId(h,id);
        _runners.put(dest,runner);
        _runnersByHash.put(h,runner);
        rv=SessionStatusMessage.STATUS_CREATED;
      }
 else {
        rv=SessionStatusMessage.STATUS_REFUSED;
      }
    }
  }
  if (rv == SessionStatusMessage.STATUS_INVALID) {
    _log.log(Log.CRIT,"Client attempted to register duplicate destination " + dest.calculateHash().toBase64());
  }
 else   if (rv == SessionStatusMessage.STATUS_REFUSED) {
    _log.error("Max sessions exceeded " + dest.calculateHash().toBase64());
  }
  return rv;
}
