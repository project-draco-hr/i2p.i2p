{
  if (destHash == null)   return null;
  Set dests=new HashSet();
  long beforeLock=_context.clock().now();
  long inLock=0;
synchronized (_runners) {
    inLock=_context.clock().now();
    dests.addAll(_runners.keySet());
  }
  long afterLock=_context.clock().now();
  if (afterLock - beforeLock > 50) {
    _log.warn("getRunner(Hash).locking took too long: " + (afterLock - beforeLock) + " overall, synchronized took "+ (inLock - beforeLock));
  }
  for (Iterator iter=dests.iterator(); iter.hasNext(); ) {
    Destination d=(Destination)iter.next();
    if (d.calculateHash().equals(destHash))     return getRunner(d);
  }
  return null;
}
