{
  ClientListenerRunner listener;
  if (SystemVersion.isAndroid()) {
    try {
      Class<? extends ClientListenerRunner> clazz=Class.forName("net.i2p.router.client.DomainClientListenerRunner").asSubclass(ClientListenerRunner.class);
      Constructor<? extends ClientListenerRunner> ctor=clazz.getDeclaredConstructor(RouterContext.class,ClientManager.class);
      listener=ctor.newInstance(_ctx,this);
      Thread t=new I2PThread(listener,"DomainClientListener",true);
      t.start();
      _listeners.add(listener);
    }
 catch (    ClassNotFoundException e) {
      _log.warn("Could not find DomainClientListenerRunner class",e);
    }
catch (    ClassCastException e) {
      _log.error("Error creating DomainClientListenerRunner",e);
    }
catch (    NoSuchMethodException e) {
      _log.error("Error creating DomainClientListenerRunner",e);
    }
catch (    InstantiationException e) {
      _log.error("Error creating DomainClientListenerRunner",e);
    }
catch (    IllegalAccessException e) {
      _log.error("Error creating DomainClientListenerRunner",e);
    }
catch (    InvocationTargetException e) {
      _log.error("Error creating DomainClientListenerRunner",e);
    }
  }
  if (!_ctx.getBooleanProperty(PROP_DISABLE_EXTERNAL)) {
    if (_ctx.getBooleanProperty(PROP_ENABLE_SSL))     listener=new SSLClientListenerRunner(_ctx,this,_port);
 else     listener=new ClientListenerRunner(_ctx,this,_port);
    Thread t=new I2PThread(listener,"ClientListener:" + _port,true);
    t.start();
    _listeners.add(listener);
    _clientTimestamper.schedule(ClientTimestamper.LOOP_TIME);
  }
  _isStarted=true;
}
