{
  SessionConfig in=message.getSessionConfig();
  if (in.verifySignature()) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Signature verified correctly on create session message");
  }
 else {
    if (_log.shouldLog(Log.ERROR))     _log.error("Signature verification *FAILED* on a create session message.  Hijack attempt?");
    _runner.disconnectClient("Invalid signature on CreateSessionMessage");
    return;
  }
  Properties inProps=in.getOptions();
  if (!checkAuth(inProps))   return;
  SessionId sessionId=new SessionId();
  sessionId.setSessionId(getNextSessionId());
  _runner.setSessionId(sessionId);
  sendStatusMessage(SessionStatusMessage.STATUS_CREATED);
  SessionConfig cfg=new SessionConfig(in.getDestination());
  cfg.setSignature(in.getSignature());
  Properties props=new Properties();
  props.putAll(in.getOptions());
  cfg.setOptions(props);
  _runner.sessionEstablished(cfg);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("after sessionEstablished for " + _runner.getDestHash());
  startCreateSessionJob();
}
