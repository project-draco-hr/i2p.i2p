{
  if (_runner.isDead())   return;
  RequestLeaseSetMessage msg=new RequestLeaseSetMessage();
  Date end=new Date(_requestState.getRequested().getEarliestLeaseDate());
  msg.setEndDate(end);
  msg.setSessionId(_runner.getSessionId());
  for (int i=0; i < _requestState.getRequested().getLeaseCount(); i++) {
    msg.addEndpoint(_requestState.getRequested().getLease(i).getGateway(),_requestState.getRequested().getLease(i).getTunnelId());
  }
  try {
    _runner.doSend(msg);
    getContext().jobQueue().addJob(new CheckLeaseRequestStatus(getContext(),_requestState));
    return;
  }
 catch (  I2CPMessageException ime) {
    getContext().statManager().addRateData("client.requestLeaseSetDropped",1,0);
    _log.error("Error sending I2CP message requesting the lease set",ime);
    _requestState.setIsSuccessful(false);
    _runner.setLeaseRequest(null);
    _runner.disconnectClient("I2CP error requesting leaseSet");
    return;
  }
}
