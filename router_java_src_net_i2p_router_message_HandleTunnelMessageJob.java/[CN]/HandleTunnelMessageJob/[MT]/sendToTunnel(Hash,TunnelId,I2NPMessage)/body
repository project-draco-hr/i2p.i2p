{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Sending on to requested tunnel " + id.getTunnelId() + " on router "+ router.toBase64());
  TunnelMessage msg=new TunnelMessage();
  msg.setTunnelId(id);
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream(1024);
    body.writeBytes(baos);
    msg.setData(baos.toByteArray());
    long exp=Clock.getInstance().now() + FORWARD_TIMEOUT;
    JobQueue.getInstance().addJob(new SendMessageDirectJob(msg,router,exp,FORWARD_PRIORITY));
    String bodyType=body.getClass().getName();
    MessageHistory.getInstance().wrap(bodyType,body.getUniqueId(),TunnelMessage.class.getName(),msg.getUniqueId());
  }
 catch (  DataFormatException dfe) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Error writing out the message to forward to the tunnel",dfe);
  }
catch (  IOException ioe) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Error writing out the message to forward to the tunnel",ioe);
  }
}
