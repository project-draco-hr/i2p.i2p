{
  boolean valid=_context.messageValidator().validateMessage(message.getUniqueId(),message.getMessageExpiration().getTime());
  if (!valid) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Duplicate / expired message received to remote router [" + message.getUniqueId() + " expiring on "+ message.getMessageExpiration()+ "]");
    _context.messageHistory().droppedOtherMessage(message);
    _context.messageHistory().messageProcessingError(message.getUniqueId(),message.getClass().getName(),"Duplicate/expired to remote router");
    return;
  }
  if (_log.shouldLog(Log.INFO))   _log.info("Handle " + message.getClass().getName() + " to a remote router "+ instructions.getRouter().toBase64()+ " - fire a SendMessageDirectJob");
  int timeoutMs=(int)(expiration - _context.clock().now());
  SendMessageDirectJob j=new SendMessageDirectJob(_context,message,instructions.getRouter(),timeoutMs,priority);
  _context.jobQueue().addJob(j);
}
