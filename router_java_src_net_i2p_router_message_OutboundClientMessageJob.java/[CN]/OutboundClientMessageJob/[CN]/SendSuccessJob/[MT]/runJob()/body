{
  long sendTime=getContext().clock().now() - _status.getStart();
  boolean alreadySuccessful=_status.success();
  MessageId msgId=_status.getMessage().getMessageId();
  if (_log.shouldLog(Log.INFO))   _log.info(OutboundClientMessageJob.this.getJobId() + ": SUCCESS!  msg " + msgId+ " sent after "+ sendTime+ "ms after "+ _status.getNumLookups()+ " lookups and "+ _status.getNumSent()+ " sends");
  if ((_key != null) && (_tags != null) && (_tags.size() > 0)) {
    LeaseSet ls=_status.getLeaseSet();
    if (ls != null)     getContext().sessionKeyManager().tagsDelivered(ls.getEncryptionKey(),_key,_tags);
  }
  if (alreadySuccessful) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug(OutboundClientMessageJob.this.getJobId() + ": Success is a duplicate for " + _status.getMessage().getMessageId()+ ", dont notify again...");
    return;
  }
  long dataMsgId=_status.getClove().getId();
  getContext().messageHistory().sendPayloadMessage(dataMsgId,true,sendTime);
  getContext().clientManager().messageDeliveryStatusUpdate(_status.getFrom(),msgId,true);
  _lease.setNumSuccess(_lease.getNumSuccess() + 1);
  getContext().statManager().addRateData("client.sendAckTime",sendTime,0);
  getContext().statManager().addRateData("client.sendMessageSize",_status.getMessage().getPayload().getSize(),sendTime);
  getContext().statManager().addRateData("client.sendAttemptAverage",_status.getNumSent(),sendTime);
}
