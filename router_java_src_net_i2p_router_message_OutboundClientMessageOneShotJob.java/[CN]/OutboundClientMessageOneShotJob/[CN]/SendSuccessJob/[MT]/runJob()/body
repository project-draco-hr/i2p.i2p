{
  Result old;
synchronized (OutboundClientMessageOneShotJob.this) {
    old=_finished;
    if (old == Result.SUCCESS) {
      if (_log.shouldLog(Log.WARN))       _log.warn(OutboundClientMessageOneShotJob.this.getJobId() + ": SUCCESS-AFTER-SUCCESS");
      return;
    }
    _finished=Result.SUCCESS;
    if (_key != null && _tags != null && _leaseSet != null) {
      SessionKeyManager skm=getContext().clientManager().getClientSessionKeyManager(_from.calculateHash());
      if (skm != null)       skm.tagsAcked(_leaseSet.getEncryptionKey(),_key,_tags);
    }
  }
  long sendTime=getContext().clock().now() - _start;
  if (old == Result.FAIL) {
    if (_log.shouldLog(Log.WARN))     _log.warn(OutboundClientMessageOneShotJob.this.getJobId() + ": SUCCESS-AFTER-TIMEOUT " + _clientMessageId+ " acked by DSM after "+ sendTime+ "ms");
  }
 else   if (_log.shouldLog(Log.INFO)) {
    _log.info(OutboundClientMessageOneShotJob.this.getJobId() + ": SUCCESS " + _clientMessageId+ " acked by DSM after "+ sendTime+ "ms");
  }
  getContext().messageHistory().sendPayloadMessage(99999,true,sendTime);
  getContext().clientManager().messageDeliveryStatusUpdate(_from,_clientMessageId,MessageStatusMessage.STATUS_SEND_GUARANTEED_SUCCESS);
  int size=_clientMessageSize;
  getContext().statManager().addRateData("client.sendAckTime",sendTime);
  getContext().statManager().addRateData("client.sendMessageSize",_clientMessageSize,sendTime);
  if (_outTunnel != null) {
    if (_outTunnel.getLength() > 0)     size=((size + 1023) / 1024) * 1024;
    for (int i=0; i < _outTunnel.getLength(); i++) {
      getContext().profileManager().tunnelTestSucceeded(_outTunnel.getPeer(i),sendTime);
      getContext().profileManager().tunnelDataPushed(_outTunnel.getPeer(i),sendTime,size);
    }
    _outTunnel.incrementVerifiedBytesTransferred(size);
  }
  if (_inTunnel != null)   for (int i=0; i < _inTunnel.getLength(); i++)   getContext().profileManager().tunnelTestSucceeded(_inTunnel.getPeer(i),sendTime);
}
