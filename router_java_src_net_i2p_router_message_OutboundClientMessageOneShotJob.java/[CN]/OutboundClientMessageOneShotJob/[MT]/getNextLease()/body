{
  _leaseSet=getContext().netDb().lookupLeaseSetLocally(_to.calculateHash());
  if (_leaseSet == null) {
    if (_log.shouldLog(Log.WARN))     _log.warn(getJobId() + ": Lookup locally didn't find the leaseSet for " + _toString);
    return false;
  }
  long now=getContext().clock().now();
  List leases=new ArrayList(_leaseSet.getLeaseCount());
  for (int i=0; i < _leaseSet.getLeaseCount(); i++) {
    Lease lease=_leaseSet.getLease(i);
    if (lease.isExpired(Router.CLOCK_FUDGE_FACTOR)) {
      if (_log.shouldLog(Log.WARN))       _log.warn(getJobId() + ": getNextLease() - expired lease! - " + lease+ " for "+ _toString);
      continue;
    }
 else {
      leases.add(lease);
    }
  }
  if (leases.size() <= 0) {
    if (_log.shouldLog(Log.INFO))     _log.info(getJobId() + ": No leases found from: " + _leaseSet);
    return false;
  }
  Collections.shuffle(leases);
  for (int i=0; i < _leaseSet.getLeaseCount(); i++) {
    Lease l=_leaseSet.getLease(i);
    if (!getContext().commSystem().wasUnreachable(l.getGateway())) {
      _lease=l;
      break;
    }
    if (_log.shouldLog(Log.WARN))     _log.warn(getJobId() + ": Skipping unreachable (by us) gateway " + l.getGateway());
  }
  if (_lease == null) {
    _lease=(Lease)leases.get(0);
    if (_log.shouldLog(Log.WARN))     _log.warn(getJobId() + ": All leases are unreachable (by us) for " + _toString);
  }
  return true;
}
