{
  _leaseSet=getContext().netDb().lookupLeaseSetLocally(_to.calculateHash());
  if (_leaseSet == null) {
    if (_log.shouldLog(Log.WARN))     _log.warn(getJobId() + ": Lookup locally didn't find the leaseSet for " + _toString);
    return false;
  }
  long now=getContext().clock().now();
synchronized (_leaseCache) {
    if (now - _cleanTime > 5 * 60 * 1000) {
      cleanLeaseCache(_leaseCache);
      _cleanTime=now;
    }
    _lease=(Lease)_leaseCache.get(_to);
    if (_lease != null) {
      if (!_lease.isExpired()) {
        if (_log.shouldLog(Log.WARN))         _log.warn("Found in cache - lease for dest " + _to.calculateHash().toBase64());
        return true;
      }
 else {
        if (_log.shouldLog(Log.WARN))         _log.warn("Expired from cache - lease for dest " + _to.calculateHash().toBase64());
        _leaseCache.remove(_to);
      }
    }
  }
  List leases=new ArrayList(_leaseSet.getLeaseCount());
  for (int i=0; i < _leaseSet.getLeaseCount(); i++) {
    Lease lease=_leaseSet.getLease(i);
    if (lease.isExpired(Router.CLOCK_FUDGE_FACTOR)) {
      if (_log.shouldLog(Log.WARN))       _log.warn(getJobId() + ": getNextLease() - expired lease! - " + lease+ " for "+ _toString);
      continue;
    }
 else {
      leases.add(lease);
    }
  }
  if (leases.size() <= 0) {
    if (_log.shouldLog(Log.INFO))     _log.info(getJobId() + ": No leases found from: " + _leaseSet);
    return false;
  }
  Collections.shuffle(leases);
  if (false) {
    TreeMap orderedLeases=new TreeMap();
    for (Iterator iter=leases.iterator(); iter.hasNext(); ) {
      Lease lease=(Lease)iter.next();
      long id=lease.getNumFailure();
      while (orderedLeases.containsKey(new Long(id)))       id++;
      orderedLeases.put(new Long(id),lease);
      if (_log.shouldLog(Log.DEBUG))       _log.debug(getJobId() + ": ranking lease we havent sent it down as " + id);
    }
    _lease=(Lease)orderedLeases.get(orderedLeases.firstKey());
  }
 else {
    _lease=(Lease)leases.get(0);
  }
synchronized (_leaseCache) {
    _leaseCache.put(_to,_lease);
  }
  if (_log.shouldLog(Log.WARN))   _log.warn("Added to cache - lease for dest " + _to.calculateHash().toBase64());
  return true;
}
