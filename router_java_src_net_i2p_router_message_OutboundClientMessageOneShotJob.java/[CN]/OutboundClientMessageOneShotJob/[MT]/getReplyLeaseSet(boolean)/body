{
  LeaseSet newLS=getContext().netDb().lookupLeaseSetLocally(_from.calculateHash());
  if (newLS == null)   return null;
  if (!force) {
    Properties opts=_clientMessage.getSenderConfig().getOptions();
    String wantBundle=opts.getProperty(BUNDLE_REPLY_LEASESET,"false");
    if ("true".equals(wantBundle)) {
      int probability=BUNDLE_PROBABILITY_DEFAULT;
      String str=opts.getProperty(BUNDLE_PROBABILITY);
      try {
        if (str != null)         probability=Integer.parseInt(str);
      }
 catch (      NumberFormatException nfe) {
        if (_log.shouldLog(Log.WARN))         _log.warn(getJobId() + ": Bundle leaseSet probability overridden incorrectly [" + str+ "]",nfe);
      }
      if (probability >= 100)       return newLS;
      if (_log.shouldLog(Log.INFO))       _log.info(getJobId() + ": Bundle leaseSet probability is " + probability);
      if (probability >= getContext().random().nextInt(100))       force=true;
    }
  }
synchronized (_leaseSetCache) {
    if (!force) {
      LeaseSet ls=_leaseSetCache.get(hashPair());
      if (ls != null) {
        if (ls.equals(newLS)) {
          if (_log.shouldLog(Log.INFO))           _log.info(getJobId() + ": Found in cache - NOT including reply leaseset for " + _toString);
          return null;
        }
 else {
          if (_log.shouldLog(Log.INFO))           _log.info(getJobId() + ": Expired from cache - reply leaseset for " + _toString);
        }
      }
    }
    _leaseSetCache.put(hashPair(),newLS);
  }
  if (_log.shouldLog(Log.INFO))   _log.info(getJobId() + ": Added to cache - reply leaseset for " + _toString);
  return newLS;
}
