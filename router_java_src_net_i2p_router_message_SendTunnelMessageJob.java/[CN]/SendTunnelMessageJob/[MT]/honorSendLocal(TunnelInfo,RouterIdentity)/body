{
  if ((info.getDestination() == null) || !(_message instanceof DataMessage)) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Destination is null or its not a DataMessage - pass it off to the InNetMessagePool");
    InNetMessage msg=new InNetMessage(getContext());
    msg.setFromRouter(ident);
    msg.setFromRouterHash(ident.getHash());
    msg.setMessage(_message);
    msg.setReplyBlock(null);
    getContext().inNetMessagePool().add(msg);
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Destination is not null and it is a DataMessage - pop it into the ClientMessagePool");
    DataMessage msg=(DataMessage)_message;
    boolean valid=getContext().messageValidator().validateMessage(msg.getUniqueId(),msg.getMessageExpiration().getTime());
    if (!valid) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Duplicate data message received [" + msg.getUniqueId() + " expiring on "+ msg.getMessageExpiration()+ "]");
      getContext().messageHistory().droppedOtherMessage(msg);
      getContext().messageHistory().messageProcessingError(msg.getUniqueId(),msg.getClass().getName(),"Duplicate");
      return;
    }
    Payload payload=new Payload();
    payload.setEncryptedData(msg.getData());
    MessageReceptionInfo receptionInfo=new MessageReceptionInfo();
    receptionInfo.setFromPeer(ident.getHash());
    receptionInfo.setFromTunnel(_tunnelId);
    ClientMessage clientMessage=new ClientMessage();
    clientMessage.setDestination(info.getDestination());
    clientMessage.setPayload(payload);
    clientMessage.setReceptionInfo(receptionInfo);
    getContext().clientMessagePool().add(clientMessage);
    getContext().messageHistory().receivePayloadMessage(msg.getUniqueId());
  }
}
