{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Handling database store message");
  String invalidMessage=null;
  boolean wasNew=false;
  if (_message.getValueType() == DatabaseStoreMessage.KEY_TYPE_LEASESET) {
    try {
      Object match=getContext().netDb().store(_message.getKey(),_message.getLeaseSet());
      wasNew=(null == match);
    }
 catch (    IllegalArgumentException iae) {
      invalidMessage=iae.getMessage();
    }
  }
 else   if (_message.getValueType() == DatabaseStoreMessage.KEY_TYPE_ROUTERINFO) {
    if (_log.shouldLog(Log.INFO))     _log.info("Handling dbStore of router " + _message.getKey() + " with publishDate of "+ new Date(_message.getRouterInfo().getPublished()));
    try {
      Object match=getContext().netDb().store(_message.getKey(),_message.getRouterInfo());
      wasNew=(null == match);
      getContext().profileManager().heardAbout(_message.getKey());
    }
 catch (    IllegalArgumentException iae) {
      invalidMessage=iae.getMessage();
    }
  }
 else {
    if (_log.shouldLog(Log.ERROR))     _log.error("Invalid DatabaseStoreMessage data type - " + _message.getValueType() + ": "+ _message);
  }
  if (_message.getReplyToken() > 0)   sendAck();
  if (_from != null)   _fromHash=_from.getHash();
  if (_fromHash != null) {
    if (invalidMessage == null) {
      getContext().profileManager().dbStoreReceived(_fromHash,wasNew);
      getContext().statManager().addRateData("netDb.storeHandled",1,0);
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Peer " + _fromHash.toBase64() + " sent bad data: "+ invalidMessage);
    }
  }
}
