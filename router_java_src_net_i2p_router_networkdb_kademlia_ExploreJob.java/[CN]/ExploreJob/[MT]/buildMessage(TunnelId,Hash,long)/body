{
  DatabaseLookupMessage msg=new DatabaseLookupMessage(getContext(),true);
  msg.setSearchKey(getState().getTarget());
  msg.setFrom(replyGateway);
  msg.setDontIncludePeers(getState().getClosestAttempted(MAX_CLOSEST));
  msg.setMessageExpiration(expiration);
  msg.setReplyTunnel(replyTunnelId);
  int available=MAX_CLOSEST - msg.getDontIncludePeers().size();
  KBucketSet ks=_facade.getKBuckets();
  Hash rkey=getContext().routingKeyGenerator().getRoutingKey(getState().getTarget());
  if (available > 0 && ks != null) {
    List peers=_peerSelector.selectFloodfillParticipants(rkey,available,ks);
    int len=peers.size();
    if (len > 0)     msg.getDontIncludePeers().addAll(peers);
  }
  available=MAX_CLOSEST - msg.getDontIncludePeers().size();
  if (available > 0) {
    Set dontInclude=new HashSet(msg.getDontIncludePeers());
    List peers=_peerSelector.selectNearestExplicit(rkey,available,dontInclude,ks);
    msg.getDontIncludePeers().addAll(peers);
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Peers we don't want to hear about: " + msg.getDontIncludePeers());
  return msg;
}
