{
  Set<Hash> alreadyQueued=_facade.getExploreKeys();
  if (alreadyQueued.size() > KBucketSet.NUM_BUCKETS)   return null;
  Set<Hash> toExplore=new HashSet<Hash>(KBucketSet.NUM_BUCKETS - alreadyQueued.size());
  for (int i=0; i < KBucketSet.NUM_BUCKETS; i++) {
    KBucket bucket=_facade.getKBuckets().getBucket(i);
    if (bucket.getKeyCount() < KBucketSet.BUCKET_SIZE) {
      boolean already=false;
      for (      Hash key : alreadyQueued) {
        if (bucket.shouldContain(key)) {
          already=true;
          _log.debug("Bucket " + i + " is already queued for exploration \t"+ key);
          break;
        }
      }
      if (!already) {
        Hash key=bucket.generateRandomKey();
        _log.debug("Bucket " + i + " is NOT queued for exploration, and it only has "+ bucket.getKeyCount()+ " keys, so explore with \t"+ key);
        toExplore.add(key);
      }
    }
 else {
      _log.debug("Bucket " + i + " already has enough keys ("+ bucket.getKeyCount()+ "), no need to explore further");
    }
  }
  return toExplore;
}
