{
  long now=getContext().clock().now();
  if (_expiration < now) {
    failed();
    return;
  }
  if (_expiration - 500 < now) {
    return;
  }
  while (true) {
    Hash peer;
synchronized (this) {
      if (_dead)       return;
      int pend=_unheardFrom.size();
      if (pend >= MAX_CONCURRENT)       return;
      int done=_failedPeers.size();
      if (done >= _totalSearchLimit) {
        failed();
        return;
      }
      if (done + pend >= _totalSearchLimit)       return;
      if (_alwaysQueryHash != null && !_unheardFrom.contains(_alwaysQueryHash) && !_failedPeers.contains(_alwaysQueryHash)) {
        peer=_alwaysQueryHash;
      }
 else {
        if (_toTry.isEmpty())         return;
        Iterator<Hash> iter=_toTry.iterator();
        peer=iter.next();
        iter.remove();
      }
      _unheardFrom.add(peer);
    }
    sendQuery(peer);
  }
}
