{
  BigInteger variance=new BigInteger((_end - _begin) - 1,_context.random());
  variance=variance.setBit(_begin);
  byte data[]=variance.toByteArray();
  byte hash[]=new byte[Hash.HASH_LENGTH];
  if (data.length <= Hash.HASH_LENGTH) {
    System.arraycopy(data,0,hash,hash.length - data.length,data.length);
  }
 else {
    System.arraycopy(data,data.length - hash.length,hash,0,hash.length);
  }
  Hash key=new Hash(hash);
  data=distanceFromLocal(key);
  hash=new byte[Hash.HASH_LENGTH];
  if (data.length <= Hash.HASH_LENGTH) {
    System.arraycopy(data,0,hash,hash.length - data.length,data.length);
  }
 else {
    System.arraycopy(data,data.length - hash.length,hash,0,hash.length);
  }
  key=new Hash(hash);
  return key;
}
