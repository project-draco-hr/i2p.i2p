{
  StringBuffer buf=new StringBuffer(2048);
  int low=1;
  int high=3;
  KBucketImpl bucket=new KBucketImpl(Hash.FAKE_HASH);
  bucket.setRange(low,high);
  Hash lowerBoundKey=bucket.getRangeBeginKey();
  Hash upperBoundKey=bucket.getRangeEndKey();
  for (int i=0; i < 100; i++) {
    Hash rnd=bucket.generateRandomKey();
    boolean ok=bucket.shouldContain(rnd);
    if (!ok) {
      byte diff[]=DataHelper.xor(rnd.getData(),bucket.getLocal().getData());
      BigInteger dv=new BigInteger(1,diff);
      _log.error("WTF! bucket doesn't want: \n" + toString(rnd.getData()) + "\nDelta: \n"+ toString(diff)+ "\nDelta val: \n"+ dv.toString(2)+ "\nBucket: \n"+ bucket,new Exception("WTF"));
      try {
        Thread.sleep(1000);
      }
 catch (      Exception e) {
      }
      System.exit(0);
    }
 else {
    }
  }
  _log.info("Passed 100 random key generations against the null hash");
}
