{
  int low=1;
  int high=3;
  Log log=I2PAppContext.getGlobalContext().logManager().getLog(KBucketImpl.class);
  LocalHash local=new LocalHash(Hash.FAKE_HASH);
  local.prepareCache();
  KBucketImpl bucket=new KBucketImpl(I2PAppContext.getGlobalContext(),local);
  bucket.setRange(low,high);
  for (int i=0; i < 100000; i++) {
    Hash rnd=bucket.generateRandomKey();
    boolean ok=bucket.shouldContain(rnd);
    if (!ok) {
      log.error("wtf, bucket doesnt want a key that it generated.  i == " + i);
      log.error("\nLow: " + DataHelper.toHexString(bucket.getRangeBeginKey().getData()) + "\nVal: "+ DataHelper.toHexString(rnd.getData())+ "\nHigh:"+ DataHelper.toHexString(bucket.getRangeEndKey().getData()));
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
      }
      System.exit(0);
    }
 else {
    }
  }
  log.info("Passed 100,000 random key generations against the null hash");
}
