{
  StringBuilder buf=new StringBuilder(4 * 1024);
  buf.append("<h2>Network Database Contents</h2>\n");
  buf.append("<a href=\"netdb.jsp\">View RouterInfo</a>");
  buf.append("<h3>LeaseSets</h3>\n");
  Set leases=new TreeSet(new LeaseSetComparator());
  leases.addAll(getLeases());
  long now=_context.clock().now();
  for (Iterator iter=leases.iterator(); iter.hasNext(); ) {
    LeaseSet ls=(LeaseSet)iter.next();
    Destination dest=ls.getDestination();
    Hash key=dest.calculateHash();
    buf.append("<b>LeaseSet: ").append(key.toBase64());
    if (_context.clientManager().isLocal(dest)) {
      buf.append(" (<a href=\"tunnels.jsp#" + key.toBase64().substring(0,4) + "\">Local</a> ");
      if (!_context.clientManager().shouldPublishLeaseSet(key))       buf.append("Unpublished ");
      buf.append("Destination ");
      TunnelPoolSettings in=_context.tunnelManager().getInboundSettings(key);
      if (in != null && in.getDestinationNickname() != null)       buf.append(in.getDestinationNickname());
 else       buf.append(dest.toBase64().substring(0,6));
    }
 else {
      buf.append(" (Destination ");
      String host=_context.namingService().reverseLookup(dest);
      if (host != null)       buf.append(host);
 else       buf.append(dest.toBase64().substring(0,6));
    }
    buf.append(")</b><br />\n");
    long exp=ls.getEarliestLeaseDate() - now;
    if (exp > 0)     buf.append("Earliest expiration date in: <i>").append(DataHelper.formatDuration(exp)).append("</i><br />\n");
 else     buf.append("Earliest expiration date was: <i>").append(DataHelper.formatDuration(0 - exp)).append(" ago</i><br />\n");
    for (int i=0; i < ls.getLeaseCount(); i++) {
      buf.append("Lease ").append(i).append(": gateway <i>");
      buf.append(ls.getLease(i).getGateway().toBase64().substring(0,6));
      buf.append("</i> tunnelId <i>").append(ls.getLease(i).getTunnelId().getTunnelId()).append("</i><br />\n");
    }
    buf.append("<hr />\n");
    out.write(buf.toString());
    buf.setLength(0);
  }
  out.write(buf.toString());
  out.flush();
}
