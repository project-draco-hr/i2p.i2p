{
  _log.info("Starting up the kademlia network database");
  RouterInfo ri=_context.router().getRouterInfo();
  String dbDir=_context.router().getConfigSetting(PROP_DB_DIR);
  if (dbDir == null) {
    _log.info("No DB dir specified [" + PROP_DB_DIR + "], using ["+ DEFAULT_DB_DIR+ "]");
    dbDir=DEFAULT_DB_DIR;
  }
  _kb=new KBucketSet(_context,ri.getIdentity().getHash());
  _ds=new PersistentDataStore(_context,dbDir,this);
  _explicitSendKeys=new HashSet(64);
  _passiveSendKeys=new HashSet(64);
  _exploreKeys=new HashSet(64);
  _lastSent=new HashMap(1024);
  _dbDir=dbDir;
  _context.inNetMessagePool().registerHandlerJobBuilder(DatabaseLookupMessage.MESSAGE_TYPE,new DatabaseLookupMessageHandler(_context));
  _context.inNetMessagePool().registerHandlerJobBuilder(DatabaseStoreMessage.MESSAGE_TYPE,new DatabaseStoreMessageHandler(_context));
  _context.inNetMessagePool().registerHandlerJobBuilder(DatabaseSearchReplyMessage.MESSAGE_TYPE,new DatabaseSearchReplyMessageHandler(_context));
  _initialized=true;
  _started=System.currentTimeMillis();
  _context.jobQueue().addJob(new DataPublisherJob(_context,this));
  _context.jobQueue().addJob(new ExpireLeasesJob(_context,this));
  _context.jobQueue().addJob(new ExpireRoutersJob(_context,this));
  if (!_quiet) {
    _context.jobQueue().addJob(new DataRepublishingSelectorJob(_context,this));
    _context.jobQueue().addJob(new ExploreKeySelectorJob(_context,this));
    _exploreJob=new StartExplorersJob(_context,this);
    _context.jobQueue().addJob(_exploreJob);
  }
 else {
    _log.warn("Operating in quiet mode - not exploring or pushing data proactively, simply reactively");
    _log.warn("This should NOT be used in production");
  }
  _context.jobQueue().addJob(new PublishLocalRouterInfoJob(_context));
  publish(ri);
}
