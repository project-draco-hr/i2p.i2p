{
  if (!key.equals(routerInfo.getIdentity().getHash())) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Invalid store attempt! key does not match routerInfo.identity!  key = " + key + ", router = "+ routerInfo);
    return "Key does not match routerInfo.identity";
  }
  if (!routerInfo.isValid()) {
    processStoreFailure(key,routerInfo);
    if (_log.shouldLog(Log.WARN))     _log.warn("Invalid routerInfo signature!  forged router structure!  router = " + routerInfo);
    return "Invalid routerInfo signature";
  }
  if (routerInfo.getNetworkId() != Router.NETWORK_ID) {
    _context.banlist().banlistRouter(key,"Not in our network");
    if (_log.shouldLog(Log.WARN))     _log.warn("Bad network: " + routerInfo);
    return "Not in our network";
  }
  return validate(routerInfo);
}
