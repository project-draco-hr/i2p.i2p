{
  if (true)   return selectNearestExplicitThin(key,maxNumRouters,peersToIgnore,kbuckets);
  if (peersToIgnore == null)   peersToIgnore=new HashSet(1);
  peersToIgnore.add(_context.router().getRouterInfo().getIdentity().getHash());
  Set allHashes=kbuckets.getAll(peersToIgnore);
  removeFailingPeers(allHashes);
  Map diffMap=new HashMap(allHashes.size());
  for (Iterator iter=allHashes.iterator(); iter.hasNext(); ) {
    Hash cur=(Hash)iter.next();
    BigInteger diff=getDistance(key,cur);
    diffMap.put(diff,cur);
  }
  Map sortedMap=new TreeMap(diffMap);
  List peerHashes=new ArrayList(maxNumRouters);
  for (Iterator iter=sortedMap.values().iterator(); iter.hasNext(); ) {
    if (peerHashes.size() >= maxNumRouters)     break;
    peerHashes.add(iter.next());
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Searching for " + maxNumRouters + " peers close to "+ key+ ": "+ peerHashes+ " (not including "+ peersToIgnore+ ") [allHashes.size = "+ allHashes.size()+ "]");
  return peerHashes;
}
