{
  if (!shouldRead())   return;
  try {
    FileInputStream fis=null;
    boolean corrupt=false;
    try {
      fis=new FileInputStream(_leaseFile);
      LeaseSet ls=new LeaseSet();
      ls.readBytes(fis);
      _facade.store(ls.getDestination().calculateHash(),ls);
      Object accepted=_facade.lookupLeaseSetLocally(ls.getDestination().calculateHash());
      if (accepted == null) {
        _log.info("Refused locally loaded leaseSet - deleting");
        corrupt=true;
      }
    }
 catch (    DataFormatException dfe) {
      _log.warn("Error reading the leaseSet from " + _leaseFile.getAbsolutePath(),dfe);
      corrupt=true;
    }
catch (    FileNotFoundException fnfe) {
      _log.debug("Deleted prior to read.. a race during expiration / load");
      corrupt=false;
    }
 finally {
      if (fis != null)       try {
        fis.close();
      }
 catch (      IOException ioe) {
      }
    }
    if (corrupt)     _leaseFile.delete();
  }
 catch (  IOException ioe) {
    _log.warn("Error reading the leaseSet from " + _leaseFile.getAbsolutePath(),ioe);
  }
}
