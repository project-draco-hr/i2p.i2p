{
  _quit=false;
  Hash key=null;
  DataStructure data=null;
  int count=0;
  int lastCount=0;
  long startTime=0;
  while (true) {
    Iterator<Hash> iter=_keys.keySet().iterator();
    try {
      key=iter.next();
      iter.remove();
      count++;
    }
 catch (    NoSuchElementException nsee) {
      lastCount=count;
      count=0;
    }
catch (    IllegalStateException ise) {
      lastCount=count;
      count=0;
    }
    if (key != null) {
      data=_keys.get(key);
      if (data != null) {
        write(key,data);
        data=null;
      }
      key=null;
    }
    if (count >= WRITE_LIMIT)     count=0;
    if (count == 0) {
      if (lastCount > 0) {
        long time=_context.clock().now() - startTime;
        if (_log.shouldLog(Log.WARN))         _log.warn("Wrote " + lastCount + " entries to disk in "+ time);
        _context.statManager().addRateData("netDb.writeOut",lastCount,0);
        _context.statManager().addRateData("netDb.writeTime",time,0);
      }
      if (_quit)       break;
synchronized (_waitLock) {
        try {
          _waitLock.wait(WRITE_DELAY);
        }
 catch (        InterruptedException ie) {
        }
      }
      startTime=_context.clock().now();
    }
  }
}
