{
  TunnelInfo inTunnel=getInboundTunnelId();
  if (inTunnel == null) {
    _log.error("No tunnels to get search replies through!  wtf!");
    getContext().jobQueue().addJob(new FailedJob(getContext(),router));
    return;
  }
  TunnelId inTunnelId=inTunnel.getReceiveTunnelId(0);
  int timeout=_facade.getPeerTimeout(router.getIdentity().getHash());
  long expiration=getContext().clock().now() + timeout;
  DatabaseLookupMessage msg=buildMessage(inTunnelId,inTunnel.getPeer(0),expiration);
  TunnelInfo outTunnel=getOutboundTunnelId();
  if (outTunnel == null) {
    _log.error("No tunnels to send search out through!  wtf!");
    getContext().jobQueue().addJob(new FailedJob(getContext(),router));
    return;
  }
  TunnelId outTunnelId=outTunnel.getSendTunnelId(0);
  if (_log.shouldLog(Log.DEBUG))   _log.debug(getJobId() + ": Sending leaseSet search to " + router.getIdentity().getHash().toBase64()+ " for "+ msg.getSearchKey().toBase64()+ " w/ replies through ["+ msg.getFrom().toBase64()+ "] via tunnel ["+ msg.getReplyTunnel()+ "]");
  SearchMessageSelector sel=new SearchMessageSelector(getContext(),router,_expiration,_state);
  SearchUpdateReplyFoundJob reply=new SearchUpdateReplyFoundJob(getContext(),router,_state,_facade,this,outTunnel,inTunnel);
  getContext().messageRegistry().registerPending(sel,reply,new FailedJob(getContext(),router),timeout);
  getContext().tunnelDispatcher().dispatchOutbound(msg,outTunnelId,router.getIdentity().getHash());
}
