{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("[" + _id + "] isMatch("+ message.getClass().getName()+ ") [want dbStore or dbSearchReply from "+ _peer+ " for "+ _state.getTarget()+ "]");
  if (message instanceof DatabaseStoreMessage) {
    DatabaseStoreMessage msg=(DatabaseStoreMessage)message;
    if (msg.getKey().equals(_state.getTarget())) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("[" + _id + "] Was a DBStore of the key we're looking for.  "+ "May not have been from who we're checking against though, "+ "but DBStore doesn't include that info");
      _found=true;
      return true;
    }
 else {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("[" + _id + "] DBStore of a key we're not looking for");
      return false;
    }
  }
 else   if (message instanceof DatabaseSearchReplyMessage) {
    DatabaseSearchReplyMessage msg=(DatabaseSearchReplyMessage)message;
    if (_peer.equals(msg.getFromHash())) {
      if (msg.getSearchKey().equals(_state.getTarget())) {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("[" + _id + "] Was a DBSearchReply from who we're "+ "checking with for a key we're looking for");
        _found=true;
        return true;
      }
 else {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("[" + _id + "] Was a DBSearchReply from who we're checking "+ "with but NOT for the key we're looking for");
        return false;
      }
    }
 else {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("[" + _id + "] DBSearchReply from someone we are not checking with ["+ msg.getFromHash()+ ", not "+ _state.getTarget()+ "]");
      return false;
    }
  }
 else {
    return false;
  }
}
