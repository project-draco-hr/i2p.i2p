{
  if (_curIndex >= _msg.getNumReplies()) {
    if (_log.shouldLog(Log.DEBUG) && _msg.getNumReplies() == 0)     _log.debug(getJobId() + ": dbSearchReply received with no routers referenced");
    if (_repliesPendingVerification > 0) {
      requeue(_searchJob.timeoutMs());
    }
 else {
      getContext().profileManager().dbLookupReply(_peer,_newPeers,_seenPeers,_invalidPeers,_duplicatePeers,_duration);
      if (_newPeers > 0)       _searchJob.newPeersFound(_newPeers);
    }
  }
 else {
    Hash peer=_msg.getReply(_curIndex);
    boolean shouldAdd=false;
    RouterInfo info=getContext().netDb().lookupRouterInfoLocally(peer);
    if (info == null) {
      boolean sendsBadInfo=getContext().profileOrganizer().peerSendsBadReplies(_peer);
      if (!sendsBadInfo) {
        if (getContext().banlist().isBanlisted(peer)) {
        }
 else {
          shouldAdd=true;
        }
      }
 else {
        if (_log.shouldLog(Log.INFO))         _log.info("Peer " + _peer.toBase64() + " sends us bad replies, so not verifying "+ peer.toBase64());
        getContext().statManager().addRateData("netDb.searchReplyValidationSkipped",1);
      }
    }
    if (_searchJob.wasAttempted(peer)) {
      _duplicatePeers++;
    }
    if (_log.shouldLog(Log.DEBUG))     _log.debug(getJobId() + ": dbSearchReply received on search referencing router " + peer+ " already known? "+ (info != null));
    if (shouldAdd) {
      if (_searchJob.add(peer))       _newPeers++;
 else       _seenPeers++;
    }
    _curIndex++;
    requeue(0);
  }
}
