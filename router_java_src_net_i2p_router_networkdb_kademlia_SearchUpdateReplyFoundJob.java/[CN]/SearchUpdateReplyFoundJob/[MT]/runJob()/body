{
  if (_isFloodfillPeer)   _job.decrementOutstandingFloodfillSearches();
  I2NPMessage message=_message;
  if (_log.shouldLog(Log.INFO))   _log.info(getJobId() + ": Reply from " + _peer.toBase64()+ " with message "+ message.getClass().getSimpleName());
  long howLong=System.currentTimeMillis() - _sentOn;
  int msgSize=1024;
  if (_replyTunnel != null) {
    for (int i=0; i < _replyTunnel.getLength(); i++)     getContext().profileManager().tunnelDataPushed(_replyTunnel.getPeer(i),howLong,msgSize);
    _replyTunnel.incrementVerifiedBytesTransferred(msgSize);
  }
  if (_outTunnel != null) {
    for (int i=0; i < _outTunnel.getLength(); i++)     getContext().profileManager().tunnelDataPushed(_outTunnel.getPeer(i),howLong,msgSize);
    _outTunnel.incrementVerifiedBytesTransferred(msgSize);
  }
  if (message instanceof DatabaseStoreMessage) {
    long timeToReply=_state.dataFound(_peer);
    DatabaseStoreMessage msg=(DatabaseStoreMessage)message;
    DatabaseEntry entry=msg.getEntry();
    if (entry.getType() == DatabaseEntry.KEY_TYPE_LEASESET) {
      try {
        _facade.store(msg.getKey(),(LeaseSet)entry);
        getContext().profileManager().dbLookupSuccessful(_peer,timeToReply);
      }
 catch (      IllegalArgumentException iae) {
        if (_log.shouldLog(Log.ERROR))         _log.warn("Peer " + _peer + " sent us an invalid leaseSet: "+ iae.getMessage());
        getContext().profileManager().dbLookupReply(_peer,0,0,1,0,timeToReply);
      }
    }
 else     if (entry.getType() == DatabaseEntry.KEY_TYPE_ROUTERINFO) {
      if (_log.shouldLog(Log.INFO))       _log.info(getJobId() + ": dbStore received on search containing router " + msg.getKey()+ " with publishDate of "+ new Date(entry.getDate()));
      try {
        _facade.store(msg.getKey(),(RouterInfo)entry);
        getContext().profileManager().dbLookupSuccessful(_peer,timeToReply);
      }
 catch (      IllegalArgumentException iae) {
        if (_log.shouldLog(Log.ERROR))         _log.warn("Peer " + _peer + " sent us an invalid routerInfo: "+ iae.getMessage());
        getContext().profileManager().dbLookupReply(_peer,0,0,1,0,timeToReply);
      }
    }
 else {
      if (_log.shouldLog(Log.ERROR))       _log.error(getJobId() + ": Unknown db store type?!@ " + entry.getType());
    }
  }
 else   if (message instanceof DatabaseSearchReplyMessage) {
    _job.replyFound((DatabaseSearchReplyMessage)message,_peer);
  }
 else {
    if (_log.shouldLog(Log.ERROR))     _log.error(getJobId() + ": WTF, reply job matched a strange message: " + message);
    return;
  }
  _job.searchNext();
}
