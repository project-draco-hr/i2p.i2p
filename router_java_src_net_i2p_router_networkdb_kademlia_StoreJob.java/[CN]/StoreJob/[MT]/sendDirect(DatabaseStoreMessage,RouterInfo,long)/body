{
  long token=1 + getContext().random().nextLong(I2NPMessage.MAX_ID_VALUE);
  msg.setReplyToken(token);
  msg.setReplyGateway(getContext().routerHash());
  if (_log.shouldLog(Log.DEBUG))   _log.debug(getJobId() + ": send(dbStore) w/ token expected " + token);
  _state.addPending(peer.getIdentity().getHash());
  SendSuccessJob onReply=new SendSuccessJob(getContext(),peer);
  FailedJob onFail=new FailedJob(getContext(),peer,getContext().clock().now());
  StoreMessageSelector selector=new StoreMessageSelector(getContext(),getJobId(),peer,token,expiration);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("sending store directly to " + peer.getIdentity().getHash());
  OutNetMessage m=new OutNetMessage(getContext(),msg,expiration,STORE_PRIORITY,peer);
  m.setOnFailedReplyJob(onFail);
  m.setOnFailedSendJob(onFail);
  m.setOnReplyJob(onReply);
  m.setReplySelector(selector);
  getContext().messageRegistry().registerPending(m);
  getContext().commSystem().processMessage(m);
}
