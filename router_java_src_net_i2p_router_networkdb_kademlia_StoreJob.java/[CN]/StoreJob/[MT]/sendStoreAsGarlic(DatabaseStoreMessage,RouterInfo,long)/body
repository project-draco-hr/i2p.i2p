{
  long waitingForId=RandomSource.getInstance().nextInt(Integer.MAX_VALUE);
  GarlicConfig cfg=buildGarlicConfig(msg,peer,waitingForId,expiration);
  FailedJob failedJob=new FailedJob(peer);
  long timeoutMs=expiration - Clock.getInstance().now();
  StoreMessageSelector selector=new StoreMessageSelector(peer,waitingForId);
  SessionKey sentKey=new SessionKey();
  Set sentTags=new HashSet(32);
  PublicKey rcptKey=cfg.getRecipientPublicKey();
  if (rcptKey == null) {
    if (cfg.getRecipient() == null) {
      throw new IllegalArgumentException("Null recipient specified");
    }
 else     if (cfg.getRecipient().getIdentity() == null) {
      throw new IllegalArgumentException("Null recipient.identity specified");
    }
 else     if (cfg.getRecipient().getIdentity().getPublicKey() == null) {
      throw new IllegalArgumentException("Null recipient.identity.publicKey specified");
    }
 else     rcptKey=cfg.getRecipient().getIdentity().getPublicKey();
  }
  JobQueue.getInstance().addJob(new SendGarlicJob(cfg,null,failedJob,new UpdateReplyFoundJob(peer,sentKey,sentTags,rcptKey),failedJob,timeoutMs,STORE_PRIORITY,selector,sentKey,sentTags));
}
