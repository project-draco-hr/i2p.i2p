{
  if (data == null)   return;
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Storing key " + key);
  DataStructure old=null;
  old=_data.put(key,data);
  if (data instanceof RouterInfo) {
    _context.profileManager().heardAbout(key);
    RouterInfo ri=(RouterInfo)data;
    if (old != null) {
      RouterInfo ori=(RouterInfo)old;
      if (ri.getPublished() < ori.getPublished()) {
        if (_log.shouldLog(Log.INFO))         _log.info("Almost clobbered an old router! " + key + ": [old published on "+ new Date(ori.getPublished())+ " new on "+ new Date(ri.getPublished())+ "]");
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Number of router options for " + key + ": "+ ri.getOptions().size()+ " (old one had: "+ ori.getOptions().size()+ ")",new Exception("Updated routerInfo"));
        _data.put(key,old);
      }
 else       if (ri.getPublished() > _context.clock().now() + MAX_FUTURE_PUBLISH_DATE) {
        if (_log.shouldLog(Log.INFO))         _log.info("Hmm, someone tried to give us something with the publication date really far in the future (" + new Date(ri.getPublished()) + "), dropping it");
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Number of router options for " + key + ": "+ ri.getOptions().size()+ " (old one had: "+ ori.getOptions().size()+ ")",new Exception("Updated routerInfo"));
        _data.put(key,old);
      }
 else {
        if (_log.shouldLog(Log.INFO))         _log.info("Updated the old router for " + key + ": [old published on "+ new Date(ori.getPublished())+ " new on "+ new Date(ri.getPublished())+ "]");
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Number of router options for " + key + ": "+ ri.getOptions().size()+ " (old one had: "+ ori.getOptions().size()+ ")",new Exception("Updated routerInfo"));
      }
    }
 else {
      if (_log.shouldLog(Log.INFO))       _log.info("Brand new router for " + key + ": published on "+ new Date(ri.getPublished()));
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Number of router options for " + key + ": "+ ri.getOptions().size(),new Exception("Updated routerInfo"));
    }
  }
 else   if (data instanceof LeaseSet) {
    LeaseSet ls=(LeaseSet)data;
    if (old != null) {
      LeaseSet ols=(LeaseSet)old;
      if (ls.getEarliestLeaseDate() < ols.getEarliestLeaseDate()) {
        if (_log.shouldLog(Log.INFO))         _log.info("Almost clobbered an old leaseSet! " + key + ": [old published on "+ new Date(ols.getEarliestLeaseDate())+ " new on "+ new Date(ls.getEarliestLeaseDate())+ "]");
        _data.put(key,old);
      }
 else       if (ls.getEarliestLeaseDate() > _context.clock().now() + MAX_FUTURE_EXPIRATION_DATE) {
        if (_log.shouldLog(Log.INFO))         _log.info("Hmm, someone tried to give us something with the expiration date really far in the future (" + new Date(ls.getEarliestLeaseDate()) + "), dropping it");
        _data.put(key,old);
      }
    }
  }
}
