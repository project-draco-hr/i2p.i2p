{
  if (data == null)   return false;
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Storing key " + key);
  DatabaseEntry old=null;
  old=_data.putIfAbsent(key,data);
  boolean rv=false;
  if (data.getType() == DatabaseEntry.KEY_TYPE_ROUTERINFO) {
    RouterInfo ri=(RouterInfo)data;
    if (old != null) {
      RouterInfo ori=(RouterInfo)old;
      if (ri.getPublished() < ori.getPublished()) {
        if (_log.shouldLog(Log.INFO))         _log.info("Almost clobbered an old router! " + key + ": [old published on "+ new Date(ori.getPublished())+ " new on "+ new Date(ri.getPublished())+ "]");
      }
 else       if (ri.getPublished() == ori.getPublished()) {
        if (_log.shouldLog(Log.INFO))         _log.info("Duplicate " + key);
      }
 else {
        if (_log.shouldLog(Log.INFO))         _log.info("Updated the old router for " + key + ": [old published on "+ new Date(ori.getPublished())+ " new on "+ new Date(ri.getPublished())+ "]");
        _data.put(key,data);
        rv=true;
      }
    }
 else {
      if (_log.shouldLog(Log.INFO))       _log.info("New router for " + key + ": published on "+ new Date(ri.getPublished()));
      rv=true;
    }
  }
 else   if (data.getType() == DatabaseEntry.KEY_TYPE_LEASESET) {
    LeaseSet ls=(LeaseSet)data;
    if (old != null) {
      LeaseSet ols=(LeaseSet)old;
      if (ls.getEarliestLeaseDate() < ols.getEarliestLeaseDate()) {
        if (_log.shouldLog(Log.INFO))         _log.info("Almost clobbered an old leaseSet! " + key + ": [old published on "+ new Date(ols.getEarliestLeaseDate())+ " new on "+ new Date(ls.getEarliestLeaseDate())+ "]");
      }
 else       if (ls.getEarliestLeaseDate() == ols.getEarliestLeaseDate()) {
        if (_log.shouldLog(Log.INFO))         _log.info("Duplicate " + key);
      }
 else {
        if (_log.shouldLog(Log.INFO)) {
          _log.info("Updated old leaseSet " + key + ": [old published on "+ new Date(ols.getEarliestLeaseDate())+ " new on "+ new Date(ls.getEarliestLeaseDate())+ "]");
          if (_log.shouldLog(Log.DEBUG))           _log.debug("RAP? " + ls.getReceivedAsPublished() + " RAR? "+ ls.getReceivedAsReply());
        }
        _data.put(key,data);
        rv=true;
      }
    }
 else {
      if (_log.shouldLog(Log.INFO)) {
        _log.info("New leaseset for " + key + ": published on "+ new Date(ls.getEarliestLeaseDate()));
        if (_log.shouldLog(Log.DEBUG))         _log.debug("RAP? " + ls.getReceivedAsPublished() + " RAR? "+ ls.getReceivedAsReply());
      }
      rv=true;
    }
  }
  return rv;
}
