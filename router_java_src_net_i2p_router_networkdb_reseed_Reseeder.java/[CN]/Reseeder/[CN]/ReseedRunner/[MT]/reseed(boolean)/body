{
  List<String> URLList=new ArrayList<String>();
  String URLs=_context.getProperty(PROP_RESEED_URL);
  boolean defaulted=URLs == null;
  boolean SSLDisable=_context.getBooleanProperty(PROP_SSL_DISABLE);
  boolean SSLRequired=_context.getBooleanProperty(PROP_SSL_REQUIRED);
  if (defaulted) {
    if (SSLDisable)     URLs=DEFAULT_SEED_URL;
 else     URLs=DEFAULT_SSL_SEED_URL;
  }
  StringTokenizer tok=new StringTokenizer(URLs," ,");
  while (tok.hasMoreTokens())   URLList.add(tok.nextToken().trim());
  Collections.shuffle(URLList,_context.random());
  if (defaulted && !SSLDisable && !SSLRequired) {
    List<String> URLList2=new ArrayList<String>();
    tok=new StringTokenizer(DEFAULT_SEED_URL," ,");
    while (tok.hasMoreTokens())     URLList2.add(tok.nextToken().trim());
    Collections.shuffle(URLList2,_context.random());
    URLList.addAll(URLList2);
  }
  int total=0;
  for (int i=0; i < URLList.size() && _isRunning; i++) {
    String url=URLList.get(i);
    int dl=reseedOne(url,echoStatus);
    if (dl > 0) {
      total+=dl;
      if (total >= 100)       break;
      String alt;
      if (url.startsWith("http://"))       alt=url.replace("http://","https://");
 else       alt=url.replace("https://","http://");
      int idx=URLList.indexOf(alt);
      if (idx > i)       URLList.remove(i);
    }
  }
  return total;
}
