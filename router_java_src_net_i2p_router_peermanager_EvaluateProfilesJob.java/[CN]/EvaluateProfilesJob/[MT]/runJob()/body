{
  try {
    long start=_context.clock().now();
    Set allPeers=_context.profileOrganizer().selectAllPeers();
    long afterSelect=_context.clock().now();
    for (Iterator iter=allPeers.iterator(); iter.hasNext(); ) {
      Hash peer=(Hash)iter.next();
      PeerProfile profile=_context.profileOrganizer().getProfile(peer);
      if (profile != null)       profile.coallesceStats();
    }
    long afterCoallesce=_context.clock().now();
    _context.profileOrganizer().reorganize();
    long afterReorganize=_context.clock().now();
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Profiles coallesced and reorganized.  total: " + allPeers.size() + ", selectAll: "+ (afterSelect - start)+ "ms, coallesce: "+ (afterCoallesce - afterSelect)+ "ms, reorganize: "+ (afterReorganize - afterSelect));
  }
 catch (  Throwable t) {
    _log.log(Log.CRIT,"Error evaluating profiles",t);
  }
 finally {
    requeue(30 * 1000);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Requeued for " + new Date(getTiming().getStartAfter()));
  }
}
