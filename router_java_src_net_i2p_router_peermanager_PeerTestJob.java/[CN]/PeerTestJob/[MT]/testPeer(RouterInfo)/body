{
  TunnelId inTunnelId=getInboundTunnelId();
  if (inTunnelId == null) {
    _log.error("No tunnels to get peer test replies through!  wtf!");
    return;
  }
  TunnelInfo inTunnel=_context.tunnelManager().getTunnelInfo(inTunnelId);
  RouterInfo inGateway=_context.netDb().lookupRouterInfoLocally(inTunnel.getThisHop());
  if (inGateway == null) {
    _log.error("We can't find the gateway to our inbound tunnel?! wtf");
    return;
  }
  long timeoutMs=getTestTimeout();
  long expiration=_context.clock().now() + timeoutMs;
  long nonce=_context.random().nextLong(I2NPMessage.MAX_ID_VALUE);
  DatabaseStoreMessage msg=buildMessage(peer,inTunnelId,inGateway.getIdentity().getHash(),nonce,expiration);
  TunnelId outTunnelId=getOutboundTunnelId();
  if (outTunnelId == null) {
    _log.error("No tunnels to send search out through!  wtf!");
    return;
  }
  TunnelInfo outTunnel=_context.tunnelManager().getTunnelInfo(outTunnelId);
  if (_log.shouldLog(Log.DEBUG))   _log.debug(getJobId() + ": Sending peer test to " + peer.getIdentity().getHash().toBase64()+ "w/ replies through ["+ inGateway.getIdentity().getHash().toBase64()+ "] via tunnel ["+ msg.getReplyTunnel()+ "]");
  ReplySelector sel=new ReplySelector(peer.getIdentity().getHash(),nonce,expiration);
  PeerReplyFoundJob reply=new PeerReplyFoundJob(_context,peer,inTunnel,outTunnel);
  PeerReplyTimeoutJob timeoutJob=new PeerReplyTimeoutJob(_context,peer,inTunnel,outTunnel);
  SendTunnelMessageJob j=new SendTunnelMessageJob(_context,msg,outTunnelId,peer.getIdentity().getHash(),null,null,reply,timeoutJob,sel,timeoutMs,TEST_PRIORITY);
  _context.jobQueue().addJob(j);
}
