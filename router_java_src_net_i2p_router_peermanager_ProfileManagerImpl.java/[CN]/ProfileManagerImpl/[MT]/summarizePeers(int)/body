{
  Set peers=new HashSet(numPeers);
  _context.profileOrganizer().selectFastPeers(numPeers,null,peers);
  Properties props=new Properties();
  for (Iterator iter=peers.iterator(); iter.hasNext(); ) {
    Hash peer=(Hash)iter.next();
    PeerProfile prof=getProfile(peer);
    if (prof == null)     continue;
    StringBuilder buf=new StringBuilder(64);
    buf.append("status: ");
    if (_context.profileOrganizer().isFast(peer)) {
      buf.append("fast");
    }
 else     if (_context.profileOrganizer().isHighCapacity(peer)) {
      buf.append("highCapacity");
    }
 else     if (_context.profileOrganizer().isFailing(peer)) {
      buf.append("failing");
    }
 else {
      buf.append("notFailing");
    }
    if (_context.profileOrganizer().isWellIntegrated(peer))     buf.append("Integrated ");
 else     buf.append(" ");
    buf.append("capacity: ").append(num(prof.getCapacityValue())).append(" ");
    buf.append("speed: ").append(num(prof.getSpeedValue())).append(" ");
    buf.append("integration: ").append(num(prof.getIntegrationValue()));
    props.setProperty("profile." + peer.toBase64().replace('=','_'),buf.toString());
  }
  return props;
}
