{
  _context=context;
  _log=context.logManager().getLog(ProfileOrganizer.class);
  _comp=new InverseCapacityComparator();
  _fastPeers=new HashMap(16);
  _highCapacityPeers=new HashMap(16);
  _wellIntegratedPeers=new HashMap(16);
  _notFailingPeers=new HashMap(64);
  _notFailingPeersList=new ArrayList(64);
  _failingPeers=new HashMap(16);
  _strictCapacityOrder=new TreeSet(_comp);
  _thresholdSpeedValue=0.0d;
  _thresholdCapacityValue=0.0d;
  _thresholdIntegrationValue=0.0d;
  _persistenceHelper=new ProfilePersistenceHelper(_context);
  _context.statManager().createRateStat("peer.profileSortTime","How long the reorg takes sorting peers","Peers",new long[]{10 * 60 * 1000});
  _context.statManager().createRateStat("peer.profileCoalesceTime","How long the reorg takes coalescing peer stats","Peers",new long[]{10 * 60 * 1000});
  _context.statManager().createRateStat("peer.profileThresholdTime","How long the reorg takes determining the tier thresholds","Peers",new long[]{10 * 60 * 1000});
  _context.statManager().createRateStat("peer.profilePlaceTime","How long the reorg takes placing peers in the tiers","Peers",new long[]{10 * 60 * 1000});
  _context.statManager().createRateStat("peer.profileReorgTime","How long the reorg takes overall","Peers",new long[]{10 * 60 * 1000});
}
