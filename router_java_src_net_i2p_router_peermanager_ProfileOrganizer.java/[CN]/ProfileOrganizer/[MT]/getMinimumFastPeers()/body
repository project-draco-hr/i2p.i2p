{
  if (_context.router() != null) {
    String val=_context.router().getConfigSetting(PROP_MINIMUM_FAST_PEERS);
    if (val != null) {
      try {
        int rv=Integer.parseInt(val);
        if (_log.shouldLog(Log.DEBUG))         _log.debug("router config said " + PROP_MINIMUM_FAST_PEERS + '='+ val);
        return rv;
      }
 catch (      NumberFormatException nfe) {
        if (_log.shouldLog(Log.WARN))         _log.warn("Minimum fast peers improperly set in the router config [" + val + "]",nfe);
      }
    }
  }
  String val=_context.getProperty(PROP_MINIMUM_FAST_PEERS,"" + DEFAULT_MINIMUM_FAST_PEERS);
  if (val != null) {
    try {
      int rv=Integer.parseInt(val);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("router context said " + PROP_MINIMUM_FAST_PEERS + '='+ val);
      return rv;
    }
 catch (    NumberFormatException nfe) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Minimum fast peers improperly set in the router environment [" + val + "]",nfe);
    }
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("no config for " + PROP_MINIMUM_FAST_PEERS + ", using "+ DEFAULT_MINIMUM_FAST_PEERS);
  return DEFAULT_MINIMUM_FAST_PEERS;
}
