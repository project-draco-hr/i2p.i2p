{
  if (profile.getIsFailing()) {
    if (!shouldDrop(profile))     _failingPeers.put(profile.getPeer(),profile);
    _fastPeers.remove(profile.getPeer());
    _highCapacityPeers.remove(profile.getPeer());
    _wellIntegratedPeers.remove(profile.getPeer());
    _notFailingPeers.remove(profile.getPeer());
  }
 else {
    _failingPeers.remove(profile.getPeer());
    _fastPeers.remove(profile.getPeer());
    _highCapacityPeers.remove(profile.getPeer());
    _wellIntegratedPeers.remove(profile.getPeer());
    _notFailingPeers.put(profile.getPeer(),profile);
    if (_thresholdCapacityValue <= profile.getCapacityValue()) {
      _highCapacityPeers.put(profile.getPeer(),profile);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("High capacity: \t" + profile.getPeer().toBase64());
      if (_thresholdSpeedValue <= profile.getSpeedValue()) {
        _fastPeers.put(profile.getPeer(),profile);
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Fast: \t" + profile.getPeer().toBase64());
      }
      if (_thresholdIntegrationValue <= profile.getIntegrationValue()) {
        _wellIntegratedPeers.put(profile.getPeer(),profile);
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Integrated: \t" + profile.getPeer().toBase64());
      }
    }
 else {
    }
  }
}
