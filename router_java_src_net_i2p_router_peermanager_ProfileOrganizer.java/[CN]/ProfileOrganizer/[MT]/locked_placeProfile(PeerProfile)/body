{
  Hash peer=profile.getPeer();
  if (profile.getIsFailing()) {
    if (!shouldDrop(profile))     _failingPeers.put(peer,profile);
    _fastPeers.remove(peer);
    _highCapacityPeers.remove(peer);
    _wellIntegratedPeers.remove(peer);
    _notFailingPeers.remove(peer);
    _notFailingPeersList.remove(peer);
  }
 else {
    _failingPeers.remove(peer);
    _fastPeers.remove(peer);
    _highCapacityPeers.remove(peer);
    _wellIntegratedPeers.remove(peer);
    _notFailingPeers.put(peer,profile);
    _notFailingPeersList.add(peer);
    if (_thresholdCapacityValue <= profile.getCapacityValue() && isSelectable(peer) && !_context.commSystem().isInBadCountry(peer)) {
      _highCapacityPeers.put(peer,profile);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("High capacity: \t" + peer);
      if (_thresholdSpeedValue <= profile.getSpeedValue()) {
        if (!profile.getIsActive()) {
          if (_log.shouldLog(Log.INFO))           _log.info("Skipping fast mark [!active] for " + peer);
        }
 else {
          _fastPeers.put(peer,profile);
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Fast: \t" + peer);
        }
      }
    }
 else {
    }
    if (_thresholdIntegrationValue <= profile.getIntegrationValue()) {
      _wellIntegratedPeers.put(peer,profile);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Integrated: \t" + peer);
    }
  }
}
