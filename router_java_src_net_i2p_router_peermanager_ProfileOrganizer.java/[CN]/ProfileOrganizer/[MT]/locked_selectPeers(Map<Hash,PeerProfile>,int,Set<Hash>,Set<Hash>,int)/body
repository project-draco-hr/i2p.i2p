{
  List<Hash> all=new ArrayList<Hash>(peers.keySet());
  Set<Integer> IPSet=new HashSet<Integer>(8);
  for (Iterator<Hash> iter=new RandomIterator<Hash>(all); (matches.size() < howMany) && iter.hasNext(); ) {
    Hash peer=iter.next();
    if (toExclude != null && toExclude.contains(peer))     continue;
    if (matches.contains(peer))     continue;
    if (_us.equals(peer))     continue;
    boolean ok=isSelectable(peer);
    if (ok) {
      ok=mask <= 0 || notRestricted(peer,IPSet,mask);
      if ((!ok) && _log.shouldLog(Log.WARN))       _log.warn("IP restriction prevents " + peer + " from joining "+ matches);
    }
    if (ok)     matches.add(peer);
 else     matches.remove(peer);
  }
}
