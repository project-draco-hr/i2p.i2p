{
  Set peers=_organizer.selectAllPeers();
  long now=_context.clock().now();
  long hideBefore=now - 3 * 60 * 60* 1000;
  TreeSet order=new TreeSet(_comparator);
  TreeSet integratedPeers=new TreeSet(_comparator);
  for (Iterator iter=peers.iterator(); iter.hasNext(); ) {
    Hash peer=(Hash)iter.next();
    if (_organizer.getUs().equals(peer))     continue;
    PeerProfile prof=_organizer.getProfile(peer);
    if (_organizer.isWellIntegrated(peer)) {
      integratedPeers.add(prof);
    }
 else {
      RouterInfo info=_context.netDb().lookupRouterInfoLocally(peer);
      if (info != null && info.getCapabilities().indexOf("f") >= 0)       integratedPeers.add(prof);
    }
    if (prof.getLastSendSuccessful() <= hideBefore)     continue;
    order.add(prof);
  }
  int fast=0;
  int reliable=0;
  int integrated=0;
  int failing=0;
  StringBuffer buf=new StringBuffer(16 * 1024);
  buf.append("<h2>Peer Profiles</h2>\n");
  buf.append("<table border=\"1\">");
  buf.append("<tr>");
  buf.append("<td><b>Peer</b> (").append(order.size()).append(", hiding ").append(peers.size() - order.size()).append(")</td>");
  buf.append("<td><b>Groups (Caps)</b></td>");
  buf.append("<td><b>Speed</b></td>");
  buf.append("<td><b>Capacity</b></td>");
  buf.append("<td><b>Integration</b></td>");
  buf.append("<td><b>Failing?</b></td>");
  buf.append("<td>&nbsp;</td>");
  buf.append("</tr>");
  int prevTier=1;
  for (Iterator iter=order.iterator(); iter.hasNext(); ) {
    PeerProfile prof=(PeerProfile)iter.next();
    Hash peer=prof.getPeer();
    int tier=0;
    boolean isIntegrated=false;
    if (_organizer.isFast(peer)) {
      tier=1;
      fast++;
      reliable++;
    }
 else     if (_organizer.isHighCapacity(peer)) {
      tier=2;
      reliable++;
    }
 else     if (_organizer.isFailing(peer)) {
      failing++;
    }
 else {
      tier=3;
    }
    if (_organizer.isWellIntegrated(peer)) {
      isIntegrated=true;
      integrated++;
    }
    if (tier != prevTier)     buf.append("<tr><td colspan=\"7\"><hr /></td></tr>\n");
    prevTier=tier;
    buf.append("<tr><td>");
    buf.append(_context.commSystem().renderPeerHTML(peer));
    buf.append("</td><td>");
switch (tier) {
case 1:
      buf.append("Fast, High Capacity");
    break;
case 2:
  buf.append("High Capacity");
break;
case 3:
buf.append("Not Failing");
break;
default :
buf.append("Failing");
break;
}
if (isIntegrated) buf.append(", Integrated");
RouterInfo info=_context.netDb().lookupRouterInfoLocally(peer);
if (info != null) {
buf.append(" (").append(info.getCapabilities());
String v=info.getOption("router.version");
if (v != null) buf.append(' ').append(v);
buf.append(')');
}
buf.append("<td align=\"right\">").append(num(prof.getSpeedValue()));
long bonus=prof.getSpeedBonus();
if (bonus != 0) {
if (bonus > 0) buf.append(" (+");
 else buf.append(" (");
buf.append(bonus).append(')');
}
buf.append("</td><td align=\"right\">").append(num(prof.getCapacityValue()));
bonus=prof.getCapacityBonus();
if (bonus != 0) {
if (bonus > 0) buf.append(" (+");
 else buf.append(" (");
buf.append(bonus).append(')');
}
buf.append("</td><td align=\"right\">").append(num(prof.getIntegrationValue()));
buf.append("</td><td>");
if (_context.shitlist().isShitlisted(peer)) buf.append("Shitlist");
if (prof.getIsFailing()) buf.append(" Failing");
if (_context.commSystem().wasUnreachable(peer)) buf.append(" Unreachable");
Rate failed=prof.getTunnelHistory().getFailedRate().getRate(30 * 60 * 1000);
long fails=failed.getCurrentEventCount() + failed.getLastEventCount();
if (fails > 0) {
Rate accepted=prof.getTunnelCreateResponseTime().getRate(30 * 60 * 1000);
long total=fails + accepted.getCurrentEventCount() + accepted.getLastEventCount();
if (total / fails <= 10) buf.append(' ').append(fails).append('/').append(total).append(" Test Fails");
}
buf.append("&nbsp</td>");
buf.append("<td nowrap><a href=\"dumpprofile.jsp?peer=").append(peer.toBase64().substring(0,6)).append("\">profile</a>");
buf.append("/<a href=\"configpeer.jsp?peer=").append(peer.toBase64()).append("\">+-</a></td>\n");
buf.append("</tr>");
}
buf.append("</table>");
buf.append("<h2>Floodfill and Integrated Peers</h2>\n");
buf.append("<table border=\"1\">");
buf.append("<tr>");
buf.append("<td><b>Peer</b></td>");
buf.append("<td><b>Caps</b></td>");
buf.append("<td><b>Integ. Value</b></td>");
buf.append("<td><b>Last Heard About</b></td>");
buf.append("<td><b>Last Heard From</b></td>");
buf.append("<td><b>Last Successful Send</b></td>");
buf.append("<td><b>Last Failed Send</b></td>");
buf.append("<td><b>10m Resp. Time</b></td>");
buf.append("<td><b>1h Resp. Time</b></td>");
buf.append("<td><b>1d Resp. Time</b></td>");
buf.append("<td><b>Successful Lookups</b></td>");
buf.append("<td><b>Failed Lookups</b></td>");
buf.append("<td><b>New Stores</b></td>");
buf.append("<td><b>Old Stores</b></td>");
buf.append("<td><b>1h Fail Rate</b></td>");
buf.append("<td><b>1d Fail Rate</b></td>");
buf.append("</tr>");
for (Iterator iter=integratedPeers.iterator(); iter.hasNext(); ) {
PeerProfile prof=(PeerProfile)iter.next();
Hash peer=prof.getPeer();
buf.append("<tr><td>");
buf.append(_context.commSystem().renderPeerHTML(peer));
buf.append("</td>");
RouterInfo info=_context.netDb().lookupRouterInfoLocally(peer);
if (info != null) buf.append("<td align=\"center\">" + info.getCapabilities() + "</td>");
 else buf.append("<td>&nbsp;</td>");
buf.append("</code></td>");
buf.append("<td align=\"right\">").append(num(prof.getIntegrationValue())).append("</td>");
long time;
time=now - prof.getLastHeardAbout();
buf.append("<td align=\"right\">").append(DataHelper.formatDuration(time)).append("</td>");
time=now - prof.getLastHeardFrom();
buf.append("<td align=\"right\">").append(DataHelper.formatDuration(time)).append("</td>");
time=now - prof.getLastSendSuccessful();
buf.append("<td align=\"right\">").append(DataHelper.formatDuration(time)).append("</td>");
time=now - prof.getLastSendFailed();
buf.append("<td align=\"right\">").append(DataHelper.formatDuration(time)).append("</td>");
buf.append("<td align=\"right\">").append(avg(prof,10 * 60 * 1000l)).append("</td>");
buf.append("<td align=\"right\">").append(avg(prof,60 * 60 * 1000l)).append("</td>");
buf.append("<td align=\"right\">").append(avg(prof,24 * 60 * 60* 1000l)).append("</td>");
DBHistory dbh=prof.getDBHistory();
if (dbh != null) {
buf.append("<td align=\"right\">").append(dbh.getSuccessfulLookups()).append("</td>");
buf.append("<td align=\"right\">").append(dbh.getFailedLookups()).append("</td>");
buf.append("<td align=\"right\">").append(dbh.getUnpromptedDbStoreNew()).append("</td>");
buf.append("<td align=\"right\">").append(dbh.getUnpromptedDbStoreOld()).append("</td>");
buf.append("<td align=\"right\">").append(davg(dbh,60 * 60 * 1000l)).append("</td>");
buf.append("<td align=\"right\">").append(davg(dbh,24 * 60 * 60* 1000l)).append("</td>");
}
}
buf.append("</table>");
buf.append("<p><i>Definitions:<ul>");
buf.append("<li><b>groups</b>: as determined by the profile organizer</li>");
buf.append("<li><b>caps</b>: capabilities in the netDb, not used to determine profiles</li>");
buf.append("<li><b>speed</b>: peak throughput (bytes per second) over a 1 minute period that the peer has sustained in a single tunnel</li>");
buf.append("<li><b>capacity</b>: how many tunnels can we ask them to join in an hour?</li>");
buf.append("<li><b>integration</b>: how many new peers have they told us about lately?</li>");
buf.append("<li><b>failing?</b>: is the peer currently swamped (and if possible we should avoid nagging them)?</li>");
buf.append("</ul></i>");
buf.append("Red peers prefixed with '--' means the peer is failing, and blue peers prefixed ");
buf.append("with '++' means we've sent or received a message from them ");
buf.append("in the last five minutes.</i><br />");
buf.append("<p><b>Thresholds:</b><br />");
buf.append("<b>Speed:</b> ").append(num(_organizer.getSpeedThreshold())).append(" (").append(fast).append(" fast peers)<br />");
buf.append("<b>Capacity:</b> ").append(num(_organizer.getCapacityThreshold())).append(" (").append(reliable).append(" high capacity peers)<br />");
buf.append("<b>Integration:</b> ").append(num(_organizer.getIntegrationThreshold())).append(" (").append(integrated).append(" well integrated peers)<br />");
out.write(buf.toString());
out.flush();
}
