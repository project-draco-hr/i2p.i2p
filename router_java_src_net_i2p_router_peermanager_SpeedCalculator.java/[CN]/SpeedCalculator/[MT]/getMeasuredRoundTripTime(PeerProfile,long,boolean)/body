{
  double activityTime=0;
  double rtt=0;
  double dbResponseTime=0;
  double tunnelResponseTime=0;
  double tunnelTestTime=0;
  long dbResponses=0;
  long tunnelResponses=0;
  long tunnelTests=0;
  long events=0;
  if (period < 0) {
    Rate dbResponseRate=profile.getDbResponseTime().getRate(60 * 60 * 1000l);
    Rate tunnelResponseRate=profile.getTunnelCreateResponseTime().getRate(60 * 60 * 1000l);
    Rate tunnelTestRate=profile.getTunnelTestResponseTime().getRate(60 * 60 * 1000l);
    dbResponses=tunnelTestOnly ? 0 : dbResponseRate.getLifetimeEventCount();
    tunnelResponses=tunnelTestOnly ? 0 : tunnelResponseRate.getLifetimeEventCount();
    tunnelTests=tunnelTestRate.getLifetimeEventCount();
    dbResponseTime=tunnelTestOnly ? 0 : dbResponseRate.getLifetimeAverageValue();
    tunnelResponseTime=tunnelTestOnly ? 0 : tunnelResponseRate.getLifetimeAverageValue();
    tunnelTestTime=tunnelTestRate.getLifetimeAverageValue();
    events=dbResponses + tunnelResponses + tunnelTests;
    if (events <= 0)     return 0;
    activityTime=(dbResponses * dbResponseTime + tunnelResponses * tunnelResponseTime + tunnelTests * tunnelTestTime);
    rtt=activityTime / events;
  }
 else {
    Rate dbResponseRate=profile.getDbResponseTime().getRate(period);
    Rate tunnelResponseRate=profile.getTunnelCreateResponseTime().getRate(period);
    Rate tunnelTestRate=profile.getTunnelTestResponseTime().getRate(period);
    dbResponses=tunnelTestOnly ? 0 : dbResponseRate.getCurrentEventCount() + dbResponseRate.getLastEventCount();
    tunnelResponses=tunnelTestOnly ? 0 : tunnelResponseRate.getCurrentEventCount() + tunnelResponseRate.getLastEventCount();
    tunnelTests=tunnelTestRate.getCurrentEventCount() + tunnelTestRate.getLastEventCount();
    if (!tunnelTestOnly) {
      dbResponseTime=avg(dbResponseRate);
      tunnelResponseTime=avg(tunnelResponseRate);
    }
    tunnelTestTime=avg(tunnelTestRate);
    events=dbResponses + tunnelResponses + tunnelTests;
    if (events <= 0)     return 0;
    activityTime=(dbResponses * dbResponseTime + tunnelResponses * tunnelResponseTime + tunnelTests * tunnelTestTime);
    rtt=activityTime / events;
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("\nMeasured response time for " + profile.getPeer().toBase64() + " over "+ DataHelper.formatDuration(period)+ " with activityTime of "+ activityTime+ ": "+ rtt+ "\nover "+ events+ " events ("+ dbResponses+ " dbResponses, "+ tunnelResponses+ " tunnelResponses, "+ tunnelTests+ " tunnelTests)\ntimes ("+ dbResponseTime+ "ms, "+ tunnelResponseTime+ "ms, "+ tunnelTestTime+ "ms respectively)");
  return rtt;
}
