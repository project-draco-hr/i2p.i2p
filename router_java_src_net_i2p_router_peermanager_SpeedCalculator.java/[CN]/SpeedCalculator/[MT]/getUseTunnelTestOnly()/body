{
  if (_context.router() != null) {
    String val=_context.router().getConfigSetting(PROP_USE_TUNNEL_TEST_ONLY);
    if (val != null) {
      try {
        boolean rv=Boolean.getBoolean(val);
        if (_log.shouldLog(Log.DEBUG))         _log.debug("router config said " + PROP_USE_TUNNEL_TEST_ONLY + '='+ val);
        return rv;
      }
 catch (      NumberFormatException nfe) {
        if (_log.shouldLog(Log.WARN))         _log.warn("Tunnel test only for speed improperly set in the router config [" + val + "]",nfe);
      }
    }
  }
  String val=_context.getProperty(PROP_USE_TUNNEL_TEST_ONLY,"" + DEFAULT_USE_TUNNEL_TEST_ONLY);
  if (val != null) {
    try {
      boolean rv=Boolean.getBoolean(val);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("router context said " + PROP_USE_TUNNEL_TEST_ONLY + '='+ val);
    }
 catch (    NumberFormatException nfe) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Tunnel test only for speed improperly set in the router environment [" + val + "]",nfe);
    }
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("no config for " + PROP_USE_TUNNEL_TEST_ONLY + ", using "+ DEFAULT_USE_TUNNEL_TEST_ONLY);
  return DEFAULT_USE_TUNNEL_TEST_ONLY;
}
