{
  boolean shouldSave=false;
  for (int i=0; i < apps.size(); i++) {
    ClientAppConfig app=apps.get(i);
    if (!app.className.equals(OLD_CLASS))     continue;
    String client="client application " + i + " ["+ app.clientName+ "] from Jetty 5 "+ OLD_CLASS+ " to Jetty 6 "+ NEW_CLASS;
    if (!hasJetty6()) {
      System.err.println("WARNING: Jetty 6 unavailable, cannot migrate " + client);
      continue;
    }
    if (app.args == null)     continue;
    String args[]=LoadClientAppsJob.parseArgs(app.args);
    if (args.length == 0)     continue;
    String xml=args[0];
    File xmlFile=new File(xml);
    if (!xmlFile.isAbsolute())     xmlFile=new File(ctx.getAppDir(),xml);
    if (!xmlFile.exists()) {
      System.err.println("WARNING: XML file " + xmlFile + " not found, cannot migrate "+ client);
      continue;
    }
    File eepsite=xmlFile.getParentFile();
    File backup=new File(eepsite,BACKUP);
    if (backup.exists())     backup=new File(eepsite,BACKUP + ctx.random().nextInt());
    boolean ok=WorkingDir.copyFile(xmlFile,backup);
    if (!ok) {
      System.err.println("WARNING: Failed to copy XML file " + xmlFile + " to "+ backup+ ", cannot migrate "+ client);
      continue;
    }
    File baseEep=new File(ctx.getBaseDir(),JETTY6_TEMPLATE_DIR);
    File baseContext=new File(baseEep,BASE_CONTEXT);
    if (!baseContext.exists()) {
      System.err.println("WARNING: Cannot find new XML file template " + baseContext + ", cannot migrate "+ client);
      continue;
    }
    String newPath=eepsite.getAbsolutePath() + File.separatorChar;
    ok=WorkingDir.migrateJettyXml(baseEep,eepsite,"jetty.xml","./eepsite/",newPath);
    if (!ok) {
      System.err.println("WARNING: Failed to modify XML file " + xmlFile + ", cannot migrate "+ client);
      continue;
    }
    WorkingDir.migrateJettyXml(baseEep,eepsite,"jetty-ssl.xml","./eepsite/",newPath);
    (new File(eepsite,"contexts")).mkdir();
    WorkingDir.migrateJettyXml(baseEep,eepsite,BASE_CONTEXT,"./eepsite/",newPath);
    WorkingDir.migrateJettyXml(baseEep,eepsite,CGI_CONTEXT,"./eepsite/",newPath);
    WorkingDir.copyFile(new File(baseEep,"jetty-rewrite.xml"),new File(eepsite,"jetty-rewrite.xml"));
    (new File(eepsite,"etc")).mkdir();
    File to=new File(eepsite,"etc/realm.properties");
    if (!to.exists())     WorkingDir.copyFile(new File(baseEep,"etc/realm.properties"),to);
    to=new File(eepsite,"etc/webdefault.xml");
    if (!to.exists())     WorkingDir.copyFile(new File(baseEep,"etc/webdefault.xml"),to);
    app.className=NEW_CLASS;
    shouldSave=true;
    System.err.println("WARNING: Migrated " + client + '\n'+ "Check the following files in "+ eepsite+ ": jetty.xml, "+ BASE_CONTEXT+ ", and "+ CGI_CONTEXT+ "\n"+ "Your old jetty.xml was saved as "+ backup+ '\n'+ "If you modified your jetty.xml to change ports, thread limits, etc, you MUST\n"+ "edit it to change them again. Your port was reset to 7658.");
  }
  if (shouldSave) {
    File cfgFile=ClientAppConfig.configFile(ctx);
    File backup=new File(cfgFile.getAbsolutePath() + ".jetty5");
    if (backup.exists())     backup=new File(cfgFile.getAbsolutePath() + ctx.random().nextInt());
    boolean ok=WorkingDir.copyFile(cfgFile,backup);
    if (ok) {
      ClientAppConfig.writeClientAppConfig(ctx,apps);
      System.err.println("WARNING: Migrated clients config file " + cfgFile + " from Jetty 5 "+ OLD_CLASS+ " to Jetty 6 "+ NEW_CLASS+ "\n"+ "Your old clients config file was saved as "+ backup);
    }
  }
}
