{
  long found[]=new long[_concurringServers];
  long now=-1;
  int stratum=-1;
  long expectedDelta=0;
  _wellSynced=false;
  for (int i=0; i < _concurringServers; i++) {
    if (i > 0) {
      try {
        Thread.sleep(2 * 1000);
      }
 catch (      InterruptedException ie) {
      }
    }
    long[] timeAndStratum=NtpClient.currentTimeAndStratum(serverList);
    now=timeAndStratum[0];
    stratum=(int)timeAndStratum[1];
    long delta=now - _context.clock().now();
    found[i]=delta;
    if (i == 0) {
      if (Math.abs(delta) < MAX_VARIANCE) {
        if (_log != null && _log.shouldInfo())         _log.info("a single SNTP query was within the tolerance (" + delta + "ms)");
        _wellSynced=Math.abs(delta) < 500;
        break;
      }
 else {
        expectedDelta=delta;
      }
    }
 else {
      if (Math.abs(delta - expectedDelta) > MAX_VARIANCE) {
        if (_log != null && _log.shouldError()) {
          StringBuilder err=new StringBuilder(96);
          err.append("SNTP client variance exceeded at query ").append(i);
          err.append(".  expected = ");
          err.append(expectedDelta);
          err.append(", found = ");
          err.append(delta);
          err.append(" all deltas: ");
          for (int j=0; j < found.length; j++)           err.append(found[j]).append(' ');
          _log.error(err.toString());
        }
        return false;
      }
    }
  }
  stampTime(now,stratum);
  if (_log != null && _log.shouldDebug()) {
    StringBuilder buf=new StringBuilder(64);
    buf.append("Deltas: ");
    for (int i=0; i < found.length; i++)     buf.append(found[i]).append(' ');
    _log.debug(buf.toString());
  }
  return true;
}
