{
  if (_manager == null) {
    return Long.valueOf(_context.clock().getOffset() / 1000);
  }
  Vector skews=_manager.getClockSkews();
  if (skews == null) {
    return Long.valueOf(_context.clock().getOffset() / 1000);
  }
  if (skews.size() < 5) {
    return Long.valueOf(_context.clock().getOffset() / 1000);
  }
  Collections.sort(skews);
  int frameSize=Math.min((skews.size() * percentToInclude / 100),2);
  int first=(skews.size() / 2) - (frameSize / 2);
  int last=(skews.size() / 2) + (frameSize / 2);
  long sum=0;
  for (int i=first; i < last; i++) {
    long value=((Long)(skews.get(i))).longValue();
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Adding clock skew " + i + " valued "+ value+ " s.");
    sum=sum + value;
  }
  return Long.valueOf(sum / frameSize);
}
