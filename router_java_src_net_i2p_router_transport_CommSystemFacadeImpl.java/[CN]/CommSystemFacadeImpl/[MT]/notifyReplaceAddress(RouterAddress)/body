{
  if (UDPAddr == null)   return;
  NTCPTransport t=(NTCPTransport)_manager.getTransport(NTCPTransport.STYLE);
  if (t == null)   return;
  Properties UDPProps=UDPAddr.getOptions();
  if (UDPProps == null)   return;
  Properties newProps;
  RouterAddress oldAddr=t.getCurrentAddress();
  if (_log.shouldLog(Log.INFO))   _log.info("Changing NTCP Address? was " + oldAddr);
  RouterAddress newAddr=oldAddr;
  if (newAddr == null) {
    newAddr=new RouterAddress();
    newAddr.setCost(10);
    newAddr.setExpiration(null);
    newAddr.setTransportStyle(NTCPTransport.STYLE);
    newProps=new Properties();
  }
 else {
    newProps=newAddr.getOptions();
    if (newProps == null)     newProps=new Properties();
  }
  boolean changed=false;
  String oport=newProps.getProperty(NTCPAddress.PROP_PORT);
  String nport=null;
  String cport=_context.getProperty(PROP_I2NP_NTCP_PORT);
  if (cport != null && cport.length() > 0) {
    nport=cport;
  }
 else   if (Boolean.valueOf(_context.getProperty(PROP_I2NP_NTCP_AUTO_PORT,"true")).booleanValue()) {
    nport=UDPProps.getProperty(UDPAddress.PROP_PORT);
  }
  if (_log.shouldLog(Log.INFO))   _log.info("old: " + oport + " config: "+ cport+ " new: "+ nport);
  if (nport == null || nport.length() <= 0)   return;
  if (oport == null || !oport.equals(nport)) {
    newProps.setProperty(NTCPAddress.PROP_PORT,nport);
    changed=true;
  }
  String ohost=newProps.getProperty(NTCPAddress.PROP_HOST);
  String enabled=_context.getProperty(PROP_I2NP_NTCP_AUTO_IP,"true");
  String name=_context.getProperty(PROP_I2NP_NTCP_HOSTNAME);
  if (name != null && name.length() > 0)   enabled="false";
  Transport udp=_manager.getTransport(UDPTransport.STYLE);
  short status=STATUS_UNKNOWN;
  if (udp != null)   status=udp.getReachabilityStatus();
  if (_log.shouldLog(Log.INFO))   _log.info("old: " + ohost + " config: "+ name+ " auto: "+ enabled+ " status: "+ status);
  if (enabled.equalsIgnoreCase("always") || (enabled.equalsIgnoreCase("true") && status == STATUS_OK)) {
    String nhost=UDPProps.getProperty(UDPAddress.PROP_HOST);
    if (_log.shouldLog(Log.INFO))     _log.info("old: " + ohost + " config: "+ name+ " new: "+ nhost);
    if (nhost == null || nhost.length() <= 0)     return;
    if (ohost == null || !ohost.equalsIgnoreCase(nhost)) {
      newProps.setProperty(NTCPAddress.PROP_HOST,nhost);
      changed=true;
    }
  }
 else   if (ohost == null || ohost.length() <= 0) {
    return;
  }
 else   if (enabled.equalsIgnoreCase("true") && status != STATUS_OK) {
    if (_log.shouldLog(Log.INFO))     _log.info("old: " + ohost + " config: "+ name+ " new: null");
    newAddr=null;
    changed=true;
  }
  if (!changed) {
    _log.warn("No change to NTCP Address");
    return;
  }
  _log.warn("Halting NTCP to change address");
  t.stopListening();
  if (newAddr != null)   newAddr.setOptions(newProps);
  while (t.isAlive()) {
    try {
      Thread.sleep(5 * 1000);
    }
 catch (    InterruptedException ie) {
    }
  }
  t.restartListening(newAddr);
  _log.warn("Changed NTCP Address and started up, address is now " + newAddr);
  return;
}
