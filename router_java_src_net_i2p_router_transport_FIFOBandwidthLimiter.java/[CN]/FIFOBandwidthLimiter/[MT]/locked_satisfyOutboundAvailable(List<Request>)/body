{
  for (int i=0; i < _pendingOutboundRequests.size(); i++) {
    SimpleRequest req=_pendingOutboundRequests.get(i);
    long waited=now() - req.getRequestTime();
    if (req.getAborted()) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Aborting outbound request to " + req + " waited "+ waited+ "ms) pending "+ _pendingOutboundRequests.size());
      _pendingOutboundRequests.remove(i);
      i--;
      continue;
    }
    int avo=_availableOutbound.get();
    if (avo <= 0)     break;
    int requested=req.getPendingRequested();
    int allocated;
    if (avo >= requested)     allocated=requested;
 else     allocated=avo;
    _availableOutbound.addAndGet(0 - allocated);
    _totalAllocatedOutboundBytes.addAndGet(allocated);
    req.allocateBytes(allocated);
    satisfied.add(req);
    if (req.getPendingRequested() > 0) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Allocating " + allocated + " bytes outbound as a partial grant to "+ req+ " waited "+ waited+ "ms) pending "+ _pendingOutboundRequests.size()+ ", longest waited "+ locked_getLongestOutboundWait()+ " out");
    }
 else {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Allocating " + allocated + " bytes outbound to finish the partial grant to "+ req+ " waited "+ waited+ "ms) pending "+ _pendingOutboundRequests.size()+ ", longest waited "+ locked_getLongestOutboundWait()+ " out)");
      _pendingOutboundRequests.remove(i);
      i--;
      if (waited > 10)       _context.statManager().addRateData("bwLimiter.outboundDelayedTime",waited);
    }
  }
}
