{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Refilling the queues with " + bytesInbound + "/"+ bytesOutbound+ ": "+ getStatus().toString());
  _availableInbound+=bytesInbound;
  _availableOutbound+=bytesOutbound;
  if (_availableInbound > _maxInbound) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("available inbound (" + _availableInbound + ") exceeds our inbound burst ("+ _maxInbound+ "), so no supplement");
    _unavailableInboundBurst+=_availableInbound - _maxInbound;
    _availableInbound=_maxInbound;
    if (_unavailableInboundBurst > _maxInboundBurst) {
      _totalWastedInboundBytes+=_unavailableInboundBurst - _maxInboundBurst;
      _unavailableInboundBurst=_maxInboundBurst;
    }
  }
 else {
    int want=(int)maxBurstIn;
    if (want > (_maxInbound - _availableInbound))     want=_maxInbound - _availableInbound;
    if (_log.shouldLog(Log.DEBUG))     _log.debug("want to pull " + want + " from the inbound burst ("+ _unavailableInboundBurst+ ") to supplement "+ _availableInbound+ " (max: "+ _maxInbound+ ")");
    if (want > 0) {
      if (want <= _unavailableInboundBurst) {
        _availableInbound+=want;
        _unavailableInboundBurst-=want;
      }
 else {
        _availableInbound+=_unavailableInboundBurst;
        _unavailableInboundBurst=0;
      }
    }
  }
  if (_availableOutbound > _maxOutbound) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("available outbound (" + _availableOutbound + ") exceeds our outbound burst ("+ _maxOutbound+ "), so no supplement");
    _unavailableOutboundBurst+=_availableOutbound - _maxOutbound;
    _availableOutbound=_maxOutbound;
    if (_unavailableOutboundBurst > _maxOutboundBurst) {
      _totalWastedOutboundBytes+=_unavailableOutboundBurst - _maxOutboundBurst;
      _unavailableOutboundBurst=_maxOutboundBurst;
    }
  }
 else {
    int want=(int)maxBurstOut;
    if (want > (_maxOutbound - _availableOutbound))     want=_maxOutbound - _availableOutbound;
    if (_log.shouldLog(Log.DEBUG))     _log.debug("want to pull " + want + " from the outbound burst ("+ _unavailableOutboundBurst+ ") to supplement "+ _availableOutbound+ " (max: "+ _maxOutbound+ ")");
    if (want > 0) {
      if (want <= _unavailableOutboundBurst) {
        _availableOutbound+=want;
        _unavailableOutboundBurst-=want;
      }
 else {
        _availableOutbound+=_unavailableOutboundBurst;
        _unavailableOutboundBurst=0;
      }
    }
  }
  satisfyRequests();
  updateStats();
}
