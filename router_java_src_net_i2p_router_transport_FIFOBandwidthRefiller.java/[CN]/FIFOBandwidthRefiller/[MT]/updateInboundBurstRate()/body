{
  String inBwStr=_context.getProperty(PROP_INBOUND_BURST_BANDWIDTH);
  if ((inBwStr != null) && (inBwStr.trim().length() > 0) && (!(inBwStr.equals(String.valueOf(_inboundBurstKBytesPerSecond))))) {
    try {
      int in=Integer.parseInt(inBwStr);
      if ((in <= 0) || (in > MIN_INBOUND_BANDWIDTH))       _inboundBurstKBytesPerSecond=in;
 else       _inboundBurstKBytesPerSecond=MIN_INBOUND_BANDWIDTH;
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Updating inbound burst rate to " + _inboundBurstKBytesPerSecond);
    }
 catch (    NumberFormatException nfe) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Invalid inbound bandwidth burst limit [" + inBwStr + "], keeping as "+ _inboundBurstKBytesPerSecond);
    }
  }
 else {
    if ((inBwStr == null) && (_log.shouldLog(Log.DEBUG)))     _log.debug("Inbound bandwidth burst limits not specified in the config via " + PROP_INBOUND_BURST_BANDWIDTH);
  }
  if (_inboundBurstKBytesPerSecond <= 0)   _inboundBurstKBytesPerSecond=DEFAULT_INBOUND_BURST_BANDWIDTH;
  _limiter.setInboundBurstKBps(_inboundBurstKBytesPerSecond);
}
