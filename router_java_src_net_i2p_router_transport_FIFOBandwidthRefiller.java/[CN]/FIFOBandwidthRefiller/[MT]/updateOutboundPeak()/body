{
  String inBwStr=_context.getProperty(PROP_OUTBOUND_BANDWIDTH_PEAK);
  if ((inBwStr != null) && (inBwStr.trim().length() > 0) && (!(inBwStr.equals(String.valueOf(_limiter.getOutboundBurstBytes()))))) {
    try {
      int in=Integer.parseInt(inBwStr);
      if (in >= MIN_OUTBOUND_BANDWIDTH_PEAK) {
        if (in < _outboundBurstKBytesPerSecond)         _limiter.setOutboundBurstBytes(_outboundBurstKBytesPerSecond * 1024);
 else         _limiter.setOutboundBurstBytes(in * 1024);
      }
 else {
        if (MIN_OUTBOUND_BANDWIDTH_PEAK < _outboundBurstKBytesPerSecond)         _limiter.setOutboundBurstBytes(_outboundBurstKBytesPerSecond * 1024);
 else         _limiter.setOutboundBurstBytes(MIN_OUTBOUND_BANDWIDTH_PEAK * 1024);
      }
    }
 catch (    NumberFormatException nfe) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Invalid outbound bandwidth burst limit [" + inBwStr + "]");
      _limiter.setOutboundBurstBytes(DEFAULT_BURST_SECONDS * _outboundBurstKBytesPerSecond * 1024);
    }
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Outbound bandwidth burst limits not specified in the config via " + PROP_OUTBOUND_BANDWIDTH_PEAK);
    _limiter.setOutboundBurstBytes(DEFAULT_BURST_SECONDS * _outboundBurstKBytesPerSecond * 1024);
  }
}
