{
  long numMs=(now - _lastRefillTime);
  if (_log.shouldLog(Log.INFO))   _log.info("Updating bandwidth after " + numMs + " (available in="+ _limiter.getAvailableInboundBytes()+ ", out="+ _limiter.getAvailableOutboundBytes()+ ", rate in="+ _inboundKBytesPerSecond+ ", out="+ _outboundKBytesPerSecond+ ")");
  if (numMs >= 1000) {
    long inboundToAdd=1024 * _inboundKBytesPerSecond * (numMs / 1000);
    long outboundToAdd=1024 * _outboundKBytesPerSecond * (numMs / 1000);
    if (inboundToAdd < 0)     inboundToAdd=0;
    if (outboundToAdd < 0)     outboundToAdd=0;
    if (_inboundKBytesPerSecond <= 0) {
      _limiter.setInboundUnlimited(true);
      inboundToAdd=0;
    }
 else {
      _limiter.setInboundUnlimited(false);
    }
    if (_outboundKBytesPerSecond <= 0) {
      _limiter.setOutboundUnlimited(true);
      outboundToAdd=0;
    }
 else {
      _limiter.setOutboundUnlimited(false);
    }
    _limiter.refillBandwidthQueues(inboundToAdd,outboundToAdd);
    if (_log.shouldLog(Log.DEBUG)) {
      _log.debug("Adding " + inboundToAdd + " bytes to inboundAvailable");
      _log.debug("Adding " + outboundToAdd + " bytes to outboundAvailable");
    }
    return true;
  }
 else {
    if (_log.shouldLog(Log.WARN))     _log.warn("Refresh delay too fast (" + numMs + ")");
    return false;
  }
}
