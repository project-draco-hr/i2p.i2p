{
  if (_lock.getAndSet(true))   return;
  try {
    if (((++_lookupRunCount) % CLEAR) == 0)     _notFound.clear();
    Long[] search=_pendingSearch.toArray(new Long[_pendingSearch.size()]);
    _pendingSearch.clear();
    if (search.length > 0) {
      Arrays.sort(search);
      File f=new File(_context.getProperty(PROP_DEBIAN_GEOIP,DEBIAN_GEOIP_FILE));
      if (ENABLE_DEBIAN && f.exists()) {
        LookupService ls=null;
        try {
          ls=new LookupService(f,LookupService.GEOIP_STANDARD);
          for (int i=0; i < search.length; i++) {
            long ip=search[i].longValue();
            String uc=ls.getCountry(ip).getCode();
            if (!uc.equals(UNKNOWN_COUNTRY_CODE)) {
              String cached=_codeCache.get(uc.toLowerCase(Locale.US));
              _IPToCountry.put(search[i],cached);
            }
 else {
              _notFound.add(search[i]);
            }
          }
        }
 catch (        IOException ioe) {
          _log.error("GeoIP failure",ioe);
        }
catch (        InvalidDatabaseException ide) {
          _log.error("GeoIP failure",ide);
        }
 finally {
          if (ls != null)           ls.close();
        }
      }
 else {
        String[] countries=readGeoIPFile(search);
        for (int i=0; i < countries.length; i++) {
          if (countries[i] != null)           _IPToCountry.put(search[i],countries[i]);
 else           _notFound.add(search[i]);
        }
      }
    }
    search=_pendingIPv6Search.toArray(new Long[_pendingIPv6Search.size()]);
    _pendingIPv6Search.clear();
    if (search.length > 0) {
      Arrays.sort(search);
      File f=new File(_context.getProperty(PROP_DEBIAN_GEOIPV6,DEBIAN_GEOIPV6_FILE));
      if (ENABLE_DEBIAN && f.exists()) {
        LookupService ls=null;
        try {
          ls=new LookupService(f,LookupService.GEOIP_STANDARD);
          for (int i=0; i < search.length; i++) {
            long ip=search[i].longValue();
            String ipv6=toV6(ip);
            String uc=ls.getCountryV6(ipv6).getCode();
            if (!uc.equals(UNKNOWN_COUNTRY_CODE)) {
              String cached=_codeCache.get(uc.toLowerCase(Locale.US));
              _IPToCountry.put(search[i],cached);
            }
 else {
              _notFound.add(search[i]);
            }
          }
        }
 catch (        IOException ioe) {
          _log.error("GeoIP failure",ioe);
        }
catch (        InvalidDatabaseException ide) {
          _log.error("GeoIP failure",ide);
        }
 finally {
          if (ls != null)           ls.close();
        }
      }
 else {
        String[] countries=GeoIPv6.readGeoIPFile(_context,search,_codeCache);
        for (int i=0; i < countries.length; i++) {
          if (countries[i] != null)           _IPToCountry.put(search[i],countries[i]);
 else           _notFound.add(search[i]);
        }
      }
    }
  }
  finally {
    _lock.set(false);
  }
}
