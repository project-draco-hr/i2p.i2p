{
  File GeoFile=new File(_context.getBaseDir(),GEOIP_DIR_DEFAULT);
  GeoFile=new File(GeoFile,GEOIP_FILE_DEFAULT);
  if (!GeoFile.exists()) {
    if (_log.shouldLog(Log.WARN))     _log.warn("GeoIP file not found: " + GeoFile.getAbsolutePath());
    return new String[0];
  }
  String[] rv=new String[search.length];
  int idx=0;
  long start=_context.clock().now();
  FileInputStream in=null;
  try {
    in=new FileInputStream(GeoFile);
    String buf=null;
    BufferedReader br=new BufferedReader(new InputStreamReader(in,"ISO-8859-1"));
    while ((buf=br.readLine()) != null && idx < search.length) {
      try {
        if (buf.charAt(0) == '#') {
          continue;
        }
        String[] s=buf.split(",");
        long ip1=Long.parseLong(s[0]);
        long ip2=Long.parseLong(s[1]);
        while (idx < search.length && search[idx].longValue() < ip1) {
          idx++;
        }
        while (idx < search.length && search[idx].longValue() >= ip1 && search[idx].longValue() <= ip2) {
          String lc=s[2].toLowerCase(Locale.US);
          String cached=_codeCache.get(lc);
          if (cached == null)           cached=lc;
          rv[idx++]=cached;
        }
      }
 catch (      IndexOutOfBoundsException ioobe) {
      }
catch (      NumberFormatException nfe) {
      }
    }
  }
 catch (  IOException ioe) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Error reading the GeoFile",ioe);
  }
 finally {
    if (in != null)     try {
      in.close();
    }
 catch (    IOException ioe) {
    }
  }
  if (_log.shouldLog(Log.INFO)) {
    _log.info("GeoIP processing finished, time: " + (_context.clock().now() - start));
  }
  return rv;
}
