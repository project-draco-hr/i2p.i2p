{
  List removed=removeMessages();
  RouterContext ctx=OutboundMessageRegistry.this._context;
  for (int i=0; i < removed.size(); i++) {
    OutNetMessage msg=(OutNetMessage)removed.get(i);
    if (msg != null) {
      ctx.messageHistory().replyTimedOut(msg);
      Job fail=msg.getOnFailedReplyJob();
      if (fail != null) {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Removing message with selector " + msg.getReplySelector() + ": "+ msg.getMessageType()+ " and firing fail job: "+ fail.getClass().getName());
        ctx.jobQueue().addJob(fail);
      }
 else {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Removing message with selector " + msg.getReplySelector() + " and not firing any job");
      }
    }
  }
  requeue(CLEANUP_DELAY);
}
