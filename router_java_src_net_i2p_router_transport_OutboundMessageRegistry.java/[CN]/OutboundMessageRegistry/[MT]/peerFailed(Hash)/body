{
  List failed=null;
  int numFailed=0;
synchronized (_pendingMessages) {
    for (Iterator iter=_pendingMessages.values().iterator(); iter.hasNext(); ) {
      OutNetMessage msg=(OutNetMessage)iter.next();
      if (msg.getTarget() != null) {
        Hash to=msg.getTarget().getIdentity().calculateHash();
        if (to.equals(peer)) {
          if (failed == null)           failed=new ArrayList(4);
          failed.add(msg);
          iter.remove();
          numFailed++;
        }
 else {
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Peer failed: " + peer.toBase64().substring(0,6) + " but not killing a message to "+ to.toBase64().substring(0,6));
        }
      }
    }
  }
  if (failed != null) {
    for (int i=0; i < failed.size(); i++) {
      OutNetMessage msg=(OutNetMessage)failed.get(i);
      msg.discardData();
      if (msg.getOnFailedSendJob() != null)       _context.jobQueue().addJob(msg.getOnFailedSendJob());
    }
  }
  if (_log.shouldLog(Log.WARN))   _log.warn("Peer failed: " + peer.toBase64().substring(0,6) + " killing "+ numFailed);
}
