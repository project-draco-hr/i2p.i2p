{
  _context=context;
  _log=_context.logManager().getLog(TransportImpl.class);
  _context.statManager().createRateStat("transport.sendMessageFailureLifetime","How long the lifetime of messages that fail are?","Transport",new long[]{60 * 1000l,10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRequiredRateStat("transport.sendMessageSize","Size of sent messages (bytes)","Transport",new long[]{60 * 1000l,5 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRequiredRateStat("transport.receiveMessageSize","Size of received messages (bytes)","Transport",new long[]{60 * 1000l,5 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("transport.receiveMessageTime","How long it takes to read a message?","Transport",new long[]{60 * 1000l,5 * 60 * 1000l,10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("transport.receiveMessageTimeSlow","How long it takes to read a message (when it takes more than a second)?","Transport",new long[]{60 * 1000l,5 * 60 * 1000l,10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRequiredRateStat("transport.sendProcessingTime","Time to process and send a message (ms)","Transport",new long[]{60 * 1000l,10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("transport.expiredOnQueueLifetime","How long a message that expires on our outbound queue is processed","Transport",new long[]{60 * 1000l,10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _sendPool=new ArrayList(16);
  _unreachableEntries=new HashMap(16);
  _wasUnreachableEntries=new ConcurrentHashSet(16);
  _currentAddress=null;
  SimpleScheduler.getInstance().addPeriodicEvent(new CleanupUnreachable(),2 * UNREACHABLE_PERIOD,UNREACHABLE_PERIOD / 2);
}
