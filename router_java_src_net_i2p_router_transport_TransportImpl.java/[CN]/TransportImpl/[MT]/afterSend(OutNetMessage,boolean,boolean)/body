{
  boolean log=false;
  msg.timestamp("afterSend(" + sendSuccessful + ")");
  if (!sendSuccessful)   msg.transportFailed(getStyle());
  long lifetime=msg.getLifetime();
  if (lifetime > 5000) {
    if (_log.shouldLog(Log.WARN))     _log.warn("afterSend: [success=" + sendSuccessful + "]\n"+ msg.toString());
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info("afterSend: [success=" + sendSuccessful + "]\n"+ msg.toString());
  }
  if (sendSuccessful) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Send message " + msg.getMessageType() + " to "+ msg.getTarget().getIdentity().getHash().toBase64()+ " with transport "+ getStyle()+ " successfully");
    Job j=msg.getOnSendJob();
    if (j != null)     _context.jobQueue().addJob(j);
    log=true;
    msg.discardData();
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info("Failed to send message " + msg.getMessageType() + " to "+ msg.getTarget().getIdentity().getHash().toBase64()+ " with transport "+ getStyle()+ " (details: "+ msg+ ")");
    if (msg.getExpiration() < _context.clock().now())     _context.statManager().addRateData("transport.expiredOnQueueLifetime",lifetime,lifetime);
    if (allowRequeue) {
      if ((msg.getExpiration() <= 0) || (msg.getExpiration() > _context.clock().now())) {
        _context.outNetMessagePool().add(msg);
      }
 else {
        if (_log.shouldLog(Log.INFO))         _log.info("No more time left (" + new Date(msg.getExpiration()) + ", expiring without sending successfully the "+ msg.getMessageType());
        if (msg.getOnFailedSendJob() != null)         _context.jobQueue().addJob(msg.getOnFailedSendJob());
        MessageSelector selector=msg.getReplySelector();
        if (selector != null) {
          _context.messageRegistry().unregisterPending(msg);
        }
        log=true;
        msg.discardData();
      }
    }
 else {
      if (_log.shouldLog(Log.INFO))       _log.info("Failed and no requeue allowed for a " + msg.getMessageSize() + " byte "+ msg.getMessageType()+ " message");
      if (msg.getOnFailedSendJob() != null)       _context.jobQueue().addJob(msg.getOnFailedSendJob());
      MessageSelector selector=msg.getReplySelector();
      if (selector != null)       _context.messageRegistry().unregisterPending(msg);
      log=true;
      msg.discardData();
    }
  }
  if (log) {
    String type=msg.getMessageType();
    _context.messageHistory().sendMessage(type,msg.getMessageId(),new Date(msg.getExpiration()),msg.getTarget().getIdentity().getHash(),sendSuccessful);
  }
  long now=_context.clock().now();
  long sendTime=now - msg.getSendBegin();
  long allTime=now - msg.getCreated();
  if (allTime > 5 * 1000) {
    if (_log.shouldLog(Log.INFO))     _log.info("Took too long from preperation to afterSend(ok? " + sendSuccessful + "): "+ allTime+ "ms "+ " after failing on: "+ msg.getFailedTransports()+ " and succeeding on "+ getStyle());
    if (allTime > 60 * 1000) {
      if (_log.shouldLog(Log.WARN))       _log.warn("WTF, more than a minute slow? " + msg.getMessageType() + " of id "+ msg.getMessageId()+ " (send begin on "+ new Date(msg.getSendBegin())+ " / created on "+ new Date(msg.getCreated())+ "): "+ msg,msg.getCreatedBy());
      _context.messageHistory().messageProcessingError(msg.getMessageId(),msg.getMessageType(),"Took too long to send [" + allTime + "ms]");
    }
  }
  _context.statManager().addRateData("transport.sendProcessingTime",msg.getLifetime(),msg.getLifetime());
  if (sendSuccessful) {
    _context.profileManager().messageSent(msg.getTarget().getIdentity().getHash(),getStyle(),sendTime,msg.getMessageSize());
    _context.statManager().addRateData("transport.sendMessageSize",msg.getMessageSize(),sendTime);
  }
 else {
    _context.profileManager().messageFailed(msg.getTarget().getIdentity().getHash(),getStyle());
    _context.statManager().addRateData("transport.sendMessageFailureLifetime",lifetime,lifetime);
  }
}
