{
  if (msg == null)   throw new IllegalArgumentException("Null message?  no bidding on a null outNetMessage!");
  if (Router.getInstance().getRouterInfo().equals(msg.getTarget()))   throw new IllegalArgumentException("WTF, bids for a message bound to ourselves?");
  HashSet bids=new HashSet();
  Set addrs=msg.getTarget().getAddresses();
  Set failedTransports=msg.getFailedTransports();
  for (int i=0; i < _transports.size(); i++) {
    Transport t=(Transport)_transports.get(i);
    if (failedTransports.contains(t.getStyle())) {
      _log.debug("Skipping transport " + t.getStyle() + " as it already failed");
      continue;
    }
    if (true || isSupported(addrs,t)) {
      TransportBid bid=t.bid(msg.getTarget(),msg.getMessageSize());
      if (bid != null) {
        bids.add(bid);
        _log.debug("Transport " + t.getStyle() + " bid: "+ bid);
      }
 else {
        _log.debug("Transport " + t.getStyle() + " did not produce a bid");
      }
    }
  }
  List ordered=orderBids(bids,msg);
  long delay=Clock.getInstance().now() - msg.getCreated();
  if (ordered.size() > 0) {
    _log.debug("Winning bid: " + ((TransportBid)ordered.get(0)).getTransport().getStyle());
    if (delay > 5 * 1000) {
      _log.info("Took too long to find this bid (" + delay + "ms)");
    }
 else {
      _log.debug("Took a while to find this bid (" + delay + "ms)");
    }
  }
 else {
    _log.info("NO WINNING BIDS!  peer: " + msg.getTarget());
    if (delay > 5 * 1000) {
      _log.info("Took too long to fail (" + delay + "ms)");
    }
 else {
      _log.debug("Took a while to fail (" + delay + "ms)");
    }
  }
  return ordered;
}
