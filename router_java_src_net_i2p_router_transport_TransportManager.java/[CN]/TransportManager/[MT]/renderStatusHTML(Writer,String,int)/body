{
  if (_context.getBooleanProperty(PROP_ADVANCED)) {
    out.write("<p><b>");
    out.write(_t("Status"));
    out.write(": ");
    out.write(_t(getReachabilityStatus().toStatusString()));
    out.write("</b></p>");
  }
  TreeMap<String,Transport> transports=new TreeMap<String,Transport>();
  for (  Transport t : _transports.values()) {
    transports.put(t.getStyle(),t);
  }
  for (  Transport t : transports.values()) {
    t.renderStatusHTML(out,urlBase,sortFlags);
  }
  if (!_transports.isEmpty()) {
    out.write(getTransportsLegend());
  }
  StringBuilder buf=new StringBuilder(4 * 1024);
  buf.append("<h3>").append(_t("Router Transport Addresses")).append("</h3><pre>\n");
  for (  Transport t : _transports.values()) {
    if (t.hasCurrentAddress()) {
      for (      RouterAddress ra : t.getCurrentAddresses()) {
        buf.append(ra.toString());
        buf.append("\n\n");
      }
    }
 else {
      buf.append(_t("{0} is used for outbound connections only",t.getStyle()));
      buf.append("\n\n");
    }
  }
  buf.append("</pre>\n");
  out.write(buf.toString());
  if (SystemVersion.isAndroid()) {
  }
 else   if (_upnpManager != null) {
    out.write(_upnpManager.renderStatusHTML());
  }
 else {
    out.write("<h3><a name=\"upnp\"></a>" + _t("UPnP is not enabled") + "</h3>\n");
  }
  out.write("</p>\n");
  out.flush();
}
