{
  if (isDisabled || !isNATPresent() || _router == null) {
    _log.error("Can't addMapping: " + isDisabled + " "+ isNATPresent()+ " "+ _router);
    return false;
  }
  Action add=_service.getAction("AddPortMapping");
  if (add == null) {
    _log.error("Couldn't find AddPortMapping action!");
    return false;
  }
  add.setArgumentValue("NewRemoteHost","");
  add.setArgumentValue("NewExternalPort",port);
  String intf=_router.getInterfaceAddress();
  String us=getOurAddress(intf);
  if (_log.shouldLog(Log.WARN) && !us.equals(intf))   _log.warn("Requesting port forward to " + us + ':'+ port+ " when cybergarage wanted "+ intf);
  add.setArgumentValue("NewInternalClient",us);
  add.setArgumentValue("NewInternalPort",port);
  add.setArgumentValue("NewProtocol",protocol);
  add.setArgumentValue("NewPortMappingDescription",description);
  add.setArgumentValue("NewEnabled","1");
  add.setArgumentValue("NewLeaseDuration",0);
  boolean rv=add.postControlAction();
  if (rv) {
synchronized (lock) {
      portsForwarded.add(fp);
    }
  }
  int level=rv ? Log.INFO : Log.WARN;
  if (_log.shouldLog(level)) {
    StringBuilder buf=new StringBuilder();
    buf.append("AddPortMapping result for ").append(protocol).append(" port ").append(port);
    UPnPStatus status=add.getStatus();
    if (status != null)     buf.append(" Status: ").append(status.getCode()).append(' ').append(status.getDescription());
    status=add.getControlStatus();
    if (status != null)     buf.append(" ControlStatus: ").append(status.getCode()).append(' ').append(status.getDescription());
    _log.log(level,buf.toString());
  }
  return rv;
}
