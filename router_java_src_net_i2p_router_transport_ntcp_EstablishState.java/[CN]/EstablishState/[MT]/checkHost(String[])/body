{
  if (args.length != 3) {
    System.err.println("Usage: EstablishState ipOrHostname portNum peerHashBase64");
    return;
  }
  try {
    I2PAppContext ctx=I2PAppContext.getGlobalContext();
    String host=args[0];
    int port=Integer.parseInt(args[1]);
    byte peer[]=Base64.decode(args[2]);
    Socket s=new Socket(host,port);
    OutputStream out=s.getOutputStream();
    byte toSend[]=new byte[256];
    ctx.random().nextBytes(toSend);
    int off=32;
    byte ip[]=s.getInetAddress().getAddress();
    DataHelper.toLong(toSend,off,1,ip.length);
    off++;
    System.arraycopy(ip,0,toSend,off,ip.length);
    off+=ip.length;
    DataHelper.toLong(toSend,off,2,port);
    off+=2;
    long now=ctx.clock().now() / 1000;
    DataHelper.toLong(toSend,off,4,now);
    off+=4;
    Hash h=ctx.sha().calculateHash(toSend,32,toSend.length - 32 - 32);
    DataHelper.xor(peer,0,h.getData(),0,toSend,toSend.length - 32,peer.length);
    System.out.println("check hash: " + h.toBase64());
    out.write(toSend);
    out.flush();
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException ie) {
    }
    s.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
