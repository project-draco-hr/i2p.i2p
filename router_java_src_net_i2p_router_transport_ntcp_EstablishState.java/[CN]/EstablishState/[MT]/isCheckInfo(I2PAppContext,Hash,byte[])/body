{
  Log log=ctx.logManager().getLog(EstablishState.class);
  int off=32;
  Hash h=ctx.sha().calculateHash(first256,off,first256.length - 32 - off);
  byte xor[]=DataHelper.xor(h.getData(),us.getData());
  if (log.shouldLog(Log.DEBUG))   log.debug("check hash: " + h.toBase64() + " xor: "+ Base64.encode(xor));
  if (DataHelper.eq(xor,0,first256,first256.length - 32,32)) {
    int ipSize=(int)DataHelper.fromLong(first256,off,1);
    off++;
    byte ip[]=new byte[ipSize];
    System.arraycopy(first256,off,ip,0,ipSize);
    try {
      InetAddress ourIP=InetAddress.getByAddress(ip);
      off+=ipSize;
      int port=(int)DataHelper.fromLong(first256,off,2);
      off+=2;
      long now=DataHelper.fromLong(first256,off,4);
      off+=4;
      long skewSeconds=(ctx.clock().now() / 1000) - now;
      if (log.shouldLog(Log.INFO))       log.info("Check info received: our IP: " + ourIP + " our port: "+ port+ " skew: "+ skewSeconds);
    }
 catch (    UnknownHostException uhe) {
      if (log.shouldLog(Log.WARN))       log.warn("Invalid IP received on check connection (size: " + ipSize + ")");
    }
    return true;
  }
 else {
    if (log.shouldLog(Log.DEBUG))     log.debug("Not a checkInfo connection");
    return false;
  }
}
