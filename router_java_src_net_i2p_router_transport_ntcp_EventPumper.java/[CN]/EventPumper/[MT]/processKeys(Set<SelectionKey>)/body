{
  for (  SelectionKey key : selected) {
    try {
      int ops=key.readyOps();
      boolean accept=(ops & SelectionKey.OP_ACCEPT) != 0;
      boolean connect=(ops & SelectionKey.OP_CONNECT) != 0;
      boolean read=(ops & SelectionKey.OP_READ) != 0;
      boolean write=(ops & SelectionKey.OP_WRITE) != 0;
      if (_log.shouldLog(Log.DEBUG))       _log.debug("ready ops for : " + key + " accept? "+ accept+ " connect? "+ connect+ " read? "+ read+ "/"+ ((key.interestOps() & SelectionKey.OP_READ) != 0)+ " write? "+ write+ "/"+ ((key.interestOps() & SelectionKey.OP_WRITE) != 0)+ " on "+ key.attachment());
      if (accept) {
        _context.statManager().addRateData("ntcp.accept",1,0);
        processAccept(key);
      }
      if (connect) {
        key.interestOps(key.interestOps() & ~SelectionKey.OP_CONNECT);
        processConnect(key);
      }
      if (read) {
        _context.statManager().addRateData("ntcp.read",1,0);
        key.interestOps(key.interestOps() & ~SelectionKey.OP_READ);
        processRead(key);
      }
      if (write) {
        _context.statManager().addRateData("ntcp.write",1,0);
        key.interestOps(key.interestOps() & ~SelectionKey.OP_WRITE);
        processWrite(key);
      }
    }
 catch (    CancelledKeyException cke) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("key cancelled");
    }
  }
}
