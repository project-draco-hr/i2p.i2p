{
  int totalWritten=0;
  int buffers=0;
  long before=System.currentTimeMillis();
  NTCPConnection con=(NTCPConnection)key.attachment();
  try {
    while (true) {
      ByteBuffer buf=con.getNextWriteBuf();
      if ((buf != null) && (buf.remaining() > 0)) {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("writing " + buf.remaining() + "...");
        int written=con.getChannel().write(buf);
        totalWritten+=written;
        if (written == 0) {
          if ((buf.remaining() > 0) || (con.getWriteBufCount() > 1)) {
            if (_log.shouldLog(Log.DEBUG))             _log.debug("done writing, but data remains...");
            key.interestOps(key.interestOps() | SelectionKey.OP_WRITE);
          }
 else {
            if (_log.shouldLog(Log.DEBUG))             _log.debug("done writing, no data remains...");
          }
          break;
        }
 else         if (buf.remaining() > 0) {
          if (_log.shouldLog(Log.DEBUG))           _log.debug("buffer data remaining...");
          key.interestOps(key.interestOps() | SelectionKey.OP_WRITE);
          break;
        }
 else {
          long beforeRem=System.currentTimeMillis();
          con.removeWriteBuf(buf);
          long afterRem=System.currentTimeMillis();
          if (_log.shouldLog(Log.DEBUG))           _log.debug("buffer " + buffers + "/"+ written+ "/"+ totalWritten+ " fully written after "+ (beforeRem - before)+ ", then removed after "+ (afterRem - beforeRem)+ "...");
          buf=null;
          buffers++;
        }
      }
 else {
        break;
      }
    }
  }
 catch (  IOException ioe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("error writing",ioe);
    con.close();
  }
  long after=System.currentTimeMillis();
  if (_log.shouldLog(Log.INFO))   _log.info("Wrote " + totalWritten + " in "+ buffers+ " buffers on "+ con+ " after "+ (after - before));
}
