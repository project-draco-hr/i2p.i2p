{
  long ourTs=_context.clock().now() / 1000;
  long ts=DataHelper.fromLong(unencrypted,2,4);
  Adler32 crc=new Adler32();
  crc.update(unencrypted,0,unencrypted.length - 4);
  long expected=crc.getValue();
  long read=DataHelper.fromLong(unencrypted,unencrypted.length - 4,4);
  if (read != expected) {
    if (_log.shouldLog(Log.WARN))     _log.warn("I2NP metadata message had a bad CRC value");
    _context.statManager().addRateData("ntcp.corruptMetaCRC",1,getUptime());
    close();
    return;
  }
 else {
    long newSkew=(ourTs - ts);
    if (Math.abs(newSkew * 1000) > Router.CLOCK_FUDGE_FACTOR) {
      if (_log.shouldLog(Log.ERROR))       _log.error("Peer's skew jumped too far (from " + _clockSkew + " s to "+ newSkew+ " s): "+ toString());
      _context.statManager().addRateData("ntcp.corruptSkew",newSkew,getUptime());
      close();
      return;
    }
    _context.statManager().addRateData("ntcp.receiveMeta",newSkew,getUptime());
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Received NTCP metadata, old skew of " + _clockSkew + " s, new skew of "+ newSkew+ "s.");
    _clockSkew=newSkew;
  }
}
