{
  if (myAddress != null) {
    InetAddress bindToAddr=null;
    String bindTo=_context.getProperty(PROP_BIND_INTERFACE);
    if (bindTo == null) {
      boolean isFixed=_context.getProperty(PROP_I2NP_NTCP_AUTO_IP,"true").toLowerCase(Locale.US).equals("false");
      String fixedHost=_context.getProperty(PROP_I2NP_NTCP_HOSTNAME);
      if (isFixed && fixedHost != null) {
        try {
          String testAddr=InetAddress.getByName(fixedHost).getHostAddress();
          if (Addresses.getAddresses().contains(testAddr))           bindTo=testAddr;
        }
 catch (        UnknownHostException uhe) {
        }
      }
    }
    if (bindTo != null) {
      try {
        bindToAddr=InetAddress.getByName(bindTo);
      }
 catch (      UnknownHostException uhe) {
        _log.log(Log.CRIT,"Invalid NTCP bind interface specified [" + bindTo + "]",uhe);
        return null;
      }
    }
    try {
      ServerSocketChannel chan=ServerSocketChannel.open();
      chan.configureBlocking(false);
      int port=myAddress.getPort();
      if (port > 0 && port < 1024)       _log.logAlways(Log.WARN,"Specified NTCP port is " + port + ", ports lower than 1024 not recommended");
      InetSocketAddress addr=null;
      if (bindToAddr == null) {
        addr=new InetSocketAddress(port);
      }
 else {
        addr=new InetSocketAddress(bindToAddr,port);
        if (_log.shouldLog(Log.WARN))         _log.warn("Binding only to " + bindToAddr);
      }
      chan.socket().bind(addr);
      if (_log.shouldLog(Log.INFO))       _log.info("Listening on " + addr);
      _pumper.register(chan);
    }
 catch (    IOException ioe) {
      _log.error("Error listening",ioe);
    }
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info("Outbound NTCP connections only - no listener configured");
  }
  if (myAddress != null) {
    replaceAddress(myAddress);
    return myAddress;
  }
 else {
    return null;
  }
}
