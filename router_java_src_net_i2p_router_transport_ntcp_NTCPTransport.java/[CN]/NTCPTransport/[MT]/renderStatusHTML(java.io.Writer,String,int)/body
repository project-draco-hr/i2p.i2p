{
  TreeSet<NTCPConnection> peers=new TreeSet<NTCPConnection>(getComparator(sortFlags));
  peers.addAll(_conByIdent.values());
  long offsetTotal=0;
  float bpsSend=0;
  float bpsRecv=0;
  long totalUptime=0;
  long totalSend=0;
  long totalRecv=0;
  if (!_context.getBooleanProperty(PROP_ADVANCED)) {
    for (Iterator<NTCPConnection> iter=peers.iterator(); iter.hasNext(); ) {
      if (!iter.next().isEstablished())       iter.remove();
    }
  }
  StringBuilder buf=new StringBuilder(512);
  buf.append("<h3 id=\"ntcpcon\">").append(_("NTCP connections")).append(": ").append(peers.size());
  buf.append(". ").append(_("Limit")).append(": ").append(getMaxConnections());
  buf.append(". ").append(_("Timeout")).append(": ").append(DataHelper.formatDuration2(_pumper.getIdleTimeout()));
  buf.append(". ").append(_("Status")).append(": ").append(_(getReachabilityStatus().toStatusString()));
  buf.append(".</h3>\n" + "<table>\n" + "<tr><th><a href=\"#def.peer\">").append(_("Peer")).append("</a></th>" + "<th>").append(_("Dir")).append("</th>" + "<th>").append(_("IPv6")).append("</th>" + "<th align=\"right\"><a href=\"#def.idle\">").append(_("Idle")).append("</a></th>" + "<th align=\"right\"><a href=\"#def.rate\">").append(_("In/Out")).append("</a></th>" + "<th align=\"right\"><a href=\"#def.up\">").append(_("Up")).append("</a></th>" + "<th align=\"right\"><a href=\"#def.skew\">").append(_("Skew")).append("</a></th>" + "<th align=\"right\"><a href=\"#def.send\">").append(_("TX")).append("</a></th>" + "<th align=\"right\"><a href=\"#def.recv\">").append(_("RX")).append("</a></th>" + "<th>").append(_("Out Queue")).append("</th>" + "<th>").append(_("Backlogged?")).append("</th>" + " </tr>\n");
  out.write(buf.toString());
  buf.setLength(0);
  for (  NTCPConnection con : peers) {
    buf.append("<tr><td class=\"cells\" align=\"left\" nowrap>");
    buf.append(_context.commSystem().renderPeerHTML(con.getRemotePeer().calculateHash()));
    buf.append("</td><td class=\"cells\" align=\"center\">");
    if (con.isInbound())     buf.append("<img src=\"/themes/console/images/inbound.png\" alt=\"Inbound\" title=\"").append(_("Inbound")).append("\"/>");
 else     buf.append("<img src=\"/themes/console/images/outbound.png\" alt=\"Outbound\" title=\"").append(_("Outbound")).append("\"/>");
    buf.append("</td><td class=\"cells\" align=\"center\">");
    if (con.isIPv6())     buf.append("&#x2713;");
 else     buf.append("&nbsp;");
    buf.append("</td><td class=\"cells\" align=\"right\">");
    buf.append(DataHelper.formatDuration2(con.getTimeSinceReceive()));
    buf.append(THINSP).append(DataHelper.formatDuration2(con.getTimeSinceSend()));
    buf.append("</td><td class=\"cells\" align=\"right\">");
    if (con.getTimeSinceReceive() < 2 * 60 * 1000) {
      float r=con.getRecvRate();
      buf.append(formatRate(r / 1024));
      bpsRecv+=r;
    }
 else {
      buf.append(formatRate(0));
    }
    buf.append(THINSP);
    if (con.getTimeSinceSend() < 2 * 60 * 1000) {
      float r=con.getSendRate();
      buf.append(formatRate(r / 1024));
      bpsSend+=r;
    }
 else {
      buf.append(formatRate(0));
    }
    buf.append("</td><td class=\"cells\" align=\"right\">").append(DataHelper.formatDuration2(con.getUptime()));
    totalUptime+=con.getUptime();
    offsetTotal=offsetTotal + con.getClockSkew();
    buf.append("</td><td class=\"cells\" align=\"right\">").append(DataHelper.formatDuration2(1000 * con.getClockSkew()));
    buf.append("</td><td class=\"cells\" align=\"right\">").append(con.getMessagesSent());
    totalSend+=con.getMessagesSent();
    buf.append("</td><td class=\"cells\" align=\"right\">").append(con.getMessagesReceived());
    totalRecv+=con.getMessagesReceived();
    long outQueue=con.getOutboundQueueSize();
    buf.append("</td><td class=\"cells\" align=\"center\">").append(outQueue);
    buf.append("</td><td class=\"cells\" align=\"center\">");
    if (con.isBacklogged())     buf.append("&#x2713;");
 else     buf.append("&nbsp;");
    buf.append("</td></tr>\n");
    out.write(buf.toString());
    buf.setLength(0);
  }
  if (!peers.isEmpty()) {
    buf.append("<tr class=\"tablefooter\"><td colspan=\"4\" align=\"left\"><b>").append(ngettext("{0} peer","{0} peers",peers.size()));
    buf.append("</b></td><td align=\"center\"><b>").append(formatRate(bpsRecv / 1024)).append(THINSP).append(formatRate(bpsSend / 1024)).append("</b>");
    buf.append("</td><td align=\"center\"><b>").append(DataHelper.formatDuration2(totalUptime / peers.size()));
    buf.append("</b></td><td align=\"center\"><b>").append(DataHelper.formatDuration2(offsetTotal * 1000 / peers.size()));
    buf.append("</b></td><td align=\"center\"><b>").append(totalSend).append("</b></td><td align=\"center\"><b>").append(totalRecv);
    buf.append("</b></td><td>&nbsp;</td><td>&nbsp;</td></tr>\n");
  }
  buf.append("</table>\n");
  out.write(buf.toString());
  buf.setLength(0);
}
