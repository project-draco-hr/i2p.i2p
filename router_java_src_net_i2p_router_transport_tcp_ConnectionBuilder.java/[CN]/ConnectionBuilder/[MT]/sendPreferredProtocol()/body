{
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream(64);
    DataHelper.writeLong(baos,1,TCPTransport.SUPPORTED_PROTOCOLS.length);
    for (int i=0; i < TCPTransport.SUPPORTED_PROTOCOLS.length; i++) {
      DataHelper.writeLong(baos,1,TCPTransport.SUPPORTED_PROTOCOLS[i]);
    }
    if (_connectionTag != null) {
      baos.write(ConnectionHandler.FLAG_TAG_FOLLOWING);
      baos.write(_connectionTag.getData());
    }
 else {
      baos.write(ConnectionHandler.FLAG_TAG_NOT_FOLLOWING);
    }
    DataHelper.writeProperties(baos,null);
    byte line[]=baos.toByteArray();
    DataHelper.writeLong(_rawOut,2,line.length);
    _rawOut.write(line);
    _rawOut.flush();
    if (_log.shouldLog(Log.DEBUG))     _log.debug("SendProtocol[X]: tag: " + (_connectionTag != null ? Base64.encode(_connectionTag.getData()) : "none") + " socket: "+ _socket);
    return true;
  }
 catch (  IOException ioe) {
    fail("Error sending our handshake to " + _target.getIdentity().calculateHash().toBase64().substring(0,6) + ": "+ ioe.getMessage(),ioe);
    return false;
  }
catch (  DataFormatException dfe) {
    fail("Error sending our handshake to " + _target.getIdentity().calculateHash().toBase64().substring(0,6) + ": "+ dfe.getMessage(),dfe);
    return false;
  }
}
