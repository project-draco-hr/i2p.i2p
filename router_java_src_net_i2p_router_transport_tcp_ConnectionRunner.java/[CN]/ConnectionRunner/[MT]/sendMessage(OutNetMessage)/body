{
  byte buf[]=_writeBuffer;
  int written=0;
  try {
    written=msg.getMessageData(_writeBuffer);
  }
 catch (  ArrayIndexOutOfBoundsException aioobe) {
    I2NPMessage m=msg.getMessage();
    if (m != null) {
      buf=m.toByteArray();
      written=buf.length;
    }
  }
catch (  Exception e) {
    _log.log(Log.CRIT,"getting the message data",e);
    _con.closeConnection();
    return;
  }
  if (written <= 0) {
    if (_log.shouldLog(Log.WARN))     _log.warn("message " + msg.getMessageType() + "/"+ msg.getMessageId()+ " expired before it could be sent");
    msg.timestamp("ConnectionRunner.sendMessage noData");
    _con.sent(msg,false,0);
    return;
  }
  msg.timestamp("ConnectionRunner.sendMessage data");
  OutputStream out=_con.getOutputStream();
  boolean ok=false;
  long before=-1;
  long after=-1;
  try {
synchronized (out) {
      before=_context.clock().now();
      out.write(buf,0,written);
      out.flush();
      after=_context.clock().now();
    }
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Just sent message " + msg.getMessageId() + " to "+ msg.getTarget().getIdentity().getHash().toBase64().substring(0,6)+ " writeTime = "+ (after - before)+ "ms"+ " lifetime = "+ msg.getLifetime()+ "ms");
    ok=true;
  }
 catch (  IOException ioe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Error writing out the message",ioe);
    _con.closeConnection();
  }
  _con.sent(msg,ok,after - before);
}
