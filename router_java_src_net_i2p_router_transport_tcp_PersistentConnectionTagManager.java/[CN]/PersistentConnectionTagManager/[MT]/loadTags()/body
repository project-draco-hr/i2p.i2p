{
  File tagFile=getFile();
  if ((tagFile == null) || (tagFile.length() <= 31)) {
    initializeData(new HashMap(),new HashMap(),new HashMap());
    return;
  }
  FileInputStream fin=null;
  try {
    fin=new FileInputStream(tagFile);
    byte data[]=getData(tagFile,fin);
    if (data == null) {
      initializeData(new HashMap(),new HashMap(),new HashMap());
      return;
    }
    int entries=data.length / (32 * 3);
    Map keyByPeer=new HashMap(entries);
    Map tagByPeer=new HashMap(entries);
    Map peerByTag=new HashMap(entries);
    for (int i=0; i < data.length; i+=32 * 3) {
      byte peer[]=new byte[32];
      byte key[]=new byte[32];
      byte tag[]=new byte[32];
      System.arraycopy(data,i,peer,0,32);
      System.arraycopy(data,i + 32,key,0,32);
      System.arraycopy(data,i + 64,tag,0,32);
      Hash peerData=new Hash(peer);
      SessionKey keyData=new SessionKey(key);
      ByteArray tagData=new ByteArray(tag);
      keyByPeer.put(peerData,keyData);
      tagByPeer.put(peerData,tagData);
      peerByTag.put(tagData,peerData);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Loaded connection tag for " + peerData.toBase64().substring(0,6));
      if (keyByPeer.size() > ConnectionTagManager.MAX_CONNECTION_TAGS)       break;
    }
    if (_log.shouldLog(Log.INFO))     _log.info("Loaded connection tags for " + keyByPeer.size() + " peers");
    initializeData(keyByPeer,tagByPeer,peerByTag);
  }
 catch (  IOException ioe) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Connection tag file is corrupt, removing it");
    try {
      fin.close();
    }
 catch (    IOException ioe2) {
    }
    tagFile.delete();
    fin=null;
    initializeData(new HashMap(),new HashMap(),new HashMap());
    return;
  }
 finally {
    if (fin != null)     try {
      fin.close();
    }
 catch (    IOException ioe) {
    }
  }
}
