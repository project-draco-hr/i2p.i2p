{
  Date now=new Date(_context.clock().now());
  ByteArrayOutputStream baos=new ByteArrayOutputStream(8);
  DataHelper.writeDate(baos,now);
  byte encr[]=_context.AESEngine().safeEncrypt(baos.toByteArray(),_key,_iv,16);
  DataHelper.writeLong(_out,2,encr.length);
  _out.write(encr);
  int rlen=(int)DataHelper.readLong(_in,2);
  byte pencr[]=new byte[rlen];
  int read=DataHelper.read(_in,pencr);
  if (read != rlen)   throw new DataFormatException("Not enough data in peer date");
  byte decr[]=_context.AESEngine().safeDecrypt(pencr,_key,_iv);
  if (decr == null)   throw new DataFormatException("Unable to decrypt - failed date?");
  ByteArrayInputStream bais=new ByteArrayInputStream(decr);
  Date theirNow=DataHelper.readDate(bais);
  long diff=now.getTime() - theirNow.getTime();
  if ((diff > Router.CLOCK_FUDGE_FACTOR) || (diff < (0 - Router.CLOCK_FUDGE_FACTOR))) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Peer is out of time sync by " + DataHelper.formatDuration(diff) + "!  They think it is "+ theirNow+ ", we think it is "+ new Date(_context.clock().now())+ ": "+ _remoteIdentity.getHash(),new Exception("Time sync error - please make sure your clock is correct!"));
    return false;
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Peer sync difference: " + diff + "ms: "+ _remoteIdentity.getHash());
    return true;
  }
}
