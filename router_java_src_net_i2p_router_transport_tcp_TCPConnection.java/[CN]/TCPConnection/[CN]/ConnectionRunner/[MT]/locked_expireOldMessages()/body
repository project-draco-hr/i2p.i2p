{
  long now=_context.clock().now();
  List timedOut=null;
  for (int i=0; i < _toBeSent.size(); i++) {
    OutNetMessage cur=(OutNetMessage)_toBeSent.get(i);
    if (cur.getExpiration() < now) {
      if (timedOut == null)       timedOut=new ArrayList(2);
      timedOut.add(cur);
      _toBeSent.remove(i);
      i--;
    }
 else {
      long lifetime=cur.timestamp("TCPConnection.runner.locked_expireOldMessages still ok with " + (i) + " ahead and "+ (_toBeSent.size() - i - 1)+ " behind on the queue");
      if (lifetime > MAX_LIFETIME_BEFORE_OUTBOUND_EXPIRE) {
        cur.timestamp("TCPConnection.runner.locked_expireOldMessages lifetime too long - " + lifetime);
        if (timedOut == null)         timedOut=new ArrayList(2);
        timedOut.add(cur);
        _toBeSent.remove(i);
        i--;
      }
    }
  }
  boolean reallySlowFound=false;
  if (timedOut != null) {
    for (int i=0; i < timedOut.size(); i++) {
      OutNetMessage failed=(OutNetMessage)timedOut.get(i);
      if (_log.shouldLog(Log.WARN))       _log.warn("Message " + i + "/"+ timedOut.size()+ " timed out while sitting on the TCP Connection's queue!  was too slow by: "+ (now - failed.getExpiration())+ "ms to "+ _remoteIdentity.getHash().toBase64()+ ": "+ failed);
      failed.timestamp("TCPConnection.runner.locked_expireOldMessages expired with " + _toBeSent.size() + " left");
      _transport.afterSend(failed,false,false);
      if (failed.getLifetime() >= MIN_MESSAGE_LIFETIME_FOR_PENALTY)       reallySlowFound=true;
    }
  }
  return reallySlowFound;
}
