{
  if (_closed)   return;
  _closed=true;
  if (_remoteIdentity != null) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Closing the connection to " + _remoteIdentity.getHash().toBase64(),new Exception("Closed by"));
  }
 else {
    if (_socket != null) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Closing the unestablished connection with " + _socket.getInetAddress().toString() + ":"+ _socket.getPort(),new Exception("Closed by"));
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Closing the unestablished connection",new Exception("Closed by"));
    }
  }
  if (_reader != null)   _reader.stopReading();
  if (_runner != null)   _runner.stopRunning();
  if (_in != null)   try {
    _in.close();
  }
 catch (  IOException ioe) {
  }
  if (_out != null)   try {
    _out.close();
  }
 catch (  IOException ioe) {
  }
  if (_socket != null)   try {
    _socket.close();
  }
 catch (  IOException ioe) {
  }
  if (_toBeSent != null) {
    long now=Clock.getInstance().now();
synchronized (_toBeSent) {
      for (Iterator iter=_toBeSent.iterator(); iter.hasNext(); ) {
        OutNetMessage msg=(OutNetMessage)iter.next();
        msg.timestamp("TCPTransport.closeConnection caused fail");
        if (_log.shouldLog(Log.WARN))         _log.warn("Connection closed while the message was sitting on the TCP Connection's queue!  too slow by: " + (now - msg.getExpiration()) + "ms: "+ msg);
        _transport.afterSend(msg,false);
      }
      _toBeSent.clear();
    }
  }
  _transport.connectionClosed(this);
}
