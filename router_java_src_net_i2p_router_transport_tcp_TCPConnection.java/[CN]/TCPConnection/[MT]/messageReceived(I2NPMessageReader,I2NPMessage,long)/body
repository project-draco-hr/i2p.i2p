{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Message received from " + _remoteIdentity.getHash().toBase64());
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream(32 * 1024);
    message.writeBytes(baos);
    int size=baos.size();
    _transport.messageReceived(message,_remoteIdentity,null,msToReceive,size);
  }
 catch (  DataFormatException dfe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("How did we read a message that is poorly formatted...",dfe);
  }
catch (  IOException ioe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("How did we read a message that can't be written to memory...",ioe);
  }
  if (slicesTooLong()) {
    if (_log.shouldLog(Log.ERROR)) {
      long sliceTime=_context.clock().now() - _lastSliceRun;
      _log.error("onReceive: Slices are taking too long (" + sliceTime + "ms) - perhaps the remote side is disconnected or hung?  peer = "+ _remoteIdentity.getHash().toBase64());
    }
    closeConnection();
  }
}
