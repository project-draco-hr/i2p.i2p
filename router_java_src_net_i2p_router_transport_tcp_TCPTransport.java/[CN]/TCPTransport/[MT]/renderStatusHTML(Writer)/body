{
  StringBuffer buf=new StringBuffer(1024);
  int outbound=0;
  int inbound=0;
synchronized (_connectionLock) {
    long offsetTotal=0;
    buf.append("<b>Connections (").append(_connectionsByIdent.size()).append("):</b><ul>\n");
    for (Iterator iter=_connectionsByIdent.values().iterator(); iter.hasNext(); ) {
      TCPConnection con=(TCPConnection)iter.next();
      buf.append("<li>");
      if (con.getIsOutbound()) {
        outbound++;
        buf.append("Outbound to ");
      }
 else {
        inbound++;
        buf.append("Inbound from ");
      }
      buf.append(con.getRemoteRouterIdentity().getHash().toBase64().substring(0,6));
      buf.append(": up for ").append(DataHelper.formatDuration(con.getLifetime()));
      buf.append(" transferring at ");
      long bps=con.getSendRate();
      if (bps < 1024)       buf.append(bps).append("Bps");
 else       buf.append((int)(bps / 1024)).append("KBps");
      buf.append(" with a ").append(con.getOffsetReceived()).append("ms clock offset");
      buf.append("</li>\n");
      offsetTotal+=con.getOffsetReceived();
    }
    buf.append("</ul>\n");
    buf.append("<b>Average clock skew, TCP peers: ");
    if (_connectionsByIdent.size() > 0)     buf.append(offsetTotal / _connectionsByIdent.size()).append("ms</b><br />\n");
 else     buf.append("n/a</b><br />\n");
    buf.append("<b>Connections being built:</b><ul>\n");
    for (Iterator iter=_pendingConnectionsByIdent.iterator(); iter.hasNext(); ) {
      Hash peer=(Hash)iter.next();
      buf.append("<li>");
      buf.append(peer.toBase64().substring(0,6));
      buf.append("</li>\n");
    }
    buf.append("</ul>\n");
    buf.append("<b>Inbound: ").append(inbound).append(", Outbound: ").append(outbound).append("</b><br />\n");
  }
  buf.append("<b>Most recent connection errors:</b><ul>");
synchronized (_lastConnectionErrors) {
    for (int i=_lastConnectionErrors.size() - 1; i >= 0; i--) {
      String msg=(String)_lastConnectionErrors.get(i);
      buf.append("<li>").append(msg).append("</li>\n");
    }
  }
  buf.append("</ul>");
  out.write(buf.toString());
}
