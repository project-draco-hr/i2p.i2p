{
  RouterAddress ra=msg.getTarget().getTargetAddress(_transport.getStyle());
  if (ra == null) {
    _transport.failed(msg);
    return;
  }
  UDPAddress addr=new UDPAddress(ra);
  InetAddress remAddr=addr.getHostAddress();
  int port=addr.getPort();
  RemoteHostId to=new RemoteHostId(remAddr.getAddress(),port);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Add outobund establish state to: " + to);
synchronized (_outboundStates) {
    OutboundEstablishState state=(OutboundEstablishState)_outboundStates.get(to);
    if (state == null) {
      if (_outboundStates.size() >= getMaxConcurrentEstablish()) {
        List queued=(List)_queuedOutbound.get(to);
        if (queued == null) {
          queued=new ArrayList(1);
          _queuedOutbound.put(to,queued);
        }
        queued.add(msg);
      }
 else {
        state=new OutboundEstablishState(_context,remAddr,port,msg.getTarget().getIdentity(),new SessionKey(addr.getIntroKey()),addr);
        _outboundStates.put(to,state);
      }
    }
    if (state != null) {
      state.addMessage(msg);
      List queued=(List)_queuedOutbound.remove(to);
      if (queued != null)       for (int i=0; i < queued.size(); i++)       state.addMessage((OutNetMessage)queued.get(i));
    }
  }
  notifyActivity();
}
