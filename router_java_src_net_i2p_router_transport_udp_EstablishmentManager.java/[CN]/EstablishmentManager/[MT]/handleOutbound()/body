{
  long now=_context.clock().now();
  long nextSendTime=-1;
  OutboundEstablishState outboundState=null;
  for (Iterator<OutboundEstablishState> iter=_outboundStates.values().iterator(); iter.hasNext(); ) {
    OutboundEstablishState cur=iter.next();
    OutboundEstablishState.OutboundState state=cur.getState();
    if (state == OB_STATE_CONFIRMED_COMPLETELY || state == OB_STATE_VALIDATION_FAILED) {
      iter.remove();
      outboundState=cur;
      break;
    }
 else     if (cur.getLifetime() >= MAX_OB_ESTABLISH_TIME) {
      iter.remove();
      outboundState=cur;
      break;
    }
 else {
      if (cur.getNextSendTime() <= now) {
        outboundState=cur;
        break;
      }
 else {
        long when=-1;
        if (cur.getNextSendTime() <= 0) {
          when=cur.getEstablishBeginTime() + MAX_OB_ESTABLISH_TIME;
        }
 else {
          when=cur.getNextSendTime();
        }
        if ((nextSendTime <= 0) || (when < nextSendTime))         nextSendTime=when;
      }
    }
  }
  if (outboundState != null) {
synchronized (outboundState) {
      boolean expired=outboundState.getLifetime() >= MAX_OB_ESTABLISH_TIME;
switch (outboundState.getState()) {
case OB_STATE_UNKNOWN:
case OB_STATE_INTRODUCED:
        if (expired)         processExpired(outboundState);
 else         sendRequest(outboundState);
      break;
case OB_STATE_REQUEST_SENT:
    long rtime=outboundState.getRequestSentTime();
  if (expired || (rtime > 0 && rtime + OB_MESSAGE_TIMEOUT <= now))   processExpired(outboundState);
 else   if (outboundState.getNextSendTime() <= now)   sendRequest(outboundState);
break;
case OB_STATE_CREATED_RECEIVED:
if (expired) processExpired(outboundState);
 else if (outboundState.getNextSendTime() <= now) sendConfirmation(outboundState);
break;
case OB_STATE_CONFIRMED_PARTIALLY:
long ctime=outboundState.getConfirmedSentTime();
if (expired || (ctime > 0 && ctime + OB_MESSAGE_TIMEOUT <= now)) {
sendDestroy(outboundState);
processExpired(outboundState);
}
 else if (outboundState.getNextSendTime() <= now) {
sendConfirmation(outboundState);
}
break;
case OB_STATE_CONFIRMED_COMPLETELY:
if (expired) processExpired(outboundState);
 else handleCompletelyEstablished(outboundState);
break;
case OB_STATE_PENDING_INTRO:
long itime=outboundState.getIntroSentTime();
if (expired || (itime > 0 && itime + OB_MESSAGE_TIMEOUT <= now)) processExpired(outboundState);
 else if (outboundState.getNextSendTime() <= now) handlePendingIntro(outboundState);
break;
case OB_STATE_VALIDATION_FAILED:
processExpired(outboundState);
break;
}
}
nextSendTime=now;
}
return nextSendTime;
}
