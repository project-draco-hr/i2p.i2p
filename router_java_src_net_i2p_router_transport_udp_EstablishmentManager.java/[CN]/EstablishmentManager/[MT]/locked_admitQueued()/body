{
  if (_queuedOutbound.isEmpty())   return 0;
  int admitted=0;
  int max=getMaxConcurrentEstablish();
  for (Iterator<Map.Entry<RemoteHostId,List<OutNetMessage>>> iter=_queuedOutbound.entrySet().iterator(); iter.hasNext() && _outboundStates.size() < max; ) {
    Map.Entry<RemoteHostId,List<OutNetMessage>> entry=iter.next();
    iter.remove();
    RemoteHostId to=entry.getKey();
    List<OutNetMessage> allQueued=entry.getValue();
    List<OutNetMessage> queued=new ArrayList();
    long now=_context.clock().now();
synchronized (allQueued) {
      for (      OutNetMessage msg : allQueued) {
        if (now - Router.CLOCK_FUDGE_FACTOR > msg.getExpiration()) {
          _transport.failed(msg,"Took too long in est. mgr OB queue");
        }
 else {
          queued.add(msg);
        }
      }
    }
    if (queued.isEmpty())     continue;
    for (    OutNetMessage m : queued) {
      m.timestamp("no longer deferred... establishing");
      establish(m,false);
    }
    admitted++;
  }
  return admitted;
}
