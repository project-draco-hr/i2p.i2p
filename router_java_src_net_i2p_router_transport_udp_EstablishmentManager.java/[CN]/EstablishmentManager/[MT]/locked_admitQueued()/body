{
  if (_queuedOutbound.isEmpty())   return 0;
  int admitted=0;
  int max=getMaxConcurrentEstablish();
  for (Iterator<Map.Entry<RemoteHostId,List<OutNetMessage>>> iter=_queuedOutbound.entrySet().iterator(); iter.hasNext() && _outboundStates.size() < max; ) {
    Map.Entry<RemoteHostId,List<OutNetMessage>> entry=iter.next();
    iter.remove();
    RemoteHostId to=entry.getKey();
    List<OutNetMessage> allQueued=entry.getValue();
    List<OutNetMessage> queued=new ArrayList();
    long now=_context.clock().now();
synchronized (allQueued) {
      for (      OutNetMessage msg : allQueued) {
        if (now - Router.CLOCK_FUDGE_FACTOR > msg.getExpiration()) {
          _transport.failed(msg,"Took too long in est. mgr OB queue");
        }
 else {
          queued.add(msg);
        }
      }
    }
    if (queued.isEmpty())     continue;
    OutNetMessage msg=queued.get(0);
    RouterAddress ra=msg.getTarget().getTargetAddress(_transport.getStyle());
    if (ra == null) {
      for (int i=0; i < queued.size(); i++)       _transport.failed(queued.get(i),"Cannot admit to the queue, as it has no address");
      continue;
    }
    UDPAddress addr=new UDPAddress(ra);
    InetAddress remAddr=addr.getHostAddress();
    int port=addr.getPort();
    OutboundEstablishState qstate=new OutboundEstablishState(_context,remAddr,port,msg.getTarget().getIdentity(),new SessionKey(addr.getIntroKey()),addr,_transport.getDHBuilder());
    OutboundEstablishState old=_outboundStates.putIfAbsent(to,qstate);
    if (old != null)     qstate=old;
    for (int i=0; i < queued.size(); i++) {
      OutNetMessage m=queued.get(i);
      m.timestamp("no longer deferred... establishing");
      qstate.addMessage(m);
    }
    admitted++;
  }
  return admitted;
}
