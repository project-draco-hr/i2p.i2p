{
  long nonce=reader.getRelayResponseReader().readNonce();
  OutboundEstablishState state=_liveIntroductions.remove(Long.valueOf(nonce));
  if (state == null)   return;
  int sz=reader.getRelayResponseReader().readCharlieIPSize();
  byte ip[]=new byte[sz];
  reader.getRelayResponseReader().readCharlieIP(ip,0);
  InetAddress addr=null;
  try {
    addr=InetAddress.getByAddress(ip);
  }
 catch (  UnknownHostException uhe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Introducer for " + state + " ("+ bob+ ") sent us an invalid IP for our target: "+ Addresses.toString(ip),uhe);
    state.introductionFailed();
    notifyActivity();
    return;
  }
  _context.statManager().addRateData("udp.receiveIntroRelayResponse",state.getLifetime(),0);
  int port=reader.getRelayResponseReader().readCharliePort();
  if (_log.shouldLog(Log.INFO))   _log.info("Received RelayResponse for " + state.getRemoteIdentity().calculateHash() + " - they are on "+ addr.toString()+ ":"+ port+ " (according to "+ bob+ ")");
  RemoteHostId oldId=state.getRemoteHostId();
  state.introduced(addr,ip,port);
  RemoteHostId newId=state.getRemoteHostId();
  OutboundEstablishState oldState=_outboundStates.remove(oldId);
  _outboundStates.put(newId,state);
  if (_log.shouldLog(Log.DEBUG))   _log.debug("RR replaced " + oldId + " -> "+ oldState+ " with "+ newId+ " -> "+ state);
  notifyActivity();
}
