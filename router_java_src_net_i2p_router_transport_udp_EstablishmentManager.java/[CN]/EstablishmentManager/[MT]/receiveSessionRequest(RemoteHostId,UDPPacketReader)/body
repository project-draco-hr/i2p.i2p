{
  if (!TransportUtil.isValidPort(from.getPort()) || !_transport.isValid(from.getIP())) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Receive session request from invalid: " + from);
    return;
  }
  boolean isNew=false;
  InboundEstablishState state=_inboundStates.get(from);
  if (state == null) {
    if (!shouldAllowInboundEstablishment()) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Dropping inbound establish, increase " + PROP_MAX_CONCURRENT_ESTABLISH);
      _context.statManager().addRateData("udp.establishDropped",1);
      return;
    }
    if (_context.blocklist().isBlocklisted(from.getIP())) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Receive session request from blocklisted IP: " + from);
      _context.statManager().addRateData("udp.establishBadIP",1);
      return;
    }
    if (!_transport.allowConnection())     return;
    byte[] fromIP=from.getIP();
    state=new InboundEstablishState(_context,fromIP,from.getPort(),_transport.getExternalPort(fromIP.length == 16),_transport.getDHBuilder());
    state.receiveSessionRequest(reader.getSessionRequestReader());
    if (_replayFilter.add(state.getReceivedX(),0,8)) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Duplicate X in session request from: " + from);
      _context.statManager().addRateData("udp.dupDHX",1);
      return;
    }
    InboundEstablishState oldState=_inboundStates.putIfAbsent(from,state);
    isNew=oldState == null;
    if (!isNew)     state=oldState;
  }
  if (isNew) {
    if (_transport.canIntroduce() && state.getSentPort() >= 1024 && state.getSentIP().length == 4) {
      long tag=1 + _context.random().nextLong(MAX_TAG_VALUE);
      state.setSentRelayTag(tag);
    }
 else {
    }
    if (_log.shouldLog(Log.INFO))     _log.info("Received NEW session request " + state);
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Receive DUP session request from: " + state);
  }
  notifyActivity();
}
