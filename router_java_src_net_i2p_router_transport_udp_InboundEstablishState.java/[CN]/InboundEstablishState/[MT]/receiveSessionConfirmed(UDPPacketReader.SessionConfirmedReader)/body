{
  if (_receivedIdentity == null)   _receivedIdentity=new byte[conf.readTotalFragmentNum()][];
  int cur=conf.readCurrentFragmentNum();
  if (cur >= _receivedIdentity.length) {
    fail();
    packetReceived();
    return;
  }
  if (_receivedIdentity[cur] == null) {
    byte fragment[]=new byte[conf.readCurrentFragmentSize()];
    conf.readFragmentData(fragment,0);
    _receivedIdentity[cur]=fragment;
  }
  if (cur == _receivedIdentity.length - 1) {
    _receivedSignedOnTime=conf.readFinalFragmentSignedOnTime();
    buildIdentity();
    if (_receivedUnconfirmedIdentity != null) {
      SigType type=_receivedUnconfirmedIdentity.getSigningPublicKey().getType();
      if (type != null) {
        int sigLen=type.getSigLen();
        if (_receivedSignature == null)         _receivedSignature=new byte[sigLen];
        conf.readFinalSignature(_receivedSignature,0,sigLen);
      }
 else {
        if (_log.shouldLog(Log.WARN))         _log.warn("Unsupported sig type from: " + toString());
        _context.banlist().banlistRouterForever(_receivedUnconfirmedIdentity.calculateHash(),"Unsupported signature type");
        fail();
      }
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Bad ident from: " + toString());
      fail();
    }
  }
  if ((_currentState == InboundState.IB_STATE_UNKNOWN) || (_currentState == InboundState.IB_STATE_REQUEST_RECEIVED) || (_currentState == InboundState.IB_STATE_CREATED_SENT)) {
    if (confirmedFullyReceived())     _currentState=InboundState.IB_STATE_CONFIRMED_COMPLETELY;
 else     _currentState=InboundState.IB_STATE_CONFIRMED_PARTIALLY;
  }
  packetReceived();
}
