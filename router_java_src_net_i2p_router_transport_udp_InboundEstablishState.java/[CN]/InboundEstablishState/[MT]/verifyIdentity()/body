{
  if (_receivedUnconfirmedIdentity == null)   return;
  if (_receivedSignature == null)   return;
  byte signed[]=new byte[256 + 256 + _aliceIP.length+ 2+ _bobIP.length+ 2+ 4+ 4];
  int off=0;
  System.arraycopy(_receivedX,0,signed,off,_receivedX.length);
  off+=_receivedX.length;
  getSentY();
  System.arraycopy(_sentY,0,signed,off,_sentY.length);
  off+=_sentY.length;
  System.arraycopy(_aliceIP,0,signed,off,_aliceIP.length);
  off+=_aliceIP.length;
  DataHelper.toLong(signed,off,2,_alicePort);
  off+=2;
  System.arraycopy(_bobIP,0,signed,off,_bobIP.length);
  off+=_bobIP.length;
  DataHelper.toLong(signed,off,2,_bobPort);
  off+=2;
  DataHelper.toLong(signed,off,4,_sentRelayTag);
  off+=4;
  DataHelper.toLong(signed,off,4,_receivedSignedOnTime);
  Signature sig=new Signature(_receivedSignature);
  boolean ok=_context.dsa().verifySignature(sig,signed,_receivedUnconfirmedIdentity.getSigningPublicKey());
  if (ok) {
    _receivedConfirmedIdentity=_receivedUnconfirmedIdentity;
  }
 else {
    if (_log.shouldLog(Log.WARN))     _log.warn("Signature failed from " + _receivedUnconfirmedIdentity);
  }
}
