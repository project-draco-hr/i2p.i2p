{
  int fragmentNum=data.readMessageFragmentNum(dataFragment);
  if ((fragmentNum < 0) || (fragmentNum >= MAX_FRAGMENTS)) {
    _log.warn("Invalid fragment " + fragmentNum + '/'+ MAX_FRAGMENTS);
    return false;
  }
  if (_fragments[fragmentNum] == null) {
    ByteArray message=_fragmentCache.acquire();
    try {
      data.readMessageFragment(dataFragment,message.getData(),0);
      int size=data.readMessageFragmentSize(dataFragment);
      message.setValid(size);
      _fragments[fragmentNum]=message;
      boolean isLast=data.readMessageIsLast(dataFragment);
      if (isLast) {
        if (_lastFragment >= 0) {
          if (_log.shouldLog(Log.ERROR))           _log.error("Multiple last fragments for message " + _messageId + " from "+ _from);
          return false;
        }
        _lastFragment=fragmentNum;
      }
 else       if (_lastFragment >= 0 && fragmentNum >= _lastFragment) {
        if (_log.shouldLog(Log.ERROR))         _log.error("Non-last fragment " + fragmentNum + " when last is "+ _lastFragment+ " for message "+ _messageId+ " from "+ _from);
        return false;
      }
      if (_log.shouldLog(Log.DEBUG))       _log.debug("New fragment " + fragmentNum + " for message "+ _messageId+ ", size="+ size+ ", isLast="+ isLast+ ", data="+ Base64.encode(message.getData(),0,size));
    }
 catch (    ArrayIndexOutOfBoundsException aioobe) {
      _log.warn("Corrupt SSU fragment " + fragmentNum,aioobe);
      return false;
    }
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Received fragment " + fragmentNum + " for message "+ _messageId+ " again, old size="+ _fragments[fragmentNum].getValid()+ " and new size="+ data.readMessageFragmentSize(dataFragment));
  }
  return true;
}
