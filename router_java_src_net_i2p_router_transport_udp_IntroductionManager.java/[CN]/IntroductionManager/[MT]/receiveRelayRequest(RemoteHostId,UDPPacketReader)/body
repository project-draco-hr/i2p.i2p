{
  if (_context.router().isHidden())   return;
  UDPPacketReader.RelayRequestReader rrReader=reader.getRelayRequestReader();
  long tag=rrReader.readTag();
  int ipSize=rrReader.readIPSize();
  int port=rrReader.readPort();
  if (!isValid(alice.getIP(),alice.getPort()) || ipSize != 0 || port != 0) {
    if (_log.shouldLog(Log.WARN)) {
      byte ip[]=new byte[ipSize];
      rrReader.readIP(ip,0);
      _log.warn("Bad relay req from " + alice + " for "+ Addresses.toString(ip,port));
    }
    _context.statManager().addRateData("udp.relayBadIP",1);
    return;
  }
  PeerState charlie=get(tag);
  if (charlie == null) {
    if (_log.shouldLog(Log.INFO))     _log.info("Receive relay request from " + alice + " with unknown tag");
    _context.statManager().addRateData("udp.receiveRelayRequestBadTag",1,0);
    return;
  }
  if (_log.shouldLog(Log.INFO))   _log.info("Receive relay request from " + alice + " for tag "+ tag+ " and relaying with "+ charlie);
  _context.statManager().addRateData("udp.receiveRelayRequest",1,0);
  _transport.send(_builder.buildRelayIntro(alice,charlie,reader.getRelayRequestReader()));
  SessionKey cipherKey=null;
  SessionKey macKey=null;
  PeerState aliceState=_transport.getPeerState(alice);
  if (aliceState != null) {
    cipherKey=aliceState.getCurrentCipherKey();
    macKey=aliceState.getCurrentMACKey();
  }
  if (cipherKey == null || macKey == null) {
    byte key[]=new byte[SessionKey.KEYSIZE_BYTES];
    reader.getRelayRequestReader().readAliceIntroKey(key,0);
    cipherKey=new SessionKey(key);
    macKey=cipherKey;
    if (_log.shouldLog(Log.INFO))     _log.info("Sending relay response (w/ intro key) to " + alice);
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info("Sending relay response (in-session) to " + alice);
  }
  _transport.send(_builder.buildRelayResponse(alice,charlie,reader.getRelayRequestReader().readNonce(),cipherKey,macKey));
}
