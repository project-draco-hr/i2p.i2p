{
  try {
    I2NPMessage m;
    int numFragments=state.getFragmentCount();
    if (numFragments > 1) {
      ByteArray fragments[]=state.getFragments();
      int off=0;
      for (int i=0; i < numFragments; i++) {
        System.arraycopy(fragments[i].getData(),0,buf.getData(),off,fragments[i].getValid());
        off+=fragments[i].getValid();
      }
      if (off != state.getCompleteSize()) {
        if (_log.shouldLog(Log.WARN))         _log.warn("Hmm, offset of the fragments = " + off + " while the state says "+ state.getCompleteSize());
        return null;
      }
      m=I2NPMessageImpl.fromRawByteArray(_context,buf.getData(),0,state.getCompleteSize(),handler);
    }
 else {
      m=I2NPMessageImpl.fromRawByteArray(_context,state.getFragments()[0].getData(),0,state.getCompleteSize(),handler);
    }
    m.setUniqueId(state.getMessageId());
    return m;
  }
 catch (  I2NPMessageException ime) {
    if (_log.shouldLog(Log.WARN)) {
      ByteArray ba;
      if (state.getFragmentCount() > 1)       ba=buf;
 else       ba=state.getFragments()[0];
      byte[] data=ba.getData();
      _log.warn("Message invalid: " + state + " PeerState: "+ _transport.getPeerState(state.getFrom())+ "\nDUMP:\n"+ HexDump.dump(data,0,state.getCompleteSize())+ "\nRAW:\n"+ Base64.encode(data,0,state.getCompleteSize()),ime);
    }
    if (state.getFragments()[0].getData()[0] == DatabaseStoreMessage.MESSAGE_TYPE) {
      PeerState ps=_transport.getPeerState(state.getFrom());
      if (ps != null && ps.getRemotePort() == 65520) {
        _transport.sendDestroy(ps);
        _transport.dropPeer(ps,true,"Corrupt DSM");
        _context.banlist().banlistRouterForever(state.getFrom(),_x("Sent corrupt DSM"));
      }
    }
    _context.messageHistory().droppedInboundMessage(state.getMessageId(),state.getFrom(),"error: " + ime.toString() + ": "+ state.toString());
    return null;
  }
catch (  RuntimeException e) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Error handling a message: " + state,e);
    _context.messageHistory().droppedInboundMessage(state.getMessageId(),state.getFrom(),"error: " + e.toString() + ": "+ state.toString());
    return null;
  }
 finally {
    state.releaseResources();
  }
}
