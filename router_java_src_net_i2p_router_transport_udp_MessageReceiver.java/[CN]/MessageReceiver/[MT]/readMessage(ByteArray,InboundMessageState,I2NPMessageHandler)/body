{
  try {
    ByteArray fragments[]=state.getFragments();
    int numFragments=state.getFragmentCount();
    int off=0;
    for (int i=0; i < numFragments; i++) {
      System.arraycopy(fragments[i].getData(),0,buf.getData(),off,fragments[i].getValid());
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Raw fragment[" + i + "] for "+ state.getMessageId()+ ": "+ Base64.encode(fragments[i].getData(),0,fragments[i].getValid())+ " (valid: "+ fragments[i].getValid()+ " raw: "+ Base64.encode(fragments[i].getData())+ ")");
      off+=fragments[i].getValid();
    }
    if (off != state.getCompleteSize()) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Hmm, offset of the fragments = " + off + " while the state says "+ state.getCompleteSize());
      return null;
    }
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Raw byte array for " + state.getMessageId() + ": "+ Base64.encode(buf.getData(),0,state.getCompleteSize()));
    I2NPMessage m=I2NPMessageImpl.fromRawByteArray(_context,buf.getData(),0,state.getCompleteSize(),handler);
    m.setUniqueId(state.getMessageId());
    return m;
  }
 catch (  I2NPMessageException ime) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Message invalid: " + state,ime);
    _context.messageHistory().droppedInboundMessage(state.getMessageId(),state.getFrom(),"error: " + ime.toString() + ": "+ state.toString());
    return null;
  }
catch (  Exception e) {
    _log.log(Log.CRIT,"Error dealing with a message: " + state,e);
    _context.messageHistory().droppedInboundMessage(state.getMessageId(),state.getFrom(),"error: " + e.toString() + ": "+ state.toString());
    return null;
  }
 finally {
    state.releaseResources();
  }
}
