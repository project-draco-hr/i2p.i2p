{
  try {
    byte buf[]=new byte[state.getCompleteSize()];
    ByteArray fragments[]=state.getFragments();
    int numFragments=state.getFragmentCount();
    int off=0;
    for (int i=0; i < numFragments; i++) {
      System.arraycopy(fragments[i].getData(),0,buf,off,fragments[i].getValid());
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Raw fragment[" + i + "] for "+ state.getMessageId()+ ": "+ Base64.encode(fragments[i].getData(),0,fragments[i].getValid()));
      off+=fragments[i].getValid();
    }
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Raw byte array for " + state.getMessageId() + ": "+ Base64.encode(buf));
    I2NPMessage m=I2NPMessageImpl.fromRawByteArray(_context,buf,0,buf.length);
    m.setUniqueId(state.getMessageId());
    return m;
  }
 catch (  I2NPMessageException ime) {
    if (_log.shouldLog(Log.ERROR))     _log.error("Message invalid: " + state,ime);
    return null;
  }
catch (  Exception e) {
    _log.log(Log.CRIT,"Error dealing with a message: " + state,e);
    return null;
  }
 finally {
    state.releaseResources();
  }
}
