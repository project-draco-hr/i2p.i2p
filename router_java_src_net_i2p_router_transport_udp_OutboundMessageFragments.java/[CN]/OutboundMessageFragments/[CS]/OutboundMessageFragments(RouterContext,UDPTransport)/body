{
  _context=ctx;
  _log=ctx.logManager().getLog(OutboundMessageFragments.class);
  _transport=transport;
  _activeMessages=new ArrayList(MAX_ACTIVE);
  _nextPacketMessage=0;
  _builder=new PacketBuilder(ctx);
  _alive=true;
  _allowExcess=false;
  _context.statManager().createRateStat("udp.sendVolleyTime","Long it takes to send a full volley","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
  _context.statManager().createRateStat("udp.sendConfirmTime","How long it takes to send a message and get the ACK","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
  _context.statManager().createRateStat("udp.sendConfirmFragments","How many fragments are included in a fully ACKed message","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
  _context.statManager().createRateStat("udp.sendConfirmVolley","How many times did fragments need to be sent before ACK","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
  _context.statManager().createRateStat("udp.sendFailed","How many fragments were in a message that couldn't be delivered","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
  _context.statManager().createRateStat("udp.sendAggressiveFailed","How many volleys was a packet sent before we gave up","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
  _context.statManager().createRateStat("udp.outboundActiveCount","How many messages are in the active pool when a new one is added","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
  _context.statManager().createRateStat("udp.sendRejected","What volley are we on when the peer was throttled (time == message lifetime)","udp",new long[]{60 * 1000,10 * 60 * 1000,60 * 60 * 1000,24 * 60 * 60* 1000});
}
