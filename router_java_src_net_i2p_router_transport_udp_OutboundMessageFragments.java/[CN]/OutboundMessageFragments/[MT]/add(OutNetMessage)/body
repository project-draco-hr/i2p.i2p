{
  I2NPMessage msgBody=msg.getMessage();
  RouterInfo target=msg.getTarget();
  if ((msgBody == null) || (target == null))   return;
  OutboundMessageState state=new OutboundMessageState(_context);
  boolean ok=state.initialize(msg,msgBody);
  if (ok) {
    PeerState peer=_transport.getPeerState(target.getIdentity().calculateHash());
    if (peer == null) {
      _transport.failed(msg,"Peer disconnected quickly");
      state.releaseResources();
      return;
    }
    int active=peer.add(state);
synchronized (_activePeers) {
      if (!_activePeers.contains(peer)) {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Add a new message to a new peer " + peer.getRemotePeer().toBase64());
        _activePeers.add(peer);
      }
 else {
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Add a new message to an existing peer " + peer.getRemotePeer().toBase64());
      }
      _activePeers.notifyAll();
    }
    _context.statManager().addRateData("udp.outboundActiveCount",active,0);
  }
 else {
    if (_log.shouldLog(Log.WARN))     _log.warn("Error initializing " + msg);
  }
}
