{
  if (false)   return true;
  long start=_context.clock().now();
  int numActive=0;
  int maxActive=Math.max(_transport.countActivePeers(),MAX_ACTIVE);
  while (_alive) {
    finishMessages();
    try {
synchronized (_activeMessages) {
        numActive=_activeMessages.size();
        if (!_alive)         return false;
 else         if (numActive < maxActive)         return true;
 else         if (_allowExcess)         return true;
 else         _activeMessages.wait(1000);
      }
      _context.statManager().addRateData("udp.activeDelay",numActive,_context.clock().now() - start);
    }
 catch (    InterruptedException ie) {
    }
  }
  return false;
}
