{
  UDPPacket packet=buildPacketHeader(PEER_RELAY_REQUEST_FLAG_BYTE);
  byte data[]=packet.getPacket().getData();
  int off=HEADER_SIZE;
  byte ourIP[]=getOurExplicitIP();
  int ourPort=getOurExplicitPort();
  if (_log.shouldLog(Log.INFO))   _log.info("Sending intro relay request to " + introHost + ":"+ introPort);
  DataHelper.toLong(data,off,4,introTag);
  off+=4;
  if (ourIP != null) {
    DataHelper.toLong(data,off,1,ourIP.length);
    off++;
    System.arraycopy(ourIP,0,data,off,ourIP.length);
    off+=ourIP.length;
  }
 else {
    DataHelper.toLong(data,off,1,0);
    off++;
  }
  DataHelper.toLong(data,off,2,ourPort);
  off+=2;
  DataHelper.toLong(data,off,1,0);
  off++;
  off+=0;
  System.arraycopy(ourIntroKey.getData(),0,data,off,SessionKey.KEYSIZE_BYTES);
  off+=SessionKey.KEYSIZE_BYTES;
  if (_log.shouldLog(Log.DEBUG))   _log.debug("wrote alice intro key: " + Base64.encode(data,off - SessionKey.KEYSIZE_BYTES,SessionKey.KEYSIZE_BYTES) + " with nonce "+ introNonce+ " size="+ (off + 4 + (16 - (off + 4) % 16))+ " and data: "+ Base64.encode(data,0,off));
  DataHelper.toLong(data,off,4,introNonce);
  off+=4;
  if ((off % 16) != 0)   off+=16 - (off % 16);
  packet.getPacket().setLength(off);
  if (encrypt)   authenticate(packet,new SessionKey(introKey),new SessionKey(introKey));
  setTo(packet,introHost,introPort);
  packet.setMessageType(TYPE_RREQ);
  return packet;
}
