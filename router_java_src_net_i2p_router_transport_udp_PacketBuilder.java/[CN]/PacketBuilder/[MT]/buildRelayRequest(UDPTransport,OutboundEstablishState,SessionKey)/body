{
  UDPAddress addr=state.getRemoteAddress();
  int count=addr.getIntroducerCount();
  List<UDPPacket> rv=new ArrayList<UDPPacket>(count);
  for (int i=0; i < count; i++) {
    InetAddress iaddr=addr.getIntroducerHost(i);
    int iport=addr.getIntroducerPort(i);
    byte ikey[]=addr.getIntroducerKey(i);
    long tag=addr.getIntroducerTag(i);
    if (ikey == null || !TransportUtil.isValidPort(iport) || iaddr == null || tag <= 0 || iaddr.getAddress().length != 4 || (!_transport.isValid(iaddr.getAddress())) || (Arrays.equals(iaddr.getAddress(),_transport.getExternalIP()) && !_transport.allowLocal())) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Cannot build a relay request to " + state.getRemoteIdentity().calculateHash() + ", as their UDP address is invalid: addr="+ addr+ " index="+ i);
      continue;
    }
    SessionKey cipherKey=null;
    SessionKey macKey=null;
    PeerState bobState=null;
    if (ikey.length == Hash.HASH_LENGTH) {
      bobState=transport.getPeerState(new Hash(ikey));
    }
    if (bobState == null) {
      RemoteHostId rhid=new RemoteHostId(iaddr.getAddress(),iport);
      bobState=transport.getPeerState(rhid);
    }
    if (bobState != null) {
      cipherKey=bobState.getCurrentCipherKey();
      macKey=bobState.getCurrentMACKey();
    }
    if (cipherKey == null || macKey == null) {
      cipherKey=new SessionKey(ikey);
      macKey=cipherKey;
      if (_log.shouldLog(Log.INFO))       _log.info("Sending relay request (w/ intro key) to " + iaddr + ":"+ iport);
    }
 else {
      if (_log.shouldLog(Log.INFO))       _log.info("Sending relay request (in-session) to " + iaddr + ":"+ iport);
    }
    rv.add(buildRelayRequest(iaddr,iport,cipherKey,macKey,tag,ourIntroKey,state.getIntroNonce()));
  }
  return rv;
}
