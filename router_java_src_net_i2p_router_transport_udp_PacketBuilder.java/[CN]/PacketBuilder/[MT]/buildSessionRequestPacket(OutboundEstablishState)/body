{
  UDPPacket packet=buildPacketHeader(SESSION_REQUEST_FLAG_BYTE);
  byte data[]=packet.getPacket().getData();
  int off=HEADER_SIZE;
  byte toIP[]=state.getSentIP();
  if ((_transport != null) && (!_transport.isValid(toIP))) {
    packet.release();
    return null;
  }
  InetAddress to=null;
  try {
    to=InetAddress.getByAddress(toIP);
  }
 catch (  UnknownHostException uhe) {
    if (_log.shouldLog(Log.ERROR))     _log.error("How did we think this was a valid IP?  " + state.getRemoteHostId().toString());
    packet.release();
    return null;
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Sending request");
  System.arraycopy(state.getSentX(),0,data,off,state.getSentX().length);
  off+=state.getSentX().length;
  DataHelper.toLong(data,off,1,state.getSentIP().length);
  off+=1;
  System.arraycopy(toIP,0,data,off,state.getSentIP().length);
  off+=toIP.length;
  DataHelper.toLong(data,off,2,state.getSentPort());
  off+=2;
  if ((off % 16) != 0)   off+=16 - (off % 16);
  packet.getPacket().setLength(off);
  authenticate(packet,state.getIntroKey(),state.getIntroKey());
  setTo(packet,to,state.getSentPort());
  packet.setMessageType(TYPE_SREQ);
  return packet;
}
