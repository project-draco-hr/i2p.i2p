{
  UDPPacket packet=buildPacketHeader(SESSION_REQUEST_FLAG_BYTE);
  DatagramPacket pkt=packet.getPacket();
  byte data[]=pkt.getData();
  int off=HEADER_SIZE;
  byte toIP[]=state.getSentIP();
  if (!_transport.isValid(toIP)) {
    packet.release();
    return null;
  }
  InetAddress to=null;
  try {
    to=InetAddress.getByAddress(toIP);
  }
 catch (  UnknownHostException uhe) {
    if (_log.shouldLog(Log.ERROR))     _log.error("How did we think this was a valid IP?  " + state.getRemoteHostId().toString());
    packet.release();
    return null;
  }
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Sending request to " + Addresses.toString(toIP));
  byte[] x=state.getSentX();
  System.arraycopy(x,0,data,off,x.length);
  off+=x.length;
  DataHelper.toLong(data,off,1,toIP.length);
  off+=1;
  System.arraycopy(toIP,0,data,off,toIP.length);
  off+=toIP.length;
  int port=state.getSentPort();
  DataHelper.toLong(data,off,2,port);
  off+=2;
  off=pad1(data,off);
  off=pad2(data,off);
  pkt.setLength(off);
  authenticate(packet,state.getIntroKey(),state.getIntroKey());
  setTo(packet,to,port);
  packet.setMessageType(TYPE_SREQ);
  return packet;
}
