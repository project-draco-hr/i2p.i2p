{
  _state=31;
  if ((state != null) && (_log.shouldLog(Log.DEBUG))) {
    StringBuffer buf=new StringBuffer(128);
    buf.append("Attempting to receive a packet on a known inbound state: ");
    buf.append(state);
    buf.append(" MAC key: ").append(state.getMACKey());
    buf.append(" intro key: ").append(_transport.getIntroKey());
    _log.debug(buf.toString());
  }
  boolean isValid=false;
  if (state.getMACKey() != null) {
    isValid=packet.validate(state.getMACKey());
    if (isValid) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Valid introduction packet received for inbound con: " + packet);
      _state=32;
      packet.decrypt(state.getCipherKey());
      handlePacket(reader,packet,null,null,null);
      return;
    }
 else {
      if (_log.shouldLog(Log.WARN))       _log.warn("Invalid introduction packet received for inbound con, falling back: " + packet);
      _state=33;
    }
  }
  if (allowFallback) {
    _state=34;
    receivePacket(reader,packet,INBOUND_FALLBACK);
  }
 else {
    _context.statManager().addRateData("udp.droppedInvalidInboundEstablish",packet.getLifetime(),packet.getExpiration());
  }
}
