{
  _state=35;
  if (_log.shouldLog(Log.DEBUG)) {
    StringBuilder buf=new StringBuilder(128);
    buf.append("Attempting to receive a packet on a known outbound state: ");
    buf.append(state);
    buf.append(" MAC key: ").append(state.getMACKey());
    buf.append(" intro key: ").append(state.getIntroKey());
    _log.debug(buf.toString());
  }
  boolean isValid=false;
  if (state.getMACKey() != null) {
    _state=36;
    isValid=packet.validate(state.getMACKey());
    if (isValid) {
      if (_log.shouldLog(Log.INFO))       _log.info("Valid introduction packet received for outbound established con: " + packet);
      _state=37;
      packet.decrypt(state.getCipherKey());
      handlePacket(reader,packet,null,state,null,true);
      _state=38;
      return;
    }
  }
  isValid=packet.validate(state.getIntroKey());
  if (isValid) {
    if (_log.shouldLog(Log.INFO))     _log.info("Valid introduction packet received for outbound established con with old intro key: " + packet);
    _state=39;
    packet.decrypt(state.getIntroKey());
    handlePacket(reader,packet,null,state,null,true);
    _state=40;
    return;
  }
 else {
    if (_log.shouldLog(Log.WARN))     _log.warn("Invalid introduction packet received for outbound established con with old intro key, falling back: " + packet);
  }
  _state=41;
  receivePacket(reader,packet,OUTBOUND_FALLBACK);
  _state=42;
}
