{
  _state=27;
  boolean isValid=packet.validate(_transport.getIntroKey());
  if (!isValid) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Invalid introduction packet received: " + packet,new Exception("path"));
    _context.statManager().addRateData("udp.droppedInvalidEstablish",packet.getLifetime(),packet.getExpiration());
switch (peerType) {
case INBOUND_FALLBACK:
      _context.statManager().addRateData("udp.droppedInvalidEstablish.inbound",packet.getLifetime(),packet.getTimeSinceReceived());
    break;
case OUTBOUND_FALLBACK:
  _context.statManager().addRateData("udp.droppedInvalidEstablish.outbound",packet.getLifetime(),packet.getTimeSinceReceived());
break;
case NEW_PEER:
_context.statManager().addRateData("udp.droppedInvalidEstablish.new",packet.getLifetime(),packet.getTimeSinceReceived());
break;
}
_state=28;
return;
}
 else {
if (_log.shouldLog(Log.DEBUG)) _log.debug("Valid introduction packet received: " + packet);
}
_state=29;
packet.decrypt(_transport.getIntroKey());
handlePacket(reader,packet,null,null,null);
_state=30;
}
