{
  _context=ctx;
  _log=ctx.logManager().getLog(PeerState.class);
  _transport=transport;
  long now=ctx.clock().now();
  _keyEstablishedTime=now;
  _currentReceiveSecond=now - (now % 1000);
  _lastSendTime=now;
  _lastReceiveTime=now;
  _currentACKs=new ConcurrentHashSet();
  _currentACKsResend=new LinkedBlockingQueue();
  _sendWindowBytes=DEFAULT_SEND_WINDOW_BYTES;
  _sendWindowBytesRemaining=DEFAULT_SEND_WINDOW_BYTES;
  _slowStartThreshold=MAX_SEND_WINDOW_BYTES / 2;
  _lastSendRefill=now;
  _receivePeriodBegin=now;
  _lastCongestionOccurred=-1;
  _remotePort=remotePort;
  _mtu=DEFAULT_MTU;
  _mtuReceive=_mtu;
  _largeMTU=transport.getMTU();
  _lastACKSend=-1;
  _rto=MIN_RTO;
  _rtt=_rto / 2;
  _rttDeviation=_rtt;
  _inboundMessages=new HashMap(8);
  _outboundMessages=new ArrayList(32);
  _outboundQueue=new CoDelPriorityBlockingQueue(ctx,"UDP-PeerState",32);
  _remoteIP=remoteIP;
  _remotePeer=remotePeer;
  _isInbound=isInbound;
  _remoteHostId=new RemoteHostId(remoteIP,remotePort);
}
