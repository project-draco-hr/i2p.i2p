{
  if (_dead)   return false;
  OutboundMessageState state=null;
synchronized (_outboundMessages) {
    for (Iterator<OutboundMessageState> iter=_outboundMessages.iterator(); iter.hasNext(); ) {
      state=iter.next();
      if (state.getMessageId() == messageId) {
        iter.remove();
        break;
      }
 else       if (state.getPushCount() <= 0) {
        state=null;
        break;
      }
 else {
        state=null;
      }
    }
    if ((state != null) && (state == _retransmitter))     _retransmitter=null;
  }
  if (state != null) {
    int numSends=state.getMaxSends();
    if (_log.shouldLog(Log.INFO))     _log.info("Received ack of " + messageId + " by "+ _remotePeer+ " after "+ state.getLifetime()+ " and "+ numSends+ " sends");
    _context.statManager().addRateData("udp.sendConfirmTime",state.getLifetime());
    if (state.getFragmentCount() > 1)     _context.statManager().addRateData("udp.sendConfirmFragments",state.getFragmentCount());
    _context.statManager().addRateData("udp.sendConfirmVolley",numSends);
    _transport.succeeded(state);
    int numFragments=state.getFragmentCount();
    messageACKed(state.getMessageSize(),state.getLifetime(),numSends);
  }
 else {
  }
  return state != null;
}
