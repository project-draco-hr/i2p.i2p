{
  int sz=_currentACKsResend.size();
  List<Long> randomResends=new ArrayList<Long>(sz);
  if (sz > 0) {
    long cutoff=_context.clock().now() - RESEND_ACK_TIMEOUT;
    int i=0;
    for (Iterator<ResendACK> iter=_currentACKsResend.iterator(); iter.hasNext(); ) {
      ResendACK rack=iter.next();
      if (rack.time > cutoff && i++ < MAX_RESEND_ACKS) {
        randomResends.add(rack.id);
      }
 else {
        iter.remove();
        if (_log.shouldLog(Log.INFO))         _log.info("Expired ack " + rack.id + " sent "+ (cutoff + RESEND_ACK_TIMEOUT - rack.time)+ " ago, now "+ i+ " resend acks");
      }
    }
    if (i > 1)     Collections.shuffle(randomResends,_context.random());
  }
  return randomResends;
}
