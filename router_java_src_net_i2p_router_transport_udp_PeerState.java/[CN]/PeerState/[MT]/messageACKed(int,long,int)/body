{
  _consecutiveFailedSends=0;
  _lastFailedSendPeriod=-1;
  if (_sendWindowBytes <= _slowStartThreshold) {
    _sendWindowBytes+=bytesACKed;
  }
 else {
    double prob=((double)bytesACKed) / ((double)_sendWindowBytes);
    if (_context.random().nextDouble() <= prob)     _sendWindowBytes+=bytesACKed;
  }
  if (_sendWindowBytes > MAX_SEND_WINDOW_BYTES)   _sendWindowBytes=MAX_SEND_WINDOW_BYTES;
  _lastReceiveTime=_context.clock().now();
  if (_sendWindowBytesRemaining + bytesACKed <= _sendWindowBytes)   _sendWindowBytesRemaining+=bytesACKed;
 else   _sendWindowBytesRemaining=_sendWindowBytes;
  _messagesSent++;
  if (numSends <= 2)   recalculateTimeouts(lifetime);
 else   _log.warn("acked after numSends=" + numSends + " w/ lifetime="+ lifetime+ " and size="+ bytesACKed);
  _context.statManager().addRateData("udp.sendBps",_sendBps,lifetime);
}
