{
  long now=_context.clock().now();
  if (state.getReceiveAliceTime() > now - (RESEND_TIMEOUT / 2)) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Too soon, not retransmitting: " + state);
    return;
  }
  if (state.incrementPacketsRelayed() > MAX_RELAYED_PER_TEST_CHARLIE) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Too many, not retransmitting: " + state);
    return;
  }
  state.setReceiveAliceTime(now);
  try {
    InetAddress aliceIP=InetAddress.getByAddress(from.getIP());
    SessionKey aliceIntroKey=new SessionKey(new byte[SessionKey.KEYSIZE_BYTES]);
    testInfo.readIntroKey(aliceIntroKey.getData(),0);
    UDPPacket packet=_packetBuilder.buildPeerTestToAlice(aliceIP,from.getPort(),aliceIntroKey,_transport.getIntroKey(),nonce);
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Receive from Alice: " + state);
    _transport.send(packet);
  }
 catch (  UnknownHostException uhe) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Unable to build the aliceIP from " + from,uhe);
    _context.statManager().addRateData("udp.testBadIP",1);
  }
}
