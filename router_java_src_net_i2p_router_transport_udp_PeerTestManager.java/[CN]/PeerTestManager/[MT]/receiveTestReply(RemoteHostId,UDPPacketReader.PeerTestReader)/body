{
  PeerTestState test=_currentTest;
  if ((DataHelper.eq(from.getIP(),test.getBobIP().getAddress())) && (from.getPort() == test.getBobPort())) {
    byte ip[]=new byte[testInfo.readIPSize()];
    testInfo.readIP(ip,0);
    try {
      InetAddress addr=InetAddress.getByAddress(ip);
      test.setAliceIP(addr);
      test.setReceiveBobTime(_context.clock().now());
      test.setAlicePort(testInfo.readPort());
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Receive test reply from bob @ " + from.getIP() + " via our "+ test.getAlicePort()+ "/"+ test.getAlicePortFromCharlie());
      if (test.getAlicePortFromCharlie() > 0)       testComplete();
    }
 catch (    UnknownHostException uhe) {
      if (_log.shouldLog(Log.ERROR))       _log.error("Unable to get our IP from bob's reply: " + from + ", "+ testInfo,uhe);
    }
  }
 else {
    PeerState charlieSession=_transport.getPeerState(from);
    if (charlieSession != null) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Bob chose a charlie we already have a session to, cancelling the test and rerunning (bob: " + _currentTest + ", charlie: "+ from+ ")");
      _currentTest=null;
      _context.statManager().addRateData("udp.statusKnownCharlie",1,0);
      honorStatus(CommSystemFacade.STATUS_UNKNOWN);
      return;
    }
    if (test.getReceiveCharlieTime() > 0) {
      test.setAlicePortFromCharlie(testInfo.readPort());
      byte ip[]=new byte[testInfo.readIPSize()];
      testInfo.readIP(ip,0);
      try {
        InetAddress addr=InetAddress.getByAddress(ip);
        test.setAliceIPFromCharlie(addr);
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Receive test reply from charlie @ " + test.getCharlieIP() + " via our "+ test.getAlicePort()+ "/"+ test.getAlicePortFromCharlie());
        if (test.getReceiveBobTime() > 0)         testComplete();
      }
 catch (      UnknownHostException uhe) {
        if (_log.shouldLog(Log.ERROR))         _log.error("Charlie @ " + from + " said we were an invalid IP address: "+ uhe.getMessage(),uhe);
      }
    }
 else {
      test.setReceiveCharlieTime(_context.clock().now());
      SessionKey charlieIntroKey=new SessionKey(new byte[SessionKey.KEYSIZE_BYTES]);
      testInfo.readIntroKey(charlieIntroKey.getData(),0);
      test.setCharlieIntroKey(charlieIntroKey);
      try {
        test.setCharlieIP(InetAddress.getByAddress(from.getIP()));
        test.setCharliePort(from.getPort());
        if (_log.shouldLog(Log.DEBUG))         _log.debug("Receive test from charlie @ " + from);
        sendTestToCharlie();
      }
 catch (      UnknownHostException uhe) {
        if (_log.shouldLog(Log.WARN))         _log.warn("Charlie's IP is b0rked: " + from + ": "+ testInfo);
      }
    }
  }
}
