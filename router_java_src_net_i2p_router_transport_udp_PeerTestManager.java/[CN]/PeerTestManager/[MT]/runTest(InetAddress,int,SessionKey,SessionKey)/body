{
  if (_currentTest != null) {
    if (_log.shouldLog(Log.WARN))     _log.warn("We are already running a test: " + _currentTest + ", aborting test with bob = "+ bobIP);
    return;
  }
  if (DataHelper.eq(bobIP.getAddress(),0,_transport.getExternalIP(),0,2)) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Not running test with Bob too close to us " + bobIP);
    return;
  }
  PeerTestState test=new PeerTestState(ALICE,_context.random().nextLong(MAX_NONCE),_context.clock().now());
  test.setBobIP(bobIP);
  test.setBobPort(bobPort);
  test.setBobCipherKey(bobCipherKey);
  test.setBobMACKey(bobMACKey);
  test.setLastSendTime(test.getBeginTime());
  _currentTest=test;
  _currentTestComplete=false;
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Start new test: " + test);
  while (_recentTests.size() > MAX_RECENT_TESTS)   _recentTests.poll();
  _recentTests.offer(Long.valueOf(test.getNonce()));
  test.incrementPacketsRelayed();
  sendTestToBob();
  _context.simpleScheduler().addEvent(new ContinueTest(test.getNonce()),RESEND_TIMEOUT);
}
