{
  if (_currentTest != null) {
    if (_log.shouldLog(Log.WARN))     _log.warn("We are already running a test with bob = " + _currentTest.getBobIP() + ", aborting test with bob = "+ bobIP);
    return;
  }
  PeerTestState test=new PeerTestState();
  test.setNonce(_context.random().nextLong(MAX_NONCE));
  test.setBobIP(bobIP);
  test.setBobPort(bobPort);
  test.setBobCipherKey(bobCipherKey);
  test.setBobMACKey(bobMACKey);
  test.setBeginTime(_context.clock().now());
  test.setLastSendTime(test.getBeginTime());
  test.setOurRole(PeerTestState.ALICE);
  _currentTest=test;
  _currentTestComplete=false;
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Running test with bob = " + bobIP + ":"+ bobPort+ " "+ test.getNonce());
  while (_recentTests.size() > 16)   _recentTests.remove(0);
  _recentTests.add(new Long(test.getNonce()));
  sendTestToBob();
  SimpleTimer.getInstance().addEvent(new ContinueTest(),RESEND_TIMEOUT);
}
