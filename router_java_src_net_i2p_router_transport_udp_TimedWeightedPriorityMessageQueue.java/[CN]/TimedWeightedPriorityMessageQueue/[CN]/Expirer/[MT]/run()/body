{
  List<OutNetMessage> removed=new ArrayList<OutNetMessage>(1);
  while (_alive) {
    long now=_context.clock().now();
    for (int i=0; i < _queue.length; i++) {
synchronized (_queue[i]) {
        for (int j=0; j < _queue[i].size(); j++) {
          OutNetMessage m=_queue[i].get(j);
          if (m.getExpiration() < now) {
            _bytesQueued[i]-=m.getMessageSize();
            removed.add(m);
            _queue[i].remove(j);
            j--;
            continue;
          }
        }
      }
    }
    for (int i=0; i < removed.size(); i++) {
      OutNetMessage m=removed.get(i);
      m.timestamp("expirer killed it");
      _listener.failed(m,"expired before getting on the active pool");
    }
    removed.clear();
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException ie) {
    }
  }
}
