{
  if (addr == null) {
    _host=null;
    _port=0;
    return;
  }
  _host=addr.getOption(PROP_HOST);
  _port=addr.getPort();
  try {
    String mtu=addr.getOption(PROP_MTU);
    if (mtu != null)     _mtu=MTU.rectify(Integer.parseInt(mtu));
  }
 catch (  NumberFormatException nfe) {
  }
  String key=addr.getOption(PROP_INTRO_KEY);
  if (key != null)   _introKey=Base64.decode(key.trim());
  for (int i=MAX_INTRODUCERS; i >= 0; i--) {
    String host=addr.getOption(PROP_INTRO_HOST_PREFIX + i);
    if (host == null)     continue;
    String port=addr.getOption(PROP_INTRO_PORT_PREFIX + i);
    if (port == null)     continue;
    String k=addr.getOption(PROP_INTRO_KEY_PREFIX + i);
    if (k == null)     continue;
    byte ikey[]=Base64.decode(k);
    if ((ikey == null) || (ikey.length != SessionKey.KEYSIZE_BYTES))     continue;
    String t=addr.getOption(PROP_INTRO_TAG_PREFIX + i);
    if (t == null)     continue;
    int p=-1;
    try {
      p=Integer.parseInt(port);
      if (p <= 0 || p > 65535)       continue;
    }
 catch (    NumberFormatException nfe) {
      continue;
    }
    long tag=-1;
    try {
      tag=Long.parseLong(t);
      if (tag <= 0)       continue;
    }
 catch (    NumberFormatException nfe) {
      continue;
    }
    if (_introHosts == null) {
      _introHosts=new String[i + 1];
      _introPorts=new int[i + 1];
      _introAddresses=new InetAddress[i + 1];
      _introKeys=new byte[i + 1][];
      _introTags=new long[i + 1];
    }
    _introHosts[i]=host;
    _introPorts[i]=p;
    _introKeys[i]=ikey;
    _introTags[i]=tag;
  }
  int numOK=0;
  if (_introHosts != null) {
    for (int i=0; i < _introHosts.length; i++) {
      if ((_introKeys[i] != null) && (_introPorts[i] > 0) && (_introTags[i] > 0)&& (_introHosts[i] != null))       numOK++;
    }
    if (numOK != _introHosts.length) {
      String hosts[]=new String[numOK];
      int ports[]=new int[numOK];
      long tags[]=new long[numOK];
      byte keys[][]=new byte[numOK][];
      int cur=0;
      for (int i=0; i < _introHosts.length; i++) {
        if ((_introKeys[i] != null) && (_introPorts[i] > 0) && (_introTags[i] > 0)&& (_introHosts[i] != null)) {
          hosts[cur]=_introHosts[i];
          ports[cur]=_introPorts[i];
          tags[cur]=_introTags[i];
          keys[cur]=_introKeys[i];
        }
      }
      _introKeys=keys;
      _introTags=tags;
      _introPorts=ports;
      _introHosts=hosts;
      _introAddresses=new InetAddress[numOK];
    }
  }
}
