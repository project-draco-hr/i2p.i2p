{
  if (addr == null)   return;
  Properties opts=addr.getOptions();
  _host=opts.getProperty(PROP_HOST);
  if (_host != null)   _host=_host.trim();
  try {
    String port=opts.getProperty(PROP_PORT);
    if (port != null)     _port=Integer.parseInt(port);
  }
 catch (  NumberFormatException nfe) {
    _port=-1;
  }
  String key=opts.getProperty(PROP_INTRO_KEY);
  if (key != null)   _introKey=Base64.decode(key.trim());
  for (int i=MAX_INTRODUCERS; i >= 0; i--) {
    String host=opts.getProperty(PROP_INTRO_HOST_PREFIX + i);
    if (host == null)     continue;
    String port=opts.getProperty(PROP_INTRO_PORT_PREFIX + i);
    if (port == null)     continue;
    String k=opts.getProperty(PROP_INTRO_KEY_PREFIX + i);
    if (k == null)     continue;
    byte ikey[]=Base64.decode(k);
    if ((ikey == null) || (ikey.length != SessionKey.KEYSIZE_BYTES))     continue;
    String t=opts.getProperty(PROP_INTRO_TAG_PREFIX + i);
    if (t == null)     continue;
    int p=-1;
    try {
      p=Integer.parseInt(port);
      if (p <= 0)       continue;
    }
 catch (    NumberFormatException nfe) {
      continue;
    }
    long tag=-1;
    try {
      tag=Long.parseLong(t);
      if (tag <= 0)       continue;
    }
 catch (    NumberFormatException nfe) {
      continue;
    }
    if (_introHosts == null) {
      _introHosts=new String[i + 1];
      _introPorts=new int[i + 1];
      _introAddresses=new InetAddress[i + 1];
      _introKeys=new byte[i + 1][];
      _introTags=new long[i + 1];
    }
    _introHosts[i]=host;
    _introPorts[i]=p;
    _introKeys[i]=ikey;
    _introTags[i]=tag;
  }
}
