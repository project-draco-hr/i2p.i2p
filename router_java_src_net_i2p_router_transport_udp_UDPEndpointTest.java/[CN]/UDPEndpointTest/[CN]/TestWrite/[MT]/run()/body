{
  while (!_beginTest) {
    try {
      Thread.sleep(2000);
    }
 catch (    InterruptedException ie) {
    }
  }
  try {
    Thread.sleep(2000);
  }
 catch (  InterruptedException ie) {
  }
  _log.debug("Beginning to write");
  for (int curPacket=0; curPacket < 10000; curPacket++) {
    byte data[]=new byte[1024];
    _context.random().nextBytes(data);
    int curPeer=(curPacket % _endpoints.length);
    if (_endpoints[curPeer] == _endpoint)     curPeer++;
    if (curPeer >= _endpoints.length)     curPeer=0;
    short priority=1;
    long expiration=-1;
    UDPPacket packet=UDPPacket.acquire(_context);
    try {
      packet.initialize(priority,expiration,InetAddress.getLocalHost(),_endpoints[curPeer].getListenPort());
      packet.writeData(data,0,1024);
      packet.getPacket().setLength(1024);
      int outstanding=_sentNotReceived.size() + 1;
      _sentNotReceived.add(new ByteArray(data,0,1024));
      _log.debug("Sending packet " + curPacket + " with outstanding "+ outstanding);
      _endpoint.send(packet);
    }
 catch (    UnknownHostException uhe) {
      _log.error("foo!",uhe);
    }
  }
  try {
    Thread.sleep(10 * 1000);
  }
 catch (  InterruptedException e) {
  }
  System.exit(0);
}
