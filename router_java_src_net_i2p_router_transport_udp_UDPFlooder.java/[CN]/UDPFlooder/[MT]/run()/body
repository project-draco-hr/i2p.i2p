{
  while (_alive) {
    try {
synchronized (_peers) {
        if (_peers.size() <= 0)         _peers.wait();
      }
    }
 catch (    InterruptedException ie) {
    }
    for (int i=0; i < _peers.size(); i++) {
      PeerState peer=(PeerState)_peers.get(i);
      DataMessage m=new DataMessage(_context);
      byte data[]=new byte[4096];
      _context.random().nextBytes(data);
      m.setData(data);
      m.setMessageExpiration(_context.clock().now() + 10 * 1000);
      m.setUniqueId(_context.random().nextLong(I2NPMessage.MAX_ID_VALUE));
      if (true) {
        OutNetMessage msg=new OutNetMessage(_context);
        msg.setMessage(m);
        msg.setExpiration(m.getMessageExpiration());
        msg.setPriority(500);
        RouterInfo to=_context.netDb().lookupRouterInfoLocally(peer.getRemotePeer());
        if (to == null)         continue;
        msg.setTarget(to);
        _context.statManager().getStatLog().addData(peer.getRemotePeer().toBase64().substring(0,6),"udp.floodDataSent",1,0);
        _transport.send(msg);
      }
 else {
        _transport.send(m,peer);
      }
    }
    long floodDelay=calcFloodDelay();
    try {
      Thread.sleep(floodDelay);
    }
 catch (    InterruptedException ie) {
    }
  }
}
