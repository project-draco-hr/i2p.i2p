{
  if (!_keepRunning)   return 0;
  if (_log.shouldLog(Log.INFO))   _log.info("Received: " + packet);
  RemoteHostId from=packet.getRemoteHost();
  if (_transport.isInDropList(from)) {
    if (_log.shouldLog(Log.INFO))     _log.info("Ignoring packet from the drop-listed peer: " + from);
    _context.statManager().addRateData("udp.ignorePacketFromDroplist",packet.getLifetime(),0);
    packet.release();
    return 0;
  }
  packet.enqueue();
  boolean rejected=false;
  int queueSize=0;
  long headPeriod=0;
  UDPPacket head=_inboundQueue.peek();
  if (head != null) {
    headPeriod=head.getLifetime();
    if (headPeriod > MAX_QUEUE_PERIOD) {
      rejected=true;
    }
  }
  if (!rejected) {
    _inboundQueue.offer(packet);
    return 0;
  }
  packet.release();
  _context.statManager().addRateData("udp.droppedInbound",queueSize,headPeriod);
  if (_log.shouldLog(Log.WARN)) {
    queueSize=_inboundQueue.size();
    StringBuilder msg=new StringBuilder();
    msg.append("Dropping inbound packet with ");
    msg.append(queueSize);
    msg.append(" queued for ");
    msg.append(headPeriod);
    if (_transport != null)     msg.append(" packet handlers: ").append(_transport.getPacketHandlerStatus());
    _log.warn(msg.toString());
  }
  return queueSize;
}
