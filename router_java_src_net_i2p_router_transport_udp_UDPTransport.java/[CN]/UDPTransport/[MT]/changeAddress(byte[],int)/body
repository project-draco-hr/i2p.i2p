{
  boolean fixedPort=getIsPortFixed();
  boolean updated=false;
  boolean fireTest=false;
  boolean isIPv6=ourIP.length == 16;
  RouterAddress current=getCurrentExternalAddress(isIPv6);
  byte[] externalListenHost=current != null ? current.getIP() : null;
  int externalListenPort=current != null ? current.getPort() : getRequestedPort(isIPv6);
  if (_log.shouldLog(Log.INFO))   _log.info("Change address? status = " + _reachabilityStatus + " diff = "+ (_context.clock().now() - _reachabilityStatusLastUpdated)+ " old = "+ Addresses.toString(externalListenHost,externalListenPort)+ " new = "+ Addresses.toString(ourIP,ourPort));
  if ((fixedPort && externalListenPort > 0) || ourPort <= 0)   ourPort=externalListenPort;
synchronized (this) {
    if (ourPort > 0 && !eq(externalListenHost,externalListenPort,ourIP,ourPort)) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Trying to change our external address to " + Addresses.toString(ourIP,ourPort));
      RouterAddress newAddr=rebuildExternalAddress(ourIP,ourPort,true);
      updated=newAddr != null;
    }
 else {
      if (_log.shouldLog(Log.INFO))       _log.info("Same address as the current one");
    }
  }
  if (fireTest) {
    _context.statManager().addRateData("udp.addressTestInsteadOfUpdate",1);
  }
 else   if (updated) {
    _context.statManager().addRateData("udp.addressUpdated",1);
    Map<String,String> changes=new HashMap<String,String>();
    if (ourIP.length == 4 && !fixedPort)     changes.put(PROP_EXTERNAL_PORT,Integer.toString(ourPort));
    if (ourIP.length == 4)     _context.commSystem().queueLookup(ourIP);
    String oldIP=_context.getProperty(PROP_IP);
    String newIP=Addresses.toString(ourIP);
    if (ourIP.length == 4 && !newIP.equals(oldIP)) {
      long lastChanged=0;
      long now=_context.clock().now();
      String lcs=_context.getProperty(PROP_IP_CHANGE);
      if (lcs != null) {
        try {
          lastChanged=Long.parseLong(lcs);
        }
 catch (        NumberFormatException nfe) {
        }
      }
      changes.put(PROP_IP,newIP);
      changes.put(PROP_IP_CHANGE,Long.toString(now));
      _context.router().saveConfig(changes,null);
      if (oldIP != null) {
        _context.router().eventLog().addEvent(EventLog.CHANGE_IP,newIP);
      }
      if (oldIP != null && System.getProperty("wrapper.version") != null && _context.getBooleanProperty(PROP_LAPTOP_MODE) && now - lastChanged > 10 * 60 * 1000 && _context.router().getUptime() < 10 * 60 * 1000) {
        _log.log(Log.CRIT,"IP changed, restarting with a new identity and port");
        _context.router().killKeys();
        _context.router().shutdown(Router.EXIT_HARD_RESTART);
      }
    }
 else     if (ourIP.length == 4 && !fixedPort) {
      _context.router().saveConfig(changes,null);
    }
    _context.router().rebuildRouterInfo();
  }
  _testEvent.forceRunImmediately();
  return updated;
}
