{
  if (_log.shouldLog(Log.INFO))   _log.info("Dropping remote peer: " + peer + " shitlist? "+ shouldShitlist,new Exception("Dropped by"));
  if (peer.getRemotePeer() != null) {
    if (shouldShitlist) {
      long now=_context.clock().now();
      _context.statManager().addRateData("udp.droppedPeer",now - peer.getLastReceiveTime(),now - peer.getKeyEstablishedTime());
      _context.shitlist().shitlistRouter(peer.getRemotePeer(),"dropped after too many retries");
    }
 else {
      long now=_context.clock().now();
      _context.statManager().addRateData("udp.droppedPeerInactive",now - peer.getLastReceiveTime(),now - peer.getKeyEstablishedTime());
    }
synchronized (_peersByIdent) {
      _peersByIdent.remove(peer.getRemotePeer());
    }
  }
  RemoteHostId remoteId=peer.getRemoteHostId();
  if (remoteId != null) {
synchronized (_peersByRemoteHost) {
      _peersByRemoteHost.remove(remoteId);
    }
  }
  _activeThrottle.unchoke(peer.getRemotePeer());
  if (SHOULD_FLOOD_PEERS)   _flooder.removePeer(peer);
  _expireEvent.remove(peer);
}
