{
  if (_log.shouldLog(Log.INFO)) {
    long now=_context.clock().now();
    StringBuilder buf=new StringBuilder(4096);
    long timeSinceSend=now - peer.getLastSendTime();
    long timeSinceRecv=now - peer.getLastReceiveTime();
    long timeSinceAck=now - peer.getLastACKSend();
    long timeSinceSendOK=now - peer.getLastSendFullyTime();
    int consec=peer.getConsecutiveFailedSends();
    buf.append("Dropping remote peer: ").append(peer.toString()).append(" banlist? ").append(shouldBanlist);
    buf.append(" lifetime: ").append(now - peer.getKeyEstablishedTime());
    buf.append(" time since send/fully/recv/ack: ").append(timeSinceSend).append(" / ");
    buf.append(timeSinceSendOK).append(" / ");
    buf.append(timeSinceRecv).append(" / ").append(timeSinceAck);
    buf.append(" consec failures: ").append(consec);
    if (why != null)     buf.append(" cause: ").append(why);
    _log.info(buf.toString(),new Exception("Dropped by"));
  }
synchronized (_addDropLock) {
    locked_dropPeer(peer,shouldBanlist,why);
  }
  if (needsRebuild())   rebuildExternalAddress();
}
