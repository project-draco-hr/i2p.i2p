{
  boolean isValid=isValid(ourIP);
  boolean explicitSpecified=explicitAddressSpecified();
  boolean inboundRecent=_lastInboundReceivedOn + ALLOW_IP_CHANGE_INTERVAL > System.currentTimeMillis();
  if (_log.shouldLog(Log.INFO))   _log.info("External address received: " + RemoteHostId.toString(ourIP) + ":"+ ourPort+ " from "+ from.toBase64()+ ", isValid? "+ isValid+ ", explicitSpecified? "+ explicitSpecified+ ", receivedInboundRecent? "+ inboundRecent+ " status "+ _reachabilityStatus);
  if (explicitSpecified)   return;
  boolean fixedPort=getIsPortFixed();
  boolean updated=false;
  boolean fireTest=false;
  if (!isValid) {
    if (_log.shouldLog(Log.ERROR))     _log.error("The router " + from.toBase64() + " told us we have an invalid IP - "+ RemoteHostId.toString(ourIP)+ ".  Lets throw tomatoes at them");
    _context.shitlist().shitlistRouter(from,"They said we had an invalid IP");
    return;
  }
 else   if (inboundRecent && _externalListenPort > 0 && _externalListenHost != null) {
    if (_log.shouldLog(Log.INFO))     _log.info("Ignoring IP address suggestion, since we have received an inbound con recently");
  }
 else {
synchronized (this) {
      if ((_externalListenHost == null) || (!eq(_externalListenHost.getAddress(),_externalListenPort,ourIP,ourPort))) {
        if ((_reachabilityStatus == CommSystemFacade.STATUS_UNKNOWN) || (_externalListenHost == null) || (_externalListenPort <= 0)|| (_context.clock().now() - _reachabilityStatusLastUpdated > 2 * TEST_FREQUENCY)) {
          if (_log.shouldLog(Log.INFO))           _log.info("Trying to change our external address...");
          try {
            _externalListenHost=InetAddress.getByAddress(ourIP);
            if (!fixedPort)             _externalListenPort=ourPort;
            rebuildExternalAddress();
            replaceAddress(_externalAddress);
            updated=true;
          }
 catch (          UnknownHostException uhe) {
            _externalListenHost=null;
            if (_log.shouldLog(Log.INFO))             _log.info("Error trying to change our external address",uhe);
          }
        }
 else {
          fireTest=true;
          if (_log.shouldLog(Log.INFO))           _log.info("Different address, but we're fine.. (" + _reachabilityStatus + ")");
        }
      }
 else {
        if (_log.shouldLog(Log.INFO))         _log.info("Same address as the current one");
      }
    }
  }
  if (fireTest) {
    _context.statManager().addRateData("udp.addressTestInsteadOfUpdate",1,0);
    _testEvent.forceRun();
    SimpleTimer.getInstance().addEvent(_testEvent,5 * 1000);
  }
 else   if (updated) {
    _context.statManager().addRateData("udp.addressUpdated",1,0);
    if (!fixedPort)     _context.router().setConfigSetting(PROP_EXTERNAL_PORT,ourPort + "");
    _context.router().saveConfig();
    _context.router().rebuildRouterInfo();
    _testEvent.forceRun();
    SimpleTimer.getInstance().addEvent(_testEvent,5 * 1000);
  }
}
