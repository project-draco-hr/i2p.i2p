{
  if (inMsg.getType() == DatabaseStoreMessage.MESSAGE_TYPE) {
    DatabaseStoreMessage dsm=(DatabaseStoreMessage)inMsg;
    DatabaseEntry entry=dsm.getEntry();
    if (entry == null)     return;
    if (entry.getType() == DatabaseEntry.KEY_TYPE_ROUTERINFO && ((RouterInfo)entry).getNetworkId() != Router.NETWORK_ID) {
      Hash peerHash=entry.getHash();
      PeerState peer=getPeerState(peerHash);
      if (peer != null) {
        RemoteHostId remote=peer.getRemoteHostId();
        _dropList.add(remote);
        _context.statManager().addRateData("udp.dropPeerDroplist",1,0);
        SimpleScheduler.getInstance().addEvent(new RemoveDropList(remote),DROPLIST_PERIOD);
      }
      markUnreachable(peerHash);
      _context.shitlist().shitlistRouter(peerHash,"Part of the wrong network, version = " + ((RouterInfo)entry).getOption("router.version"));
      dropPeer(peerHash,false,"wrong network");
      if (_log.shouldLog(Log.WARN))       _log.warn("Dropping the peer " + peerHash.toBase64() + " because they are in the wrong net: "+ entry);
      return;
    }
 else {
      if (entry.getType() == DatabaseEntry.KEY_TYPE_ROUTERINFO) {
        if (_log.shouldLog(Log.INFO))         _log.info("Received an RI from the same net");
      }
 else {
        if (_log.shouldLog(Log.INFO))         _log.info("Received a leaseSet: " + dsm);
      }
    }
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Received another message: " + inMsg.getClass().getName());
  }
  PeerState peer=getPeerState(remoteIdentHash);
  super.messageReceived(inMsg,remoteIdent,remoteIdentHash,msToReceive,bytesReceived);
  if (peer != null)   peer.expireInboundMessages();
}
