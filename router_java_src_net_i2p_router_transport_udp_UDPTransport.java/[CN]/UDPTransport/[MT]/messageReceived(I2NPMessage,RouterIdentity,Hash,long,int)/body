{
  if (inMsg.getType() == DatabaseStoreMessage.MESSAGE_TYPE) {
    DatabaseStoreMessage dsm=(DatabaseStoreMessage)inMsg;
    if ((dsm.getRouterInfo() != null) && (dsm.getRouterInfo().getNetworkId() != Router.NETWORK_ID)) {
      Hash peerHash=dsm.getRouterInfo().getIdentity().calculateHash();
      PeerState peer=getPeerState(peerHash);
      if (peer != null) {
        RemoteHostId remote=peer.getRemoteHostId();
        boolean added=false;
        int droplistSize=0;
synchronized (_dropList) {
          if (!_dropList.contains(remote)) {
            while (_dropList.size() > MAX_DROPLIST_SIZE)             _dropList.remove(0);
            _dropList.add(remote);
            added=true;
          }
          droplistSize=_dropList.size();
        }
        if (added) {
          _context.statManager().addRateData("udp.dropPeerDroplist",droplistSize,0);
          SimpleTimer.getInstance().addEvent(new RemoveDropList(remote),DROPLIST_PERIOD);
        }
      }
      _context.shitlist().shitlistRouter(peerHash,"Part of the wrong network");
      dropPeer(peerHash);
      if (_log.shouldLog(Log.WARN))       _log.warn("Dropping the peer " + peerHash.toBase64() + " because they are in the wrong net");
      return;
    }
 else {
      if (dsm.getRouterInfo() != null) {
        if (_log.shouldLog(Log.INFO))         _log.info("Received an RI from the same net");
      }
 else {
        if (_log.shouldLog(Log.INFO))         _log.info("Received a leaseSet: " + dsm);
      }
    }
  }
 else {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Received another message: " + inMsg.getClass().getName());
  }
  PeerState peer=getPeerState(remoteIdentHash);
  super.messageReceived(inMsg,remoteIdent,remoteIdentHash,msToReceive,bytesReceived);
  if (peer != null)   peer.expireInboundMessages();
}
