{
  if (inMsg instanceof DatabaseStoreMessage) {
    DatabaseStoreMessage dsm=(DatabaseStoreMessage)inMsg;
    if (dsm.getValueType() == DatabaseStoreMessage.KEY_TYPE_ROUTERINFO) {
      Hash from=remoteIdentHash;
      if (from == null)       from=remoteIdent.getHash();
      if (from.equals(dsm.getKey())) {
        RouterInfo info=dsm.getRouterInfo();
        Set addresses=info.getAddresses();
        for (Iterator iter=addresses.iterator(); iter.hasNext(); ) {
          RouterAddress addr=(RouterAddress)iter.next();
          if (!STYLE.equals(addr.getTransportStyle()))           continue;
          Properties opts=addr.getOptions();
          if ((opts != null) && (info.isValid())) {
            String capacities=opts.getProperty(UDPAddress.PROP_CAPACITY);
            if (capacities != null) {
              if (_log.shouldLog(Log.INFO))               _log.info("Intercepting and storing the capacities for " + from.toBase64() + ": "+ capacities);
              PeerState peer=getPeerState(from);
              for (int i=0; i < capacities.length(); i++) {
                char capacity=capacities.charAt(i);
                int cap=capacity - 'A';
                if ((cap < 0) || (cap >= _peersByCapacity.length))                 continue;
                List peers=_peersByCapacity[cap];
synchronized (peers) {
                  if ((peers.size() < MAX_PEERS_PER_CAPACITY) && (!peers.contains(peer)))                   peers.add(peer);
                }
              }
            }
          }
          break;
        }
      }
    }
  }
  super.messageReceived(inMsg,remoteIdent,remoteIdentHash,msToReceive,bytesReceived);
}
