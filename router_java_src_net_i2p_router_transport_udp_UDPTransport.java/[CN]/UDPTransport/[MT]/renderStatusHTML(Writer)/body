{
  List peers=null;
synchronized (_peersByIdent) {
    peers=new ArrayList(_peersByIdent.values());
  }
  StringBuffer buf=new StringBuffer(512);
  buf.append("<b>UDP connections: ").append(peers.size()).append("</b><br />\n");
  buf.append("<table border=\"1\">\n");
  buf.append(" <tr><td><b>Peer</b></td><td><b>Location</b></td>\n");
  buf.append("     <td><b>Last send</b></td><td><b>Last recv</b></td>\n");
  buf.append("     <td><b>Lifetime</b></td><td><b>cwnd</b></td><td><b>ssthresh</b></td>\n");
  buf.append("     <td><b>Sent</b></td><td><b>Received</b></td>\n");
  buf.append(" </tr>\n");
  out.write(buf.toString());
  buf.setLength(0);
  long now=_context.clock().now();
  for (int i=0; i < peers.size(); i++) {
    PeerState peer=(PeerState)peers.get(i);
    if (now - peer.getLastReceiveTime() > 60 * 60 * 1000)     continue;
    buf.append("<tr>");
    buf.append("<td>");
    buf.append(peer.getRemotePeer().toBase64().substring(0,6));
    buf.append("</td>");
    buf.append("<td>");
    byte ip[]=peer.getRemoteIP();
    for (int j=0; j < ip.length; j++) {
      if (ip[j] < 0)       buf.append(ip[j] + 255);
 else       buf.append(ip[j]);
      if (j + 1 < ip.length)       buf.append('.');
    }
    buf.append(':').append(peer.getRemotePort());
    buf.append("</td>");
    buf.append("<td>");
    buf.append(DataHelper.formatDuration(now - peer.getLastSendTime()));
    buf.append("</td>");
    buf.append("<td>");
    buf.append(DataHelper.formatDuration(now - peer.getLastReceiveTime()));
    buf.append("</td>");
    buf.append("<td>");
    buf.append(DataHelper.formatDuration(now - peer.getKeyEstablishedTime()));
    buf.append("</td>");
    buf.append("<td>");
    buf.append(peer.getSendWindowBytes());
    buf.append("</td>");
    buf.append("<td>");
    buf.append(peer.getSlowStartThreshold());
    buf.append("</td>");
    buf.append("<td>");
    buf.append(peer.getMessagesSent());
    buf.append("</td>");
    buf.append("<td>");
    buf.append(peer.getMessagesReceived());
    buf.append("</td>");
    buf.append("</tr>");
    out.write(buf.toString());
    buf.setLength(0);
  }
  out.write("</table>\n");
}
