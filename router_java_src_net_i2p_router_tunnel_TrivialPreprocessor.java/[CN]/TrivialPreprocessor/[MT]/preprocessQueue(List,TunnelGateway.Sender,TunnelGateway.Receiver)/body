{
  long begin=System.currentTimeMillis();
  StringBuilder buf=null;
  if (_log.shouldLog(Log.DEBUG)) {
    buf=new StringBuilder(256);
    buf.append("Trivial preprocessing of ").append(pending.size()).append(" ");
  }
  while (pending.size() > 0) {
    TunnelGateway.Pending msg=(TunnelGateway.Pending)pending.remove(0);
    long beforePreproc=System.currentTimeMillis();
    byte preprocessed[][]=preprocess(msg);
    long afterPreproc=System.currentTimeMillis();
    if (buf != null)     buf.append("preprocessed into " + preprocessed.length + " fragments after "+ (afterPreproc - beforePreproc)+ ". ");
    for (int i=0; i < preprocessed.length; i++) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Preprocessed: fragment " + i + "/"+ (preprocessed.length - 1)+ " in "+ msg.getMessageId()+ ": "+ " send through "+ sender+ " receive with "+ rec);
      long beforeSend=System.currentTimeMillis();
      long id=sender.sendPreprocessed(preprocessed[i],rec);
      long afterSend=System.currentTimeMillis();
      if (buf != null)       buf.append("send of " + msg.getMessageId() + " took "+ (afterSend - beforeSend)+ ". ");
      msg.addMessageId(id);
    }
    notePreprocessing(msg.getMessageId(),msg.getFragmentNumber(),preprocessed.length,msg.getMessageIds(),null);
    if (preprocessed.length != msg.getFragmentNumber() + 1) {
      throw new RuntimeException("wtf, preprocessed " + msg.getMessageId() + " into "+ msg.getFragmentNumber()+ "/"+ preprocessed.length+ " fragments, size = "+ msg.getData().length);
    }
    if (buf != null)     buf.append("all fragments sent after " + (System.currentTimeMillis() - afterPreproc) + ". ");
  }
  if (buf != null) {
    buf.append("queue preprocessed after " + (System.currentTimeMillis() - begin) + ".");
    _log.debug(buf.toString());
  }
  return false;
}
