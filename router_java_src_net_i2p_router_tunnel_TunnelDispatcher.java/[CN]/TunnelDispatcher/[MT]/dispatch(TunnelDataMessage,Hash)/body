{
  long before=_context.clock().now();
  TunnelParticipant participant=null;
synchronized (_participants) {
    participant=(TunnelParticipant)_participants.get(msg.getTunnelId());
  }
  if (participant != null) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("dispatch to participant " + participant + ": "+ msg.getUniqueId()+ " from "+ recvFrom.toBase64().substring(0,4));
    _context.messageHistory().tunnelDispatched("message " + msg.getUniqueId() + " on tunnel "+ msg.getTunnelId().getTunnelId()+ " as participant");
    participant.dispatch(msg,recvFrom);
    _context.statManager().addRateData("tunnel.dispatchParticipant",1,0);
  }
 else {
    OutboundTunnelEndpoint endpoint=null;
synchronized (_outboundEndpoints) {
      endpoint=(OutboundTunnelEndpoint)_outboundEndpoints.get(msg.getTunnelId());
    }
    if (endpoint != null) {
      if (_log.shouldLog(Log.DEBUG))       _log.debug("dispatch where we are the outbound endpoint: " + endpoint + ": "+ msg+ " from "+ recvFrom.toBase64().substring(0,4));
      _context.messageHistory().tunnelDispatched("message " + msg.getUniqueId() + " on tunnel "+ msg.getTunnelId().getTunnelId()+ " as outbound endpoint");
      endpoint.dispatch(msg,recvFrom);
      _context.statManager().addRateData("tunnel.dispatchEndpoint",1,0);
    }
 else {
      _context.messageHistory().droppedTunnelDataMessageUnknown(msg.getUniqueId(),msg.getTunnelId().getTunnelId());
      int level=(_context.router().getUptime() > 10 * 60 * 1000 ? Log.ERROR : Log.WARN);
      if (_log.shouldLog(level))       _log.log(level,"no matching participant/endpoint for id=" + msg.getTunnelId().getTunnelId() + " expiring in "+ DataHelper.formatDuration(msg.getMessageExpiration() - _context.clock().now())+ ": existing = "+ _participants.size()+ " / "+ _outboundEndpoints.size());
    }
  }
  long dispatchTime=_context.clock().now() - before;
  _context.statManager().addRateData("tunnel.dispatchDataTime",dispatchTime,dispatchTime);
}
