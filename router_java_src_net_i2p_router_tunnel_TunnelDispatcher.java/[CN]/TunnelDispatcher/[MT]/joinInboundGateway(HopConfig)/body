{
  if (_log.shouldLog(Log.INFO))   _log.info("Joining as inbound gateway: " + cfg);
  TunnelGateway.QueuePreprocessor preproc=new TrivialRouterPreprocessor(_context);
  TunnelGateway.Sender sender=new InboundSender(_context,cfg);
  TunnelGateway.Receiver receiver=new InboundGatewayReceiver(_context,cfg);
  TunnelGateway gw=new TunnelGateway(_context,preproc,sender,receiver);
  TunnelId recvId=cfg.getReceiveTunnel();
synchronized (_inboundGateways) {
    _inboundGateways.put(recvId,gw);
  }
  int numParticipants=0;
synchronized (_participatingConfig) {
    _participatingConfig.put(recvId,cfg);
    numParticipants=_participatingConfig.size();
  }
  _context.statManager().addRateData("tunnel.participatingTunnels",numParticipants,0);
  _context.statManager().addRateData("tunnel.joinInboundGateway",1,0);
  if (cfg.getExpiration() > _lastParticipatingExpiration)   _lastParticipatingExpiration=cfg.getExpiration();
  _context.jobQueue().addJob(new LeaveTunnel(_context,cfg));
}
