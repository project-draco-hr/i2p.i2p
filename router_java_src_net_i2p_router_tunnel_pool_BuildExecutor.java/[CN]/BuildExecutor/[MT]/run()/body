{
  _isRunning=true;
  List wanted=new ArrayList(8);
  List pools=new ArrayList(8);
  boolean pendingRemaining=false;
  while (!_manager.isShutdown()) {
    try {
      _repoll=pendingRemaining;
      _manager.listPools(pools);
      for (int i=0; i < pools.size(); i++) {
        TunnelPool pool=(TunnelPool)pools.get(i);
        int howMany=pool.countHowManyToBuild();
        for (int j=0; j < howMany; j++)         wanted.add(pool);
      }
      _handler.handleInboundReplies();
      int allowed=allowed();
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Allowed: " + allowed + " wanted: "+ wanted);
      allowed=buildZeroHopTunnels(wanted,allowed);
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Zero hops built, Allowed: " + allowed + " wanted: "+ wanted);
      TunnelManagerFacade mgr=_context.tunnelManager();
      if ((mgr == null) || (mgr.selectInboundTunnel() == null) || (mgr.selectOutboundTunnel() == null)) {
synchronized (_currentlyBuilding) {
          if (!_repoll)           _currentlyBuilding.wait(5 * 1000 + _context.random().nextInt(5 * 1000));
        }
      }
 else {
        if ((allowed > 0) && (wanted.size() > 0)) {
          Collections.shuffle(wanted,_context.random());
          if (allowed > 5)           allowed=5;
          for (int i=0; (i < allowed) && (wanted.size() > 0); i++) {
            TunnelPool pool=(TunnelPool)wanted.remove(0);
            PooledTunnelCreatorConfig cfg=pool.configureNewTunnel();
            if (cfg != null) {
              if (_log.shouldLog(Log.DEBUG))               _log.debug("Configuring new tunnel " + i + " for "+ pool+ ": "+ cfg);
synchronized (_currentlyBuilding) {
                _currentlyBuilding.add(cfg);
              }
              buildTunnel(pool,cfg);
              _handler.handleInboundReplies();
            }
 else {
              i--;
            }
          }
        }
 else {
          if (_log.shouldLog(Log.DEBUG))           _log.debug("Nothin' doin, wait for a while");
          try {
synchronized (_currentlyBuilding) {
              if (!_repoll) {
                _currentlyBuilding.wait(_context.random().nextInt(5 * 1000));
              }
            }
          }
 catch (          InterruptedException ie) {
          }
        }
      }
      pendingRemaining=_handler.handleInboundRequests();
      wanted.clear();
      pools.clear();
    }
 catch (    Exception e) {
      if (_log.shouldLog(Log.CRIT))       _log.log(Log.CRIT,"B0rked in the tunnel builder",e);
    }
  }
  if (_log.shouldLog(Log.WARN))   _log.warn("Done building");
  _isRunning=false;
}
