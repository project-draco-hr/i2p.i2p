{
  BuildMessageState state=null;
  try {
    state=_inboundBuildMessages.take();
  }
 catch (  InterruptedException ie) {
    return;
  }
  if (state.msg == null) {
    _isRunning=false;
    return;
  }
  long now=_context.clock().now();
  long dropBefore=now - (BuildRequestor.REQUEST_TIMEOUT / 4);
  if (state.recvTime <= dropBefore) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Not even trying to handle/decrypt the request " + state.msg.getUniqueId() + ", since we received it a long time ago: "+ (now - state.recvTime));
    _context.statManager().addRateData("tunnel.dropLoadDelay",now - state.recvTime);
    _context.throttle().setTunnelStatus(_x("Dropping tunnel requests: Too slow"));
    return;
  }
  long lag=_context.jobQueue().getMaxLag();
  if (lag > JOB_LAG_LIMIT_TUNNEL) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Dropping tunnel request, as the job lag is " + lag);
    _context.statManager().addRateData("router.throttleTunnelCause",lag);
    _context.throttle().setTunnelStatus(_x("Dropping tunnel requests: High job lag"));
    return;
  }
  handleRequest(state);
}
