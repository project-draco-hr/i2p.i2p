{
  String peers=null;
  Properties opts=settings.getUnknownOptions();
  if (opts != null)   peers=opts.getProperty("explicitPeers");
  if (peers == null)   peers=I2PAppContext.getGlobalContext().getProperty("explicitPeers");
  Log log=ctx.logManager().getLog(ClientPeerSelector.class);
  List rv=new ArrayList();
  StringTokenizer tok=new StringTokenizer(peers,",");
  Hash h=new Hash();
  while (tok.hasMoreTokens()) {
    String peerStr=tok.nextToken();
    Hash peer=new Hash();
    try {
      peer.fromBase64(peerStr);
      if (ctx.profileOrganizer().isSelectable(peer)) {
        rv.add(peer);
      }
 else {
        if (log.shouldLog(Log.DEBUG))         log.debug("Explicit peer is not selectable: " + peerStr);
      }
    }
 catch (    DataFormatException dfe) {
      if (log.shouldLog(Log.ERROR))       log.error("Explicit peer is improperly formatted (" + peerStr + ")",dfe);
    }
  }
  int sz=rv.size();
  Collections.shuffle(rv,ctx.random());
  while (rv.size() > length)   rv.remove(0);
  if (log.shouldLog(Log.INFO)) {
    StringBuffer buf=new StringBuffer();
    if (settings.getDestinationNickname() != null)     buf.append("peers for ").append(settings.getDestinationNickname());
 else     if (settings.getDestination() != null)     buf.append("peers for ").append(settings.getDestination().toBase64());
 else     buf.append("peers for exploratory ");
    if (settings.isInbound())     buf.append(" inbound");
 else     buf.append(" outbound");
    buf.append(" peers: ").append(rv);
    buf.append(", out of ").append(sz).append(" (not including self)");
    log.info(buf.toString());
  }
  if (settings.isInbound())   rv.add(0,ctx.routerHash());
 else   rv.add(ctx.routerHash());
  return rv;
}
