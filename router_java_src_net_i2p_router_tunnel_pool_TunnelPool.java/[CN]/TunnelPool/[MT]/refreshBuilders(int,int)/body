{
  if ((_settings.getDestination() != null) && (!_context.clientManager().isLocal(_settings.getDestination())))   _alive=false;
  if (!_alive)   return 0;
  int baseTarget=_settings.getQuantity() + _settings.getBackupQuantity();
  int target=baseTarget;
  int usableTunnels=countUsableTunnels(timeFactor);
  if (_settings.isExploratory() && target > 0 && maxBuild > 1)   target+=6;
  if ((target > usableTunnels))   if ((target > usableTunnels) && (_log.shouldLog(Log.INFO)))   _log.info(toString() + ": refreshing builders, previously had " + usableTunnels+ ", want a total of "+ target+ ", creating "+ (target - usableTunnels)+ " new ones ("+ maxBuild+ " max).");
  if (target > usableTunnels) {
    long minute=_context.clock().now();
    minute=minute - (minute % 60 * 1000);
    if (_currentMinute < minute) {
      _currentMinute=minute;
      _buildsThisMinute=0;
    }
    int build=(target - usableTunnels);
    if (maxBuild > 0 && build > maxBuild)     build=maxBuild;
    int buildThrottle=MAX_BUILDS_PER_MINUTE;
    long lag=_context.jobQueue().getMaxLag();
    int netErrors=(int)_context.statManager().getRate("udp.sendException").getRate(60 * 1000).getLastEventCount();
    if (lag > 3 * 1000 || netErrors > 5) {
      if (_log.shouldLog(Log.WARN))       _log.warn("Throttling tunnel builds lag = " + lag + "; net errors = "+ netErrors);
      if (_settings.isExploratory())       buildThrottle=3;
 else       buildThrottle=1;
    }
 else     if (lag > 1 * 1000) {
      if (_settings.isExploratory())       buildThrottle=5;
 else       buildThrottle=2;
    }
    if (build > (buildThrottle - _buildsThisMinute))     build=(buildThrottle - _buildsThisMinute);
    if (build <= 0)     return 0;
    if ((_settings.isExploratory() && baseTarget > countUsableTunnels(1)) || ((!_settings.isExploratory()) && baseTarget > countUsableTunnels(0)) || ((!_settings.isExploratory()) && countUsableTunnels(1) == 0))     _settings.setLengthOverride(1);
 else     _settings.setLengthOverride(0);
    int wanted=build;
    build=_manager.allocateBuilds(build);
    if ((wanted != build) && (_log.shouldLog(Log.ERROR)))     _log.error("Wanted to build " + wanted + " tunnels, but throttled down to "+ build+ ", due to concurrent requests (cpu overload?)");
    for (int i=0; i < build; i++)     _builder.buildTunnel(_context,this);
    _buildsThisMinute+=build;
    return build;
  }
 else {
    return 0;
  }
}
