{
  int part=getParticipatingCount();
  if (part <= 0)   return 0d;
  List<TunnelPool> pools=new ArrayList<TunnelPool>();
  listPools(pools);
  int count=0;
  for (int i=0; i < pools.size(); i++) {
    TunnelPool pool=pools.get(i);
    count+=pool.size() * pool.getSettings().getLength();
  }
  if (count <= 0)   return 100d;
  return Math.min(part / (double)count,100d);
}
