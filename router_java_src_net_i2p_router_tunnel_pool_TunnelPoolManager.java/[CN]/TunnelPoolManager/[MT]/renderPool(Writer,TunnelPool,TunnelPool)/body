{
  List tunnels=null;
  if (in == null)   tunnels=new ArrayList();
 else   tunnels=in.listTunnels();
  if (outPool != null)   tunnels.addAll(outPool.listTunnels());
  long processedIn=(in != null ? in.getLifetimeProcessed() : 0);
  long processedOut=(outPool != null ? outPool.getLifetimeProcessed() : 0);
  out.write("<table border=\"1\"><tr><td><b>Direction</b></td><td><b>Expiration</b></td><td><b>Usage</b></td><td align=\"left\">Hops (gateway first)</td></tr>\n");
  int live=0;
  for (int i=0; i < tunnels.size(); i++) {
    TunnelInfo info=(TunnelInfo)tunnels.get(i);
    long timeLeft=info.getExpiration() - _context.clock().now();
    if (timeLeft <= 0)     continue;
    live++;
    if (info.isInbound())     out.write("<tr><td><b>inbound</b></td>");
 else     out.write("<tr><td><b>outbound</b></td>");
    out.write("<td align=right>" + DataHelper.formatDuration(timeLeft) + "</td>\n");
    out.write("<td align=right>" + info.getProcessedMessagesCount() + "KB</td>\n");
    for (int j=0; j < info.getLength(); j++) {
      Hash peer=info.getPeer(j);
      String cap=getCapacity(peer);
      TunnelId id=(info.isInbound() ? info.getReceiveTunnelId(j) : info.getSendTunnelId(j));
      if (_context.routerHash().equals(peer))       out.write("<td><i>" + peer.toBase64().substring(0,4) + (id == null ? "" : ":" + id)+ "</i>"+ cap+ "</td>");
 else       out.write("<td>" + peer.toBase64().substring(0,4) + (id == null ? "" : ":" + id)+ cap+ "</td>");
    }
    out.write("</tr>\n");
    if (info.isInbound())     processedIn+=info.getProcessedMessagesCount();
 else     processedOut+=info.getProcessedMessagesCount();
  }
  out.write("</table>\n");
  List pending=in.listPending();
  for (int i=0; i < pending.size(); i++) {
    TunnelInfo info=(TunnelInfo)pending.get(i);
    out.write("In progress: <code>" + info.toString() + "</code><br />\n");
  }
  live+=pending.size();
  pending=outPool.listPending();
  for (int i=0; i < pending.size(); i++) {
    TunnelInfo info=(TunnelInfo)pending.get(i);
    out.write("In progress: <code>" + info.toString() + "</code><br />\n");
  }
  live+=pending.size();
  if (live <= 0)   out.write("<b>No tunnels, waiting for the grace period to end</b><br />\n");
  out.write("Lifetime bandwidth usage: " + processedIn + "KB in, "+ processedOut+ "KB out<br />");
}
