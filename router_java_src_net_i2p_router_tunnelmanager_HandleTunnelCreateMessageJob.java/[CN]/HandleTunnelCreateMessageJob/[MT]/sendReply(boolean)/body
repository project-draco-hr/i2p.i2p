{
  if (_log.shouldLog(Log.DEBUG))   _log.debug("Sending reply to a tunnel create of id " + _message.getTunnelId() + " with ok ("+ ok+ ") to router "+ _message.getReplyBlock().getRouter().toBase64());
  MessageHistory.getInstance().receiveTunnelCreate(_message.getTunnelId(),_message.getNextRouter(),new Date(Clock.getInstance().now() + 1000 * _message.getTunnelDurationSeconds()),ok,_message.getReplyBlock().getRouter());
  TunnelCreateStatusMessage msg=new TunnelCreateStatusMessage();
  msg.setFromHash(Router.getInstance().getRouterInfo().getIdentity().getHash());
  msg.setTunnelId(_message.getTunnelId());
  if (ok) {
    msg.setStatus(TunnelCreateStatusMessage.STATUS_SUCCESS);
  }
 else {
    msg.setStatus(TunnelCreateStatusMessage.STATUS_FAILED_OVERLOADED);
  }
  msg.setMessageExpiration(new Date(Clock.getInstance().now() + 60 * 1000));
  SendReplyMessageJob job=new SendReplyMessageJob(_message.getReplyBlock(),msg,PRIORITY);
  JobQueue.getInstance().addJob(job);
}
