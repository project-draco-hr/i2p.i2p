{
  List tunnels=new LinkedList();
  for (int i=pool.getFreeTunnelCount(); i < criteria.getMinimumTunnelsRequired(); i++) {
    if (_log.shouldLog(Log.WARN))     _log.warn("Building fake tunnels because the inbound tunnels weren't sufficient");
    pool.buildFakeTunnels();
  }
  for (Iterator iter=pool.getFreeTunnels().iterator(); iter.hasNext(); ) {
    TunnelId id=(TunnelId)iter.next();
    TunnelInfo info=pool.getFreeTunnel(id);
    if (info == null)     continue;
    if (info.getIsReady()) {
      tunnels.add(id);
    }
 else {
      _log.debug("Inbound tunnel " + id + " is not ready?! "+ new Date(info.getSettings().getExpiration()));
    }
  }
  List ordered=randomize(pool,tunnels);
  List rv=new ArrayList(criteria.getMinimumTunnelsRequired());
  for (Iterator iter=ordered.iterator(); iter.hasNext() && (rv.size() < criteria.getMinimumTunnelsRequired()); ) {
    rv.add(iter.next());
  }
  _log.info("Selecting inbound tunnelIds [tunnelIds ready: " + tunnels.size() + ", rv: "+ rv+ "]");
  return rv;
}
