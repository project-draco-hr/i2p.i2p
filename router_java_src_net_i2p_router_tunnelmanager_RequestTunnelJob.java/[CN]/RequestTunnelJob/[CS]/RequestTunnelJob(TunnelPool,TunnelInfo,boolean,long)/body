{
  _pool=pool;
  _tunnelGateway=tunnelGateway;
  _toBeRequested=new ArrayList();
  _timeoutMs=timeoutMs;
  _expiration=-1;
  _isInbound=isInbound;
  _failedTunnelParticipants=new HashSet();
  _complete=false;
  List participants=new ArrayList();
  TunnelInfo cur=_tunnelGateway;
  while (cur != null) {
    if (_log.shouldLog(Log.DEBUG))     _log.debug("Tunnel " + cur.getTunnelId() + " includes "+ cur.getThisHop().toBase64());
    participants.add(cur);
    cur=cur.getNextHopInfo();
  }
  if (isInbound) {
    if (_log.shouldLog(Log.INFO))     _log.info("Requesting inbound tunnel " + _tunnelGateway.getTunnelId() + " with "+ participants.size()+ " participants in it");
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info("Requesting outbound tunnel " + _tunnelGateway.getTunnelId() + " with "+ participants.size()+ " participants in it");
  }
  _timeoutMs*=participants.size() + 1;
  _toBeRequested=new ArrayList(participants.size());
  for (int i=participants.size() - 1; i >= 0; i--)   _toBeRequested.add(participants.get(i));
}
