{
  TunnelSelectionCriteria criteria=new TunnelSelectionCriteria();
  criteria.setAnonymityPriority(66);
  criteria.setReliabilityPriority(66);
  criteria.setLatencyPriority(33);
  criteria.setMaximumTunnelsRequired(1);
  criteria.setMinimumTunnelsRequired(1);
  List ids=TunnelManagerFacade.getInstance().selectInboundTunnelIds(criteria);
  if (ids.size() <= 0) {
    if (_log.shouldLog(Log.ERROR))     _log.error("No inbound tunnels to receive the tunnel create messages.  Argh",new Exception("Tunnels suck.  whats up?"));
    return null;
  }
 else {
    TunnelInfo gateway=null;
    TunnelId id=null;
    for (int i=0; i < ids.size(); i++) {
      id=(TunnelId)ids.get(i);
      gateway=TunnelManagerFacade.getInstance().getTunnelInfo(id);
      if (gateway != null)       break;
    }
    if (gateway != null) {
      TunnelGateway gw=new TunnelGateway(id,gateway.getThisHop());
      if (_log.shouldLog(Log.DEBUG))       _log.debug("Inbound tunnel gateway: " + id + " on router "+ gateway.getThisHop());
      return gw;
    }
 else {
      if (_log.shouldLog(Log.ERROR))       _log.error("No gateway found?!",new Exception("No gateway"));
      return null;
    }
  }
}
