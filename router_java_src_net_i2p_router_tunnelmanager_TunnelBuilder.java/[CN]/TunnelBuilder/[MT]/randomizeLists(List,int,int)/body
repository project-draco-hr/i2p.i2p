{
  List tunnels=new ArrayList(numTunnels);
  if (peerHashes.size() == 0) {
    if (_log.shouldLog(Log.INFO))     _log.info("No peer hashes provided");
    return tunnels;
  }
 else {
    if (_log.shouldLog(Log.INFO))     _log.info("# peers randomizing: " + peerHashes + " into "+ numTunnels+ " tunnels");
  }
  for (int i=0; i < numTunnels; i++) {
    int startOn=_context.random().nextInt(peerHashes.size());
    List peers=new ArrayList();
    for (int j=0; j < numPerTunnel; j++) {
      int k=(j + startOn) % peerHashes.size();
      Hash peer=(Hash)peerHashes.get(k);
      if (!peers.contains(peer))       peers.add(peer);
    }
    if (_log.shouldLog(Log.INFO))     _log.info("Tunnel " + i + " ["+ numPerTunnel+ "/("+ startOn+ ")]: "+ peers);
    tunnels.add(peers);
  }
  if (_log.shouldLog(Log.INFO))   _log.info("Tunnels: " + tunnels);
  return tunnels;
}
