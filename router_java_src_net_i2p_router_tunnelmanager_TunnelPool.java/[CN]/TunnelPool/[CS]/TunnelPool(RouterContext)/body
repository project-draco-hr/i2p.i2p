{
  _context=ctx;
  _log=ctx.logManager().getLog(TunnelPool.class);
  _context.statManager().createFrequencyStat("tunnel.failFrequency","How often do tunnels prematurely fail (after being successfully built)?","Tunnels",new long[]{60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("tunnel.failAfterTime","How long do tunnels that fail prematurely last before failing?","Tunnels",new long[]{5 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("tunnel.inboundMessagesProcessed","How many messages does an inbound tunnel process in its lifetime?","Tunnels",new long[]{10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("tunnel.outboundMessagesProcessed","How many messages does an inbound tunnel process in its lifetime?","Tunnels",new long[]{10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("tunnel.participatingMessagesProcessed","How many messages does an inbound tunnel process in its lifetime?","Tunnels",new long[]{10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("tunnel.participatingMessagesProcessedActive","How many messages beyond the average were processed in a more-than-average tunnel's lifetime?","Tunnels",new long[]{10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("tunnel.participatingBytesProcessed","How many bytes does an inbound tunnel process in its lifetime?","Tunnels",new long[]{10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _context.statManager().createRateStat("tunnel.participatingBytesProcessedActive","How many bytes beyond the average were processed in a more-than-average tunnel's lifetime?","Tunnels",new long[]{10 * 60 * 1000l,60 * 60 * 1000l,24 * 60 * 60* 1000l});
  _isLive=true;
  _persistenceHelper=new TunnelPoolPersistenceHelper(_context);
  _tunnelBuilder=new TunnelBuilder(_context);
}
