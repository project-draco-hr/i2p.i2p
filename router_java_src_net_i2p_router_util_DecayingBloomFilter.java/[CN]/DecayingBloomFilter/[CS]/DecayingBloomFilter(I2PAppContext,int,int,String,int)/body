{
  _context=context;
  _log=context.logManager().getLog(DecayingBloomFilter.class);
  _entryBytes=entryBytes;
  _name=name;
  int k=DEFAULT_K;
  if (m > DEFAULT_M) {
    k--;
    if (m > 26) {
      k--;
      if (m > 29)       throw new IllegalArgumentException("Max m is 29");
    }
  }
  _current=new BloomSHA1(m,k);
  _previous=new BloomSHA1(m,k);
  _durationMs=durationMs;
  int numExtenders=(32 + (entryBytes - 1)) / entryBytes - 1;
  if (numExtenders < 0)   numExtenders=0;
  _extenders=new byte[numExtenders][entryBytes];
  for (int i=0; i < numExtenders; i++)   _context.random().nextBytes(_extenders[i]);
  if (numExtenders > 0) {
    _extended=new byte[32];
    _longToEntry=new byte[_entryBytes];
    _longToEntryMask=(1l << (_entryBytes * 8l)) - 1;
  }
 else {
    _extended=null;
    _longToEntry=null;
    _longToEntryMask=0;
  }
  _keepDecaying=true;
  if (_durationMs == 60 * 60 * 1000) {
    _decayEvent=new DecayHourlyEvent();
  }
 else {
    _decayEvent=new DecayEvent();
    _decayEvent.schedule(_durationMs);
  }
  if (_log.shouldLog(Log.WARN))   _log.warn("New DBF " + name + " m = "+ m+ " k = "+ k+ " entryBytes = "+ entryBytes+ " numExtenders = "+ numExtenders+ " cycle (s) = "+ (durationMs / 1000));
  context.statManager().createRateStat("router.decayingBloomFilter." + name + ".size","Size","Router",new long[]{10 * Math.max(60 * 1000,durationMs)});
  context.statManager().createRateStat("router.decayingBloomFilter." + name + ".dups","1000000 * Duplicates/Size","Router",new long[]{10 * Math.max(60 * 1000,durationMs)});
  context.statManager().createRateStat("router.decayingBloomFilter." + name + ".log10(falsePos)","log10 of the false positive rate (must have net.i2p.util.DecayingBloomFilter=DEBUG)","Router",new long[]{10 * Math.max(60 * 1000,durationMs)});
  context.addShutdownTask(new Shutdown());
}
