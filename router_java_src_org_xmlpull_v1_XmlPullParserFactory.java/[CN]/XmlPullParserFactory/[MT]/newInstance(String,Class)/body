{
  if (context == null) {
    context=referenceContextClass;
  }
  String classNamesLocation=null;
  if (classNames == null || classNames.length() == 0 || "DEFAULT".equals(classNames)) {
    try {
      InputStream is=context.getResourceAsStream(RESOURCE_NAME);
      if (is == null)       throw new XmlPullParserException("resource not found: " + RESOURCE_NAME + " make sure that parser implementing XmlPull API is available");
      final StringBuilder sb=new StringBuilder();
      while (true) {
        final int ch=is.read();
        if (ch < 0)         break;
 else         if (ch > ' ')         sb.append((char)ch);
      }
      is.close();
      classNames=sb.toString();
    }
 catch (    Exception e) {
      throw new XmlPullParserException(null,null,e);
    }
    classNamesLocation="resource " + RESOURCE_NAME + " that contained '"+ classNames+ "'";
  }
 else {
    classNamesLocation="parameter classNames to newInstance() that contained '" + classNames + "'";
  }
  XmlPullParserFactory factory=null;
  final Vector parserClasses=new Vector();
  final Vector serializerClasses=new Vector();
  int pos=0;
  while (pos < classNames.length()) {
    int cut=classNames.indexOf(',',pos);
    if (cut == -1)     cut=classNames.length();
    final String name=classNames.substring(pos,cut);
    Class candidate=null;
    Object instance=null;
    try {
      candidate=Class.forName(name);
      instance=candidate.newInstance();
    }
 catch (    Exception e) {
    }
    if (candidate != null) {
      boolean recognized=false;
      if (instance instanceof XmlPullParser) {
        parserClasses.addElement(candidate);
        recognized=true;
      }
      if (instance instanceof XmlSerializer) {
        serializerClasses.addElement(candidate);
        recognized=true;
      }
      if (instance instanceof XmlPullParserFactory) {
        if (factory == null) {
          factory=(XmlPullParserFactory)instance;
        }
        recognized=true;
      }
      if (!recognized) {
        throw new XmlPullParserException("incompatible class: " + name);
      }
    }
    pos=cut + 1;
  }
  if (factory == null) {
    factory=new XmlPullParserFactory();
  }
  factory.parserClasses=parserClasses;
  factory.serializerClasses=serializerClasses;
  factory.classNamesLocation=classNamesLocation;
  return factory;
}
