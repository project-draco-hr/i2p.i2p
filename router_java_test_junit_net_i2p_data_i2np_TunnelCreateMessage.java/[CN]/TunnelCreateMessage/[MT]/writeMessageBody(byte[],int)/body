{
  if (_nextRouter == null)   System.arraycopy(INVALID_HASH.getData(),0,data,offset,Hash.HASH_LENGTH);
 else   System.arraycopy(_nextRouter.getData(),0,data,offset,Hash.HASH_LENGTH);
  offset+=Hash.HASH_LENGTH;
  if (_nextTunnelId == null)   DataHelper.toLong(data,offset,4,0);
 else   DataHelper.toLong(data,offset,4,_nextTunnelId.getTunnelId());
  offset+=4;
  DataHelper.toLong(data,offset,2,_durationSeconds);
  offset+=2;
  System.arraycopy(_layerKey.getData(),0,data,offset,SessionKey.KEYSIZE_BYTES);
  offset+=SessionKey.KEYSIZE_BYTES;
  System.arraycopy(_ivKey.getData(),0,data,offset,SessionKey.KEYSIZE_BYTES);
  offset+=SessionKey.KEYSIZE_BYTES;
  if (_optionsCache == null) {
    try {
      _optionsCache=DataHelper.toProperties(_options);
    }
 catch (    DataFormatException dfe) {
      throw new I2NPMessageException("Error reading the options",dfe);
    }
  }
  System.arraycopy(_optionsCache,0,data,offset,_optionsCache.length);
  offset+=_optionsCache.length;
  System.arraycopy(_replyGateway.getData(),0,data,offset,Hash.HASH_LENGTH);
  offset+=Hash.HASH_LENGTH;
  DataHelper.toLong(data,offset,4,_replyTunnel.getTunnelId());
  offset+=4;
  System.arraycopy(_replyTag.getData(),0,data,offset,SessionTag.BYTE_LENGTH);
  offset+=SessionTag.BYTE_LENGTH;
  System.arraycopy(_replyKey.getData(),0,data,offset,SessionKey.KEYSIZE_BYTES);
  offset+=SessionKey.KEYSIZE_BYTES;
  DataHelper.toLong(data,offset,4,_nonce);
  offset+=4;
  if (_certificateCache == null)   _certificateCache=_certificate.toByteArray();
  System.arraycopy(_certificateCache,0,data,offset,_certificateCache.length);
  offset+=_certificateCache.length;
  DataHelper.toBoolean(data,offset,_isGateway);
  offset+=DataHelper.BOOLEAN_LENGTH;
  return offset;
}
