{
  PendingGatewayMessage pending1=createPending(10,false,false);
  ArrayList<PendingGatewayMessage> messages=new ArrayList<PendingGatewayMessage>();
  messages.add(pending1);
  PendingGatewayMessage pending2=createPending(1024,false,false);
  TunnelGateway.QueuePreprocessor pre=createPreprocessor(_context);
  SenderImpl sender=new SenderImpl();
  DefragmentedReceiverImpl handleReceiver=new DefragmentedReceiverImpl(pending1.getData(),pending2.getData());
  FragmentHandler handler=new FragmentHandler(_context,handleReceiver);
  ReceiverImpl receiver=new ReceiverImpl(handler,0);
  byte msg[]=pending1.getData();
  boolean keepGoing=true;
  boolean alreadyAdded=false;
  while (keepGoing) {
    keepGoing=pre.preprocessQueue(messages,new SenderImpl(),receiver);
    if (keepGoing) {
      try {
        Thread.sleep(150);
      }
 catch (      InterruptedException ie) {
      }
      if (!alreadyAdded) {
        messages.add(pending2);
        alreadyAdded=true;
      }
    }
  }
  assertTrue(handleReceiver.receivedOk());
}
