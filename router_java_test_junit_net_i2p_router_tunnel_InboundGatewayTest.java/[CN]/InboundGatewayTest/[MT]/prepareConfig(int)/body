{
  Hash peers[]=new Hash[numHops];
  byte tunnelIds[][]=new byte[numHops][4];
  for (int i=0; i < numHops; i++) {
    peers[i]=new Hash();
    peers[i].setData(new byte[Hash.HASH_LENGTH]);
    _context.random().nextBytes(peers[i].getData());
    _context.random().nextBytes(tunnelIds[i]);
  }
  TunnelCreatorConfig config=new TunnelCreatorConfig(_context,numHops,false);
  for (int i=0; i < numHops; i++) {
    config.setPeer(i,peers[i]);
    HopConfig cfg=config.getConfig(i);
    cfg.setExpiration(_context.clock().now() + 60000);
    cfg.setIVKey(_context.keyGenerator().generateSessionKey());
    cfg.setLayerKey(_context.keyGenerator().generateSessionKey());
    if (i > 0)     cfg.setReceiveFrom(peers[i - 1]);
 else     cfg.setReceiveFrom(null);
    cfg.setReceiveTunnelId(tunnelIds[i]);
    if (i < numHops - 1) {
      cfg.setSendTo(peers[i + 1]);
      cfg.setSendTunnelId(tunnelIds[i + 1]);
    }
 else {
      cfg.setSendTo(null);
      cfg.setSendTunnelId(null);
    }
  }
  return config;
}
